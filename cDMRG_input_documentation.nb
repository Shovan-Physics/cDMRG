(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1721720,      32738]
NotebookOptionsPosition[   1679698,      32079]
NotebookOutlinePosition[   1680091,      32095]
CellTagsIndexPosition[   1680048,      32092]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Documentation of \[OpenCurlyDoubleQuote]cDMRG_input\
\[CloseCurlyDoubleQuote]", "Title",
 CellChangeTimes->{{3.837070699215809*^9, 
  3.837070725324115*^9}},ExpressionUUID->"4181abd9-53fc-435f-812f-\
e7c5e5fa50ae"],

Cell[CellGroupData[{

Cell["Constructing basis functions", "Chapter",
 CellChangeTimes->{{3.836883871836611*^9, 3.8368838812788982`*^9}, {
  3.836883919047812*^9, 
  3.8368839295055237`*^9}},ExpressionUUID->"a5b07424-39f9-4b4f-b7c8-\
2c764e27c424"],

Cell[TextData[{
 "As detailed in the supplement, we build our local basis out of symmetrized \
monomials written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "1"], ",", 
     SubscriptBox["p", "2"], ","}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fcc57543-ceaf-409a-8bf4-16bb6d0bc285"],
 "..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "n"], TraditionalForm]],ExpressionUUID->
  "d2f2e899-6edd-4d1a-a86e-813cbbb45f06"],
 "}",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubsuperscriptBox["x", "1", 
        SubscriptBox["p", "1"]], 
       SubsuperscriptBox["x", "2", 
        SubscriptBox["p", "2"]]}], "..."}], 
     SubsuperscriptBox["x", "n", 
      SubscriptBox["p", "n"]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "317b7a6b-4113-4128-80c6-0537cf6a8cb8"],
 " when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "<", 
      SubscriptBox["x", "2"], "<"}], "..."}], "<", 
    SubscriptBox["x", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ac328ee4-d191-47f1-aee3-da9120401964"],
 ".  Otherwise we permute.  We work on the domain [0,1], then later rescale.  \
These choices are made so that the overlaps are quick to calculate.  Note, \
the monomials are non-orthogonal."
}], "Text",
 CellChangeTimes->{{3.792832232913176*^9, 3.7928323616672773`*^9}, {
   3.836881378415079*^9, 3.836881615521738*^9}, 
   3.836889965191186*^9},ExpressionUUID->"5effc967-4568-46e2-8210-\
9b931397e275"],

Cell[CellGroupData[{

Cell["Building monomials", "Section",
 CellChangeTimes->{{3.836883802297799*^9, 
  3.8368838050917463`*^9}},ExpressionUUID->"f53c4366-9ab9-4fbb-b9f5-\
94292b5f9599"],

Cell[TextData[{
 "Generate all monomials with maximum degree ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "max"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7927f4d4-fe45-4dec-9fba-01a5e7f1d375"],
 ", i.e.,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["p", "1"], "+", 
       SubscriptBox["p", "2"], "+"}], "..."}], "+", 
     SubscriptBox["p", "n"]}], "<=", 
    SubscriptBox["d", "max"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ae1194c6-7265-4965-bbb0-eaec68412d7d"],
 "."
}], "Text",
 CellChangeTimes->{{3.836881863566267*^9, 3.836881905959022*^9}, 
   3.8368819416896133`*^9, {3.836883682288168*^9, 
   3.836883682425157*^9}},ExpressionUUID->"5c1a3c91-47ed-4040-9d8c-\
4bc3ac78e1e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"All", " ", "n"}], "-", 
    RowBox[{
    "variable", " ", "monomials", " ", "with", " ", "degree", " ", "d"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"allmonomialsfixedorder", "[", 
      RowBox[{"n_Integer", ",", "d_Integer"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"part", "=", 
         RowBox[{"IntegerPartitions", "[", 
          RowBox[{
           RowBox[{"d", "+", "n"}], ",", 
           RowBox[{"{", "n", "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Permutations", "/@", 
          RowBox[{"(", 
           RowBox[{"part", "-", "1"}], ")"}]}], ",", "1"}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"All", " ", "n"}], "-", 
     RowBox[{
     "variable", " ", "monomials", " ", "with", " ", "maximum", " ", "degree",
       " ", 
      SubscriptBox["d", "max"]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"allmonomials", "[", 
      RowBox[{"n_Integer", ",", "dmax_Integer"}], "]"}], ":=", 
     RowBox[{"Join", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"allmonomialsfixedorder", "[", 
         RowBox[{"n", ",", "d"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "0", ",", "dmax"}], "}"}]}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.836881911439969*^9, 3.836881981466363*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"685b1810-df65-4b85-a201-a56e43fe6286"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allmonomials", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"bf090170-3f59-4e68-84f3-2dfa58848aa3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.836882042746497*^9, 3.83688205626092*^9}, 
   3.837059877294203*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"322bb47c-4343-43ad-b368-600d70becd52"]
}, Open  ]],

Cell[TextData[{
 "We won\[CloseCurlyQuote]t need it very often, but here is the recipe for \
making the monomials  (Remember these are only for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "[", "0", "]"}], "<", 
    RowBox[{"x", "[", "1", "]"}], "<", 
    RowBox[{"x", "[", "2", "]"}]}], TraditionalForm]],ExpressionUUID->
  "456c94c5-af29-4c8e-898e-2d3f29455de3"],
 ")."
}], "Text",
 CellChangeTimes->{{3.792832968438149*^9, 3.792833007722639*^9}, {
  3.836882129566284*^9, 
  3.836882147383738*^9}},ExpressionUUID->"707d70be-4dcb-4219-bb66-\
6088afad65e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tupletomonomial", "[", "mon_", "]"}], ":=", 
  RowBox[{"Times", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Length", "[", "mon", "]"}]}], "]"}], "^", "mon"}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.792843739007142*^9, 3.792843803176641*^9}, {
  3.836882155348373*^9, 3.836882155476509*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"c4aa536a-36ea-4f6d-9875-797a5de21f8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tupletomonomial", "/@", 
  RowBox[{"allmonomials", "[", 
   RowBox[{"3", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792843777983816*^9, 3.792843785242988*^9}, {
  3.836882164134678*^9, 3.836882165045793*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"7a0d4deb-8607-4406-9a7f-28b1b3c74a93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"x", "[", "1", "]"}], ",", 
   RowBox[{"x", "[", "2", "]"}], ",", 
   RowBox[{"x", "[", "3", "]"}], ",", 
   SuperscriptBox[
    RowBox[{"x", "[", "1", "]"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"x", "[", "2", "]"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"x", "[", "3", "]"}], "2"], ",", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], " ", 
    RowBox[{"x", "[", "2", "]"}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], " ", 
    RowBox[{"x", "[", "3", "]"}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "3", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7928437856949*^9, 3.792843804600458*^9}, 
   3.793182426240347*^9, 3.836632002104393*^9, 3.836750485927361*^9, {
   3.8368821595661297`*^9, 3.836882165589829*^9}, 3.8370604662573223`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"f9f8d120-4e2e-4294-b9ff-1e6461b091d9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Overlaps", "Section",
 CellChangeTimes->{{3.836883802297799*^9, 
  3.8368838183157682`*^9}},ExpressionUUID->"7e0d547b-9540-48e1-8b1e-\
a6756cccbb69"],

Cell[TextData[{
 "Routine to calculate the integral of a symmetrized monomial (up to n!), \
defined as \[ScriptCapitalI](p) in the supplement [Eq. (S15)].  We will need \
this for calculating overlaps.\nmonint[",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "1"], ",", 
     SubscriptBox["p", "2"], ","}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2c85a984-404a-4c17-81a2-cbe427350e3f"],
 "..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "n"], TraditionalForm]],ExpressionUUID->
  "f3d4e783-45e0-45dd-801b-d9f169d0da7e"],
 "}] = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubscriptBox["dx", "n"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", 
        SubscriptBox["x", "n"]], 
       SubscriptBox["dx", 
        RowBox[{"n", "-", "1"}]]}]}]}], "..."}], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     SubscriptBox["x", "2"]], 
    RowBox[{
     SubscriptBox["dx", "1"], 
     FormBox[
      RowBox[{
       RowBox[{
        RowBox[{
         SubsuperscriptBox["x", "1", 
          SubscriptBox["p", "1"]], 
         SubsuperscriptBox["x", "2", 
          SubscriptBox["p", "2"]]}], "..."}], 
       SubsuperscriptBox["x", "n", 
        SubscriptBox["p", "n"]]}],
      TraditionalForm]}]}]}]],ExpressionUUID->
  "cd214353-ae7e-47b2-b7ee-c4645e23bffa"],
 "."
}], "Text",
 CellChangeTimes->{{3.836882272738668*^9, 3.836882283872634*^9}, {
  3.8368823396064243`*^9, 3.8368824849529943`*^9}, {3.836882517065336*^9, 
  3.836882534835256*^9}, {3.836885052314157*^9, 
  3.8368850580487547`*^9}},ExpressionUUID->"8b46e874-7390-469c-a563-\
88d8dfa3bb75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"monint", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"mon", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
    RowBox[{"1.", "/", 
     RowBox[{"Times", "@@", 
      RowBox[{"Accumulate", "[", 
       RowBox[{"mon", "+", "1."}], "]"}]}]}], ",", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}], ",", 
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.837059896113434*^9, 3.837059897065428*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ed964fe7-8b66-469e-b005-9d17160e011e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], "}"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "mon", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   FractionBox["1.`", 
                    RowBox[{"Times", "@@", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"mon", "+", "1.`"}], "]"}]}]], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Real], 1}}, {{3, 1, 0}, {3, 0, 
   2}}, {{0, {2, 0, 0}}, {1., {3, 0, 0}}}, {0, 5, 4, 0, 
   4}, {{41, 257, 3, 0, 0, 3, 1, 0, 3, 1, 3}, {
    42, "Accumulate", 3, 1, 3, 2, 0, 0, 3, 1, 1}, {7, 0, 2}, {33, 1, 2}, {6, 
    0, 3}, {3, 4}, {37, 1, 3, 3, 1}, {16, 2, 1, 3}, {7, 3, 2}, {4, 3, 
    2, -3}, {40, 60, 3, 0, 2, 3, 0, 3}, {16, 0, 3, 2}, {1}}, 
   Function[{$CellContext`mon}, 1./Apply[Times, 
     Accumulate[$CellContext`mon + 1.]]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction1.dylib", 
    "compiledFunction1", {{Real, 1, "Constant"}}, Real]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8368825623889723`*^9, {3.837059894258272*^9, 3.837059898068699*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"5ebf2048-136a-4e0b-9d59-8730395a5277"]
}, Open  ]],

Cell[TextData[{
 "Here is integrating a 30-particle state {1,1,...,1}, for which the integral \
should be  monint[{1,1,...,1}] = 1/(n! ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "n"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b616dda5-b65f-456f-99e2-38b604c19bb0"],
 ")."
}], "Text",
 CellChangeTimes->{{3.792832689742922*^9, 3.792832708712143*^9}, {
  3.7928438423840857`*^9, 3.7928438502112103`*^9}, {3.836882639305966*^9, 
  3.836882661608306*^9}, {3.836882781196698*^9, 3.836882876297154*^9}, {
  3.836894553101925*^9, 
  3.836894554821931*^9}},ExpressionUUID->"adb42309-1613-4ba7-ad0a-\
d62dadc6dba7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"monint", "@", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", "30", "}"}]}], "]"}]}], "//", "AbsoluteTiming"}], ",", 
   RowBox[{
    RowBox[{"0.5", "^", "30"}], "/", 
    RowBox[{"30", "!"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.836882695844336*^9, 3.836882699712884*^9}, {
  3.836882900976077*^9, 3.836882949158887*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a5844572-8958-4782-aee6-4c2ada767e88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.000019`", ",", "3.5110745847373326`*^-42"}], "}"}], ",", 
   "3.511074584737332`*^-42"}], "}"}]], "Output",
 CellChangeTimes->{{3.83688267202759*^9, 3.8368827005197773`*^9}, {
  3.836882924847834*^9, 3.8368829556122704`*^9}, {3.837059904602347*^9, 
  3.837059919208434*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"9b4ccd58-1cb1-4bca-b6d5-cdd4507a450e"]
}, Open  ]],

Cell["We can benefit from storing these integrals.", "Text",
 CellChangeTimes->{{3.83688303194849*^9, 3.83688304051228*^9}, {
  3.836883201288652*^9, 
  3.8368832089097548`*^9}},ExpressionUUID->"92be9627-dbce-404e-a8ac-\
98212ec5e613"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fmonint", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmonint", "[", "mon_", "]"}], ":=", 
   RowBox[{
    RowBox[{"fmonint", "[", "mon", "]"}], "=", 
    RowBox[{"monint", "[", "mon", "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"ea877032-36c1-4a7b-9516-391a05353a22"],

Cell["\<\
The inner product of two monomials p and q is given by monint[p+q].  This is \
symmetric in p and q.  Thus, to calculate the matrix of inner products \
between all monomials, we only compute the lower-triangular matrix and then \
symmetrize.\
\>", "Text",
 CellChangeTimes->{{3.83688303194849*^9, 3.83688304051228*^9}, {
  3.836883201288652*^9, 3.8368832498445044`*^9}, {3.836883422044813*^9, 
  3.836883424063764*^9}, {3.836895538778018*^9, 3.8368956118723927`*^9}, {
  3.836895796094059*^9, 
  3.836895837648677*^9}},ExpressionUUID->"89f8a051-4331-400f-a112-\
10cf24820c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "a", " ", "symmetrix", " ", "matrix", " ", "from", " ", 
    "the", " ", "lower", " ", "half"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makesym", "[", "lower_", "]"}], ":=", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Join", ",", 
       RowBox[{"{", 
        RowBox[{"lower", ",", 
         RowBox[{"Rest", "/@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"lower", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}]}], "}"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "a", " ", "symmetric", " ", "version", " ", "of", " ", "\"\<Outer\>\"", 
      " ", "that", " ", "generates", " ", "the", " ", "lower"}], "-", 
     RowBox[{"half", " ", "matrix", " ", "and", " ", "symmetrizes"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"symOuter", "[", 
      RowBox[{"f_", ",", "list_"}], "]"}], ":=", 
     RowBox[{"makesym", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"list", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.836890667539812*^9, 3.836890672311358*^9}, {
  3.836891067728125*^9, 3.836891101122037*^9}, {3.836891465524061*^9, 
  3.836891548807662*^9}, {3.836951545163849*^9, 3.8369515580627623`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8f958300-7af5-4ff4-8f98-a336d697d22b"],

Cell[TextData[{
 "Here is an example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "c92f26f2-5c1d-4729-a27d-118f8e05c49e"],
 " particles and maximum monomial degree ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "73567d8b-2712-4e2c-89b6-5e29a26cd525"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688303194849*^9, 3.83688304051228*^9}, {
  3.836883201288652*^9, 3.8368832498445044`*^9}, {3.836883422044813*^9, 
  3.836883424063764*^9}, {3.836895857894164*^9, 
  3.836895880632368*^9}},ExpressionUUID->"d815f3ea-f438-4eee-898a-\
3002e41444d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"monlist", "=", 
   RowBox[{"allmonomials", "[", 
    RowBox[{"3", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"3", "!"}], "*", 
   RowBox[{"symOuter", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fmonint", "[", 
       RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], "]"}]}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8368832550627327`*^9, 3.8368832634318733`*^9}, {
  3.8368833003210573`*^9, 3.836883309309471*^9}, {3.8368834093491497`*^9, 
  3.836883411011567*^9}, {3.836883448413691*^9, 3.836883452081868*^9}, {
  3.8368954714216957`*^9, 3.836895476312982*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"390df63b-51df-47ab-bb69-c336a66e88fe"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.25`", "0.5`", "0.75`", "0.1`", "0.30000000000000004`", 
      "0.6000000000000001`", "0.15000000000000002`", "0.2`", "0.4`"},
     {"0.25`", "0.1`", "0.15000000000000002`", "0.2`", "0.05`", "0.1`", 
      "0.16666666666666666`", "0.06666666666666667`", "0.08333333333333333`", 
      "0.125`"},
     {"0.5`", "0.15000000000000002`", "0.30000000000000004`", "0.4`", 
      "0.06666666666666667`", "0.2`", "0.3333333333333333`", "0.1`", "0.125`",
       "0.25`"},
     {"0.75`", "0.2`", "0.4`", "0.6000000000000001`", "0.08333333333333333`", 
      "0.25`", "0.5`", "0.125`", "0.16666666666666666`", 
      "0.3333333333333333`"},
     {"0.1`", "0.05`", "0.06666666666666667`", "0.08333333333333333`", 
      "0.028571428571428574`", "0.047619047619047616`", 
      "0.07142857142857142`", "0.03571428571428571`", "0.04285714285714286`", 
      "0.05714285714285715`"},
     {"0.30000000000000004`", "0.1`", "0.2`", "0.25`", 
      "0.047619047619047616`", "0.14285714285714285`", "0.21428571428571427`",
       "0.07142857142857142`", "0.08571428571428572`", "0.17142857142857143`"},
     {"0.6000000000000001`", "0.16666666666666666`", "0.3333333333333333`", 
      "0.5`", "0.07142857142857142`", "0.21428571428571427`", 
      "0.42857142857142855`", "0.10714285714285714`", "0.14285714285714285`", 
      "0.2857142857142857`"},
     {"0.15000000000000002`", "0.06666666666666667`", "0.1`", "0.125`", 
      "0.03571428571428571`", "0.07142857142857142`", "0.10714285714285714`", 
      "0.047619047619047616`", "0.05714285714285715`", "0.08571428571428572`"},
     {"0.2`", "0.08333333333333333`", "0.125`", "0.16666666666666666`", 
      "0.04285714285714286`", "0.08571428571428572`", "0.14285714285714285`", 
      "0.05714285714285715`", "0.07142857142857142`", 
      "0.10714285714285714`"},
     {"0.4`", "0.125`", "0.25`", "0.3333333333333333`", 
      "0.05714285714285715`", "0.17142857142857143`", "0.2857142857142857`", 
      "0.08571428571428572`", "0.10714285714285714`", "0.21428571428571427`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.836883264095028*^9, {3.8368833038931293`*^9, 3.836883309874044*^9}, 
   3.8368834125273943`*^9, {3.83688344924798*^9, 3.836883452782707*^9}, 
   3.8368954771528378`*^9, 3.8368956360494843`*^9, 3.836951563417194*^9, 
   3.837059936626523*^9},
 CellLabel->
  "Out[21]//MatrixForm=",ExpressionUUID->"6ace8532-a072-492c-86b5-\
ffaf29688c80"]
}, Open  ]],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3af93548-eec3-4c06-83df-b71a895e6dc3"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1efd2237-7071-4fff-9ab7-28a4248e5e70"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688538205641*^9, 
  3.836885412157634*^9}},ExpressionUUID->"dbe08d7d-15cf-4ad5-a149-\
c3a36c8ff63b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"monlist", "=", 
   RowBox[{"allmonomials", "[", 
    RowBox[{"10", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"symOuter", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fmonint", "[", 
       RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], "]"}], 
   ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.836895438709969*^9, 3.836895442590316*^9}},
 CellLabel->
  "In[987]:=",ExpressionUUID->"3395635b-ba8b-4412-b97d-79e2b6f7f388"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.158504`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8368954471449957`*^9, 3.8368954641413107`*^9}, {
  3.836895949793881*^9, 3.836895959599873*^9}},
 CellLabel->
  "Out[988]=",ExpressionUUID->"df43827a-077a-498d-8cd5-96f297ff7c73"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Legendre kinetic energy", "Section",
 CellChangeTimes->{{3.8368838468742323`*^9, 
  3.836883853038198*^9}},ExpressionUUID->"36690819-5de1-4fc2-9583-\
283e51416688"],

Cell[TextData[{
 "As explained in Sec. SII C, ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "bed7daab-3da5-4ce5-b1d1-04442a607a3a"],
 "-body Legendre polynomials are generated by the eigenvalue equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["K", "L"], "\[Psi]"}], "=", 
    RowBox[{"\[ScriptCapitalE]", " ", "\[Psi]"}]}], TraditionalForm]],
  ExpressionUUID->"79aa31bf-9ae1-40eb-9bd4-135e24777a08"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["K", "L"], " "}], TraditionalForm]],ExpressionUUID->
  "957d285d-3e78-4bcf-821c-8ca89a0e6b21"],
 "is an effective kinetic energy\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "L"], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], 
     SubsuperscriptBox["\[Sum]", 
      RowBox[{" ", 
       RowBox[{"i", "=", "1"}]}], 
      RowBox[{" ", "n"}]]}]}], TraditionalForm]],ExpressionUUID->
  "c2c2494b-bce0-452d-83d5-8bef7d11dd9e"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["\[PartialD]", 
     SubscriptBox["x", "i"]]}], TraditionalForm]],ExpressionUUID->
  "8c890172-44af-44e8-995d-2a72b3b33d42"],
 "[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "b37d49c5-9426-4515-91a7-d2cb6f4b04bf"],
 "(1-",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "fe0836b6-f963-4495-ae90-6581740e821b"],
 ") ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[PartialD]", 
    SubscriptBox["x", "i"]], TraditionalForm]],ExpressionUUID->
  "c0e23d3f-9fcd-49a4-8ce1-16e838eab638"],
 "].\n\nWe write ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "L"], TraditionalForm]],ExpressionUUID->
  "c84da6d8-c691-441a-843d-1a568ae621e1"],
 " as a matrix in the space of monomials.  The matrix elements are given in \
Eq. (S43) of the supplement.  Below is a routine to calculate these (up to \
n!/2).  Note that \[OpenCurlyDoubleQuote]incr(p,i,s)\[CloseCurlyDoubleQuote] \
increments the i-th element of p by s."
}], "Text",
 CellChangeTimes->{{3.836884097316585*^9, 3.836884116258046*^9}, {
  3.836884172178092*^9, 3.8368843609650173`*^9}, {3.8368843985605*^9, 
  3.8368844379552517`*^9}, {3.836884469559947*^9, 3.836884559686051*^9}, {
  3.8368846054647007`*^9, 3.836884673775199*^9}, {3.836884727514989*^9, 
  3.8368848900535917`*^9}, {3.8368851690108*^9, 3.8368851694151993`*^9}, {
  3.836885884645163*^9, 3.836885886162424*^9}, {3.836886286281295*^9, 
  3.836886325386466*^9}, {3.836886954723789*^9, 3.836886992204393*^9}, {
  3.836889954435852*^9, 
  3.836889957347292*^9}},ExpressionUUID->"00319a04-bba3-4100-8827-\
6267102af115"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"legendreKE", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mon1", ",", "_Real", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"mon2", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sum", "=", 
         RowBox[{"mon1", "+", "mon2"}]}], ",", 
        RowBox[{"prod", "=", 
         RowBox[{"mon1", "*", "mon2"}]}], ",", 
        RowBox[{"res", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"prod", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "!=", "0"}], ",", 
           RowBox[{"res", "+=", 
            RowBox[{
             RowBox[{"prod", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"monint", "@", 
              RowBox[{"MapAt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "-", "1"}], "&"}], ",", "sum", ",", "i"}], 
               "]"}]}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "prod", "]"}]}], "}"}]}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         SubscriptBox["\[Sum]", "i"], 
         RowBox[{
          SubscriptBox["p", "i"], 
          SubscriptBox["q", "i"], " ", "\[ScriptCapitalI]", 
          RowBox[{"(", 
           RowBox[{"incr", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", "+", "q"}], ",", "i", ",", 
              RowBox[{"-", "1"}]}], ")"}]}], ")"}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"res", "-", 
        RowBox[{
         RowBox[{"Total", "[", "prod", "]"}], "*", 
         RowBox[{"monint", "[", "sum", "]"}]}]}]}]}], "]"}], ",", " ", 
    RowBox[{"(*", 
     RowBox[{"subtract", " ", 
      RowBox[{
       SubscriptBox["\[Sum]", "i"], 
       RowBox[{
        SubscriptBox["p", "i"], 
        SubscriptBox["q", "i"], " ", "\[ScriptCapitalI]", 
        RowBox[{"(", 
         RowBox[{"p", "+", "q"}], ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.836884862721836*^9, {3.8368849233625603`*^9, 3.836884958224193*^9}, {
   3.8368849936395483`*^9, 3.836885022477243*^9}, {3.836885099997487*^9, 
   3.836885122337521*^9}, 3.8368905681161137`*^9, 3.836890611974814*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"e58affeb-d0a0-4277-88a6-5f30359fbcba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"mon1", ",", "mon2"}], "}"}], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"sum", "=", 
                    RowBox[{"mon1", "+", "mon2"}]}], ",", 
                    RowBox[{"prod", "=", 
                    RowBox[{"mon1", " ", "mon2"}]}], ",", 
                    RowBox[{"res", "=", "0.`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"prod", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "0"}], ",", 
                    RowBox[{"res", "+=", 
                    RowBox[{
                    
                    RowBox[{"prod", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"monint", "[", 
                    RowBox[{"MapAt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "-", "1"}], "&"}], ",", "sum", ",", "i"}], 
                    "]"}], "]"}]}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "prod", "]"}]}], "}"}]}], "]"}], 
                    ";", 
                    RowBox[{"res", "-", 
                    RowBox[{
                    RowBox[{"Total", "[", "prod", "]"}], " ", 
                    RowBox[{"monint", "[", "sum", "]"}]}]}]}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Real], 1}, {
     Blank[Real], 1}}, {{3, 1, 0}, {3, 1, 1}, {3, 0, 
   4}}, {{0, {2, 0, 3}}, {-1, {2, 0, 6}}, {0., {3, 0, 0}}}, {1, 7, 6, 0, 
   6}, {{44, 0, 1, 3}, {45, 0, 1, 2}, {7, 0, 1}, {33, 2, 2}, {6, 3, 5}, {3, 
    16}, {38, 2, 0, 5, 0, 2}, {10, 3, 3}, {27, 8, 0, 2, 3, 0}, {2, 0, 12}, {
    38, 2, 0, 5, 0, 2}, {42, "CopyTensor", 3, 1, 3, 3, 1, 4}, {38, 3, 0, 5, 0,
     4}, {10, 6, 5}, {13, 4, 5, 4}, {39, 4, 0, 5, 0, 4}, {
    47, $CellContext`monint, 3, 1, 4, 3, 0, 4}, {16, 2, 4, 2}, {13, 1, 2, 
    4}, {7, 4, 1}, {3, 1}, {4, 5, 2, -15}, {
    42, "TotalAll", 3, 1, 2, 2, 0, 3, 3, 0, 4}, {
    47, $CellContext`monint, 3, 1, 3, 3, 0, 3}, {16, 4, 3, 4}, {19, 4, 3}, {
    13, 1, 3, 4}, {1}}, 
   Function[{$CellContext`mon1, $CellContext`mon2}, 
    Block[{$CellContext`sum = $CellContext`mon1 + $CellContext`mon2, \
$CellContext`prod = $CellContext`mon1 $CellContext`mon2, $CellContext`res = 
      0.}, Do[
       If[Part[$CellContext`prod, $CellContext`i] != 0, 
        AddTo[$CellContext`res, 
         Part[$CellContext`prod, $CellContext`i] $CellContext`monint[
           
           MapAt[# - 
            1& , $CellContext`sum, $CellContext`i]]]], {$CellContext`i, 
        Length[$CellContext`prod]}]; $CellContext`res - 
      Total[$CellContext`prod] $CellContext`monint[$CellContext`sum]]], 
   Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction3.dylib", 
    "compiledFunction3", {{Real, 1, "Constant"}, {Real, 1, "Constant"}}, 
    Real]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.836885150544498*^9, {3.836890596349601*^9, 3.836890613195263*^9}, 
   3.837060430777172*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"164b241c-e2f0-45c6-ba0d-bf302f3285b7"]
}, Open  ]],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "L"], TraditionalForm]],ExpressionUUID->
  "7c697270-c1fc-40ae-9371-49e7af846210"],
 " is symmetric in the two monomials, we use the symmetric version of \
\[OpenCurlyDoubleQuote]Outer\[CloseCurlyDoubleQuote] defined above to \
calculate the full matrix. Below is an example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "eededb0a-59c9-4afe-b304-845d78b28442"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "2be4a1b3-978b-4aa1-8daa-26afc371e760"],
 "."
}], "Text",
 CellChangeTimes->{{3.8368913527637587`*^9, 3.836891393348876*^9}, {
  3.836895692922394*^9, 
  3.836895718512439*^9}},ExpressionUUID->"633df9ae-4f73-4fd1-b5ca-\
6725fb0ff8b9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"monlist", "=", 
   RowBox[{"allmonomials", "[", 
    RowBox[{"3", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"symOuter", "[", 
   RowBox[{"legendreKE", ",", "monlist"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8368853275215197`*^9, 3.836885338660243*^9}, 
   3.836890772040604*^9, 3.836891575424363*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"550fdd62-fc36-4c58-a505-3cf9a58fa55b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.024999999999999998`", "0.`", "0.`", "0.016666666666666666`", 
      "0.`", "0.`", "0.01388888888888889`", "0.019444444444444445`", "0.`"},
     {"0.`", "0.`", "0.033333333333333326`", "0.`", "0.`", 
      "0.03333333333333334`", "0.`", "0.008333333333333335`", "0.`", "0.025`"},
     {"0.`", "0.`", "0.`", "0.024999999999999994`", "0.`", "0.`", 
      "0.033333333333333354`", "0.`", "0.005555555555555557`", 
      "0.011111111111111113`"},
     {"0.`", "0.016666666666666666`", "0.`", "0.`", "0.014285714285714284`", 
      "0.`", "0.`", "0.010317460317460319`", "0.013492063492063491`", "0.`"},
     {"0.`", "0.`", "0.03333333333333334`", "0.`", "0.`", 
      "0.0380952380952381`", "0.`", "0.009523809523809525`", "0.`", 
      "0.026190476190476188`"},
     {"0.`", "0.`", "0.`", "0.033333333333333354`", "0.`", "0.`", 
      "0.047619047619047616`", "0.`", "0.007936507936507936`", 
      "0.015873015873015872`"},
     {"0.`", "0.01388888888888889`", "0.008333333333333335`", "0.`", 
      "0.010317460317460319`", "0.009523809523809525`", "0.`", 
      "0.011904761904761904`", "0.011309523809523808`", 
      "0.006547619047619047`"},
     {"0.`", "0.019444444444444445`", "0.`", "0.005555555555555557`", 
      "0.013492063492063491`", "0.`", "0.007936507936507936`", 
      "0.011309523809523808`", "0.017857142857142856`", 
      "0.002976190476190476`"},
     {"0.`", "0.`", "0.025`", "0.011111111111111113`", "0.`", 
      "0.026190476190476188`", "0.015873015873015872`", 
      "0.006547619047619047`", "0.002976190476190476`", 
      "0.025793650793650785`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.836885341086405*^9, {3.836890773058837*^9, 3.8368907975266933`*^9}, 
   3.8368915769167547`*^9, 3.836895722299686*^9, 3.837060432966234*^9},
 CellLabel->
  "Out[65]//MatrixForm=",ExpressionUUID->"bb5ca085-b8be-4f5e-ba32-\
bdaaf227322c"]
}, Open  ]],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bb963962-b246-475d-bf71-d86d2016c791"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7908e52c-0188-47f3-be03-70fc144d1c9a"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688538205641*^9, 
  3.836885412157634*^9}},ExpressionUUID->"ec904e3e-f8af-44c4-9fd5-\
d7d0d0df7b67"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"monlist", "=", 
   RowBox[{"allmonomials", "[", 
    RowBox[{"10", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"symOuter", "[", 
    RowBox[{"legendreKE", ",", "monlist"}], "]"}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8368854246715183`*^9, 3.836885448099195*^9}, 
   3.836890780306628*^9, 3.836891592185609*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"128d947b-7a3e-4fa4-97e3-f69c5be6a864"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.134953`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.836885452840592*^9, 3.83688546754305*^9}, {
   3.836890574419832*^9, 3.836890619420065*^9}, {3.836890659669125*^9, 
   3.8368906628397408`*^9}, {3.8368907813072233`*^9, 3.836890784556106*^9}, {
   3.836890828701797*^9, 3.8368908685542183`*^9}, 3.836891033036488*^9, {
   3.836891594742605*^9, 3.83689159658939*^9}, {3.836895967293784*^9, 
   3.836895977049711*^9}, 3.837060436123068*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"975d993b-6548-4ea9-a507-6363dad6bd11"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Legendre interaction energy", "Section",
 CellChangeTimes->{{3.8368838468742323`*^9, 3.836883853038198*^9}, {
  3.836885497232951*^9, 
  3.836885499253647*^9}},ExpressionUUID->"fae098f6-e98b-4be9-9566-\
c0ac4a6f05ff"],

Cell[TextData[{
 "To encode the physics of contact interactions, we want to generalize the \
Legendre polynomials to include cusps when two particles touch.  As explained \
in Sec. SII C of the supplement, this can be done by changing the eigenvalue \
equation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["K", "L"], "+", 
        RowBox[{"c", " ", 
         SubscriptBox["U", "L"]}]}], ")"}], "\[Psi]"}], "=", 
     RowBox[{"\[ScriptCapitalE]", " ", "\[Psi]"}]}]}], TraditionalForm]],
  ExpressionUUID->"367e1fce-2106-476e-827d-58d9d8fe4fb2"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["U", "L"]}], TraditionalForm]],ExpressionUUID->
  "9027586e-0ccb-4293-b50f-e203c9db2bb3"],
 " is an effective interaction energy\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["U", "L"], "=", 
    RowBox[{
     SubscriptBox["\[Sum]", 
      RowBox[{"i", "<", "j"}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "i"], "(", 
       RowBox[{"1", "-", 
        SubscriptBox["x", "i"]}], ")"}], 
      RowBox[{
       RowBox[{"\[Delta]", "(", 
        RowBox[{
         SubscriptBox["x", "i"], "-", 
         SubscriptBox["x", "j"]}], ")"}], "."}]}]}]}], TraditionalForm]],
  ExpressionUUID->"7420a084-d1c3-4b87-a044-93f021590c44"],
 "\n\nThe matrix element of ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["U", "L"]}], TraditionalForm]],ExpressionUUID->
  "f34c3662-cdae-4519-9fd7-f31db120521a"],
 " between the monomials are given by Eq. (S44). Below is a routine to \
calculate these (up to n!/2)."
}], "Text",
 CellChangeTimes->{{3.836885564691888*^9, 3.836885879644929*^9}, {
   3.836887002220639*^9, 3.836887002600402*^9}, 
   3.836889947388549*^9},ExpressionUUID->"2ede458d-a5c8-4f71-8c80-\
1c11203d54c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Auxiliary", " ", "function", " ", "to", " ", "merge", " ", "the", " ", 
     "i"}], "-", 
    RowBox[{"th", " ", "and", " ", 
     RowBox[{"(", 
      RowBox[{"i", "+", "1"}], ")"}]}], "-", 
    RowBox[{"th", " ", "elements", " ", "of", " ", "a", " ", "monomial"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"merge", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mon", ",", "_Integer", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "_Integer"}], "}"}]}], "}"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"mon", ",", 
           RowBox[{"i", "-", "1"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"mon", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{"mon", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Drop", "[", 
          RowBox[{"mon", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"legendreIE", "=", "\[IndentingNewLine]", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"sum", ",", "_Integer", ",", "1"}], "}"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"merged", ",", 
          RowBox[{"res", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"merged", "=", 
             RowBox[{"merge", "[", 
              RowBox[{"sum", ",", "i"}], "]"}]}], ";", " ", 
            RowBox[{"(*", 
             RowBox[{"merge", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", "+", "q"}], ",", "i"}], ")"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"res", "+=", 
             RowBox[{
              RowBox[{"monint", "@", 
               RowBox[{"MapAt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "+", "1"}], "&"}], ",", "merged", ",", "i"}], 
                "]"}]}], "-", 
              RowBox[{"monint", "@", 
               RowBox[{"MapAt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "+", "2"}], "&"}], ",", "merged", ",", "i"}], 
                "]"}]}]}]}], ";"}], ",", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Sum]", 
               RowBox[{"i", " "}]], 
              RowBox[{"\[ScriptCapitalI]", 
               RowBox[{"(", 
                RowBox[{"incr", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"merge", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", "+", "q"}], ",", "i"}], ")"}]}], ",", "i", 
                   ",", "1"}], ")"}]}], ")"}]}]}], "-", 
             RowBox[{"\[ScriptCapitalI]", 
              RowBox[{"(", 
               RowBox[{"incr", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"merge", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", "+", "q"}], ",", "i"}], ")"}]}], ",", "i", 
                  ",", "2"}], ")"}]}], ")"}]}]}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "sum", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "res"}]}], "]"}], ",", 
      RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
      RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.836885982716825*^9, 3.8368860197711153`*^9}, {
  3.836886073791272*^9, 3.836886163522326*^9}, {3.8368862108038807`*^9, 
  3.83688621604808*^9}, {3.8368864790270433`*^9, 3.836886482725367*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"126e56cc-f39c-4c6d-93c9-1cb288507951"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "sum", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"merged", ",", 
                    RowBox[{"res", "=", "0.`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"merged", "=", 
                    RowBox[{"merge", "[", 
                    RowBox[{"sum", ",", "i"}], "]"}]}], ";", 
                    RowBox[{"res", "+=", 
                    RowBox[{
                    RowBox[{"monint", "[", 
                    RowBox[{"MapAt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "+", "1"}], "&"}], ",", "merged", ",", 
                    "i"}], "]"}], "]"}], "-", 
                    RowBox[{"monint", "[", 
                    RowBox[{"MapAt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "+", "2"}], "&"}], ",", "merged", ",", 
                    "i"}], "]"}], "]"}]}]}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "sum", "]"}], "-", "1"}]}], 
                    "}"}]}], "]"}], ";", "res"}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Integer], 1}}, {{2, 1, 0}, {3, 0, 
   1}}, {{0, {2, 0, 4}}, {2, {2, 0, 9}}, {-1, {2, 0, 1}}, {1, {2, 0, 7}}, {
    3, {2, 0, 8}}, {0., {3, 0, 0}}}, {0, 10, 5, 0, 
   5}, {{7, 0, 1}, {33, 0, 3}, {12, 3, 1, 3}, {6, 4, 5}, {3, 16}, {
    47, $CellContext`merge, 2, 1, 0, 2, 0, 5, 2, 1, 2}, {
    42, "CopyTensor", 2, 1, 2, 2, 1, 4}, {38, 2, 0, 5, 0, 6}, {12, 6, 7, 6}, {
    39, 4, 0, 5, 0, 6}, {47, $CellContext`monint, 2, 1, 4, 3, 0, 3}, {
    42, "CopyTensor", 2, 1, 2, 2, 1, 1}, {38, 2, 0, 5, 0, 6}, {12, 6, 9, 6}, {
    39, 1, 0, 5, 0, 6}, {47, $CellContext`monint, 2, 1, 1, 3, 0, 4}, {19, 4, 
    2}, {13, 3, 2, 3}, {13, 1, 3, 2}, {7, 2, 1}, {4, 5, 3, -15}, {1}}, 
   Function[{$CellContext`sum}, 
    Block[{$CellContext`merged, $CellContext`res = 0.}, 
     Do[$CellContext`merged = $CellContext`merge[$CellContext`sum, \
$CellContext`i]; AddTo[$CellContext`res, $CellContext`monint[
           
           MapAt[# + 
            1& , $CellContext`merged, $CellContext`i]] - $CellContext`monint[
          MapAt[# + 2& , $CellContext`merged, $CellContext`i]]]; 
       Null, {$CellContext`i, Length[$CellContext`sum] - 
        1}]; $CellContext`res]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction4.dylib", 
    "compiledFunction4", {{Integer, 1, "Constant"}}, Real]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.836886360116519*^9, 3.836886485216529*^9, 
  3.837060442706188*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"85927b76-36a2-4a3d-ba2b-da35e898bf47"]
}, Open  ]],

Cell["We can benefit from storing these integrals.", "Text",
 CellChangeTimes->{{3.83688303194849*^9, 3.83688304051228*^9}, {
  3.836883201288652*^9, 3.8368832089097548`*^9}, {3.836886418338353*^9, 
  3.836886434148815*^9}},ExpressionUUID->"39b8b135-ddb0-4a94-a42f-\
c3c0c3dd05df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "flegendreIE", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flegendreIE", "[", "sum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"flegendreIE", "[", "sum", "]"}], "=", 
   RowBox[{"legendreIE", "[", "sum", "]"}]}]}]}], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"98674303-4fe9-42d4-8697-d5693780caf1"],

Cell[TextData[{
 "Here is an example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3aad1455-24de-4431-968f-57d3d41dffad"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6af753ae-2c99-4574-8b1d-517df43b0a25"],
 ".  We again use the symmetric version of \[OpenCurlyDoubleQuote]Outer\
\[CloseCurlyDoubleQuote] to calculate the symmetric matrix."
}], "Text",
 CellChangeTimes->{{3.836885270604451*^9, 3.836885312950878*^9}, {
  3.836895241681466*^9, 
  3.8368952889066067`*^9}},ExpressionUUID->"d844c5f4-9963-4252-bd6e-\
53527840ae39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"monlist", "=", 
   RowBox[{"allmonomials", "[", 
    RowBox[{"3", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"symOuter", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"flegendreIE", "[", 
      RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8368853275215197`*^9, 3.836885338660243*^9}, 
   3.83688654488316*^9, 3.8368952235779057`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"4ae6c7d5-88ed-4a08-97d5-14c53ce63ecc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.16666666666666663`", "0.05833333333333332`", "0.08333333333333331`", 
      "0.10833333333333332`", "0.027777777777777783`", 
      "0.050000000000000024`", "0.0777777777777778`", "0.03333333333333335`", 
      "0.04166666666666668`", "0.058333333333333355`"},
     {"0.05833333333333332`", "0.027777777777777783`", "0.03333333333333335`",
       "0.04166666666666668`", "0.015476190476190477`", 
      "0.02142857142857143`", "0.031746031746031744`", "0.01746031746031746`",
       "0.02103174603174603`", "0.024999999999999998`"},
     {"0.08333333333333331`", "0.03333333333333335`", "0.050000000000000024`",
       "0.058333333333333355`", "0.01746031746031746`", 
      "0.03333333333333333`", "0.04365079365079365`", "0.02142857142857143`", 
      "0.024999999999999998`", "0.0369047619047619`"},
     {"0.10833333333333332`", "0.04166666666666668`", "0.058333333333333355`",
       "0.0777777777777778`", "0.02103174603174603`", "0.0369047619047619`", 
      "0.05952380952380952`", "0.024999999999999998`", 
      "0.031746031746031744`", "0.04365079365079365`"},
     {"0.027777777777777783`", "0.015476190476190477`", 
      "0.01746031746031746`", "0.02103174603174603`", "0.009523809523809521`",
       "0.011904761904761904`", "0.016666666666666663`", 
      "0.010416666666666664`", "0.01220238095238095`", "0.01369047619047619`"},
     {"0.050000000000000024`", "0.02142857142857143`", "0.03333333333333333`",
       "0.0369047619047619`", "0.011904761904761904`", "0.0238095238095238`", 
      "0.02857142857142856`", "0.014880952380952377`", 
      "0.016666666666666663`", "0.025595238095238088`"},
     {"0.0777777777777778`", "0.031746031746031744`", "0.04365079365079365`", 
      "0.05952380952380952`", "0.016666666666666663`", "0.02857142857142856`",
       "0.04761904761904761`", "0.019642857142857136`", 
      "0.02529761904761904`", "0.034226190476190466`"},
     {"0.03333333333333335`", "0.01746031746031746`", "0.02142857142857143`", 
      "0.024999999999999998`", "0.010416666666666664`", 
      "0.014880952380952377`", "0.019642857142857136`", 
      "0.011904761904761904`", "0.01369047619047619`", 
      "0.016666666666666663`"},
     {"0.04166666666666668`", "0.02103174603174603`", "0.024999999999999998`",
       "0.031746031746031744`", "0.01220238095238095`", 
      "0.016666666666666663`", "0.02529761904761904`", "0.01369047619047619`",
       "0.016666666666666663`", "0.019642857142857136`"},
     {"0.058333333333333355`", "0.024999999999999998`", "0.0369047619047619`",
       "0.04365079365079365`", "0.01369047619047619`", 
      "0.025595238095238088`", "0.034226190476190466`", 
      "0.016666666666666663`", "0.019642857142857136`", "0.02857142857142856`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.836886564933619*^9, 3.836895224924469*^9, 
  3.8370604473638372`*^9},
 CellLabel->
  "Out[73]//MatrixForm=",ExpressionUUID->"86fe8139-42b9-4d4c-a528-\
ad2513086c66"]
}, Open  ]],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "02be9f0c-13bf-4ed4-8110-a1da678516d7"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3"}], TraditionalForm]],ExpressionUUID->
  "c885b2c0-cc5c-4421-a0ba-5b58f6d329c3"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688538205641*^9, 
  3.836885412157634*^9}},ExpressionUUID->"8940c405-b923-4f0a-b325-\
80c73229e6a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"monlist", "=", 
   RowBox[{"allmonomials", "[", 
    RowBox[{"10", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"symOuter", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"flegendreIE", "[", 
       RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], "]"}], 
   ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.836895114577516*^9, 3.836895119383123*^9}, {
  3.836895159824643*^9, 3.836895189426426*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"360d34f9-065d-4aa4-a5c8-7355763eaf2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.227456`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.836895130215394*^9, 3.8368952100788937`*^9}, {
   3.8368959866682653`*^9, 3.836896001362952*^9}, 3.837060450510805*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"615e11d4-ccb4-4d85-8378-3b885f0926a9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Making the basis", "Section",
 CellChangeTimes->{{3.8368838468742323`*^9, 3.836883853038198*^9}, {
  3.836885497232951*^9, 3.836885499253647*^9}, {3.836886709816037*^9, 
  3.8368867117086697`*^9}},ExpressionUUID->"b8eb7fc9-ae7c-478a-9e60-\
a35addf8f41c"],

Cell[TextData[{
 "As the monomials are non-orthogonal, we solve the generalized eigenvalue \
problem ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["K", "L"], "+", 
       RowBox[{"c", " ", 
        SubscriptBox["U", "L"]}]}], ")"}], "A"}], "=", 
    RowBox[{"\[ScriptCapitalE]", " ", "O", " ", "A"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c9e02265-a1d6-4868-9d4b-7555bd1d6176"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "A"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "337062ba-26ef-446e-9dff-7384d4e58432"],
 "  gives the basis coefficients in the monomials and ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "O"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7ff1f799-3b5a-4112-a5ee-638e686d128b"],
 " is matrix of overlaps between the monomials -- see Sec. SII C of the \
supplement."
}], "Text",
 CellChangeTimes->{{3.836886876556177*^9, 3.836886940763427*^9}, {
  3.836887007273954*^9, 
  3.8368871204858303`*^9}},ExpressionUUID->"a6b322b0-c0ab-4afe-9e90-\
65cc41f6ac93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"legendrebasis", "[", 
   RowBox[{"n_Integer", ",", "dmax_Integer", ",", 
    RowBox[{"c_", "?", "NumericQ"}], ",", 
    RowBox[{"keep_", ":", "Infinity"}]}], 
   RowBox[{"(*", 
    RowBox[{
    "max", " ", "number", " ", "of", " ", "basis", " ", "functions", " ", 
     "to", " ", "be", " ", "kept"}], "*)"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1.", "}"}], "}"}], ",", " ", 
    RowBox[{"(*", 
     RowBox[{"vacuum", " ", "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"monlist", "=", 
         RowBox[{"allmonomials", "[", 
          RowBox[{"n", ",", "dmax"}], "]"}]}], ",", "ov", ",", "kin", ",", 
        "int", ",", "akeep", ",", "eigenvecs", ",", 
        RowBox[{"scale", "=", 
         RowBox[{"n", "!"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ov", "=", 
        RowBox[{"symOuter", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"fmonint", "[", 
            RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"overlaps", " ", "between", " ", "the", " ", "monomials"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"kin", "=", 
        RowBox[{"symOuter", "[", 
         RowBox[{"legendreKE", ",", "monlist"}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"matrix", " ", "of", " ", "kinetic", " ", "energy", " ", 
         SubscriptBox["K", "L"]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"int", "=", 
        RowBox[{"symOuter", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"flegendreIE", "[", 
            RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"matrix", " ", "of", " ", "interaction", " ", "energy", " ", 
         SubscriptBox["U", "L"]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"akeep", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"Length", "[", "monlist", "]"}], ",", "keep"}], "]"}]}], 
       ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "actual", " ", "number", " ", "of", " ", "basis", " ", "functions", 
         " ", "retained"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eigenvecs", "=", 
        RowBox[{"Reverse", "@", 
         RowBox[{"Eigenvectors", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"kin", "+", 
              RowBox[{"c", "*", "int"}]}], " ", ",", "ov"}], "}"}], ",", 
           RowBox[{"-", "akeep"}]}], "]"}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "basis", " ", "vectors", " ", "sorted", " ", "by", " ", "increasing", 
         " ", "energy"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"scale", "*", 
            RowBox[{"(", 
             RowBox[{"#", ".", "ov", ".", "#"}], ")"}]}], "]"}]}], "&"}], "/@",
         "eigenvecs"}]}]}], "]"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"normalized", " ", "basis", " ", "vectors"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.836887199614298*^9, 3.836887230522478*^9}, {
  3.836887268629043*^9, 3.836887427835937*^9}, {3.8368916386618757`*^9, 
  3.8368916442643557`*^9}, {3.83689603159549*^9, 3.836896042047762*^9}, {
  3.836983434281187*^9, 3.8369834642465353`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"7dd87c3b-63dc-46b7-a828-d1a1c8e13cde"],

Cell[TextData[{
 "Sample calculation for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "2"}], ",", 
    RowBox[{
     SubscriptBox["d", "max"], "=", "3"}], ",", 
    RowBox[{"c", "=", "5"}]}], TraditionalForm]],ExpressionUUID->
  "4e297343-453a-45f3-823d-876c4e8c555a"],
 ",  where the 3 lowest-energy basis states are kept."
}], "Text",
 CellChangeTimes->{{3.836887506772992*^9, 3.8368875803613453`*^9}, {
  3.836887776081963*^9, 3.836887778587406*^9}, {3.836896066240336*^9, 
  3.8368960673584547`*^9}},ExpressionUUID->"5bd5c028-576f-4e48-aeb0-\
3016dcc14fdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"es", "=", 
  RowBox[{"legendrebasis", "[", 
   RowBox[{"2", ",", "3", ",", 
    RowBox[{"c", "=", "5"}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.836887477511881*^9, 3.836887488456421*^9}, {
  3.836887642210887*^9, 3.836887642700101*^9}, {3.836887781376191*^9, 
  3.836887789826178*^9}, {3.836888059608431*^9, 3.836888083064652*^9}, {
  3.8368882173855762`*^9, 3.836888239369473*^9}, {3.836888301493989*^9, 
  3.836888301553322*^9}, {3.8368883595070066`*^9, 3.836888392245253*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"6f0714a3-2054-41e4-936c-bb214ca99587"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6419325786547422`"}], ",", "1.6147761473682722`", ",", 
     RowBox[{"-", "1.2867766420182989`"}], ",", "0.417774736780823`", ",", 
     "0.5740070872311539`", ",", 
     RowBox[{"-", "1.319781329362162`"}], ",", "0.24094297994488234`", ",", 
     RowBox[{"-", "0.24094297994453887`"}], ",", 
     RowBox[{"-", "0.5665965893837299`"}], ",", "0.5665965893836358`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9801533146747983`"}], ",", "6.768663999329095`", ",", 
     RowBox[{"-", "1.2152824911513591`"}], ",", 
     RowBox[{"-", "3.271169141955654`"}], ",", "4.712777348523709`", ",", 
     RowBox[{"-", "6.220832843052162`"}], ",", 
     RowBox[{"-", "1.5173415426987875`"}], ",", 
     RowBox[{"-", "1.517341542697545`"}], ",", "3.110416421525957`", ",", 
     "3.110416421526177`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.262001251172126`", ",", 
     RowBox[{"-", "8.120155319699553`"}], ",", 
     RowBox[{"-", "0.1410812154365312`"}], ",", "4.40294289026983`", ",", 
     RowBox[{"-", "8.288227861629407`"}], ",", "12.146521506499427`", ",", 
     RowBox[{"-", "2.6465704049525187`"}], ",", "2.6465704049492427`", ",", 
     RowBox[{"-", "4.751459537048002`"}], ",", "4.751459537046825`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.836887467231016*^9, 3.836887489125512*^9}, 
   3.836887586928458*^9, 3.8368876495171328`*^9, {3.836887783219247*^9, 
   3.836887790371142*^9}, {3.836888060275318*^9, 3.836888083830258*^9}, {
   3.8368882186661463`*^9, 3.8368882400459747`*^9}, 3.83688830209757*^9, {
   3.836888360373479*^9, 3.836888392735178*^9}, 3.836888499236557*^9, 
   3.836891650731868*^9, 3.836896060133174*^9, 3.836983470880731*^9, 
   3.837060458761989*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"9b66cc96-adde-4e2e-9667-07a784bab268"]
}, Open  ]],

Cell["\<\
Check that the basis states have the expected cusp when two particles touch.\
\>", "Text",
 CellChangeTimes->{{3.836887506772992*^9, 3.8368875803613453`*^9}, {
  3.836887727570518*^9, 3.8368877657843513`*^9}, {3.836888024185431*^9, 
  3.836888025568062*^9}},ExpressionUUID->"b6b7c22f-4ee0-4ece-8634-\
870db0dfcfed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gs", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"es", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"tupletomonomial", "/@", 
       RowBox[{"allmonomials", "[", 
        RowBox[{"2", ",", "3"}], "]"}]}], ")"}]}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"Min", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"Max", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8368878273580923`*^9, 3.8368878942478867`*^9}, 
   3.836887924792932*^9, {3.836887967346929*^9, 3.836887975415217*^9}, {
   3.836888111344821*^9, 3.8368881129844723`*^9}, {3.8368883686822233`*^9, 
   3.836888411043342*^9}, {3.836891654174885*^9, 3.836891654887741*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"72e04b94-6aec-404d-a127-75481487c28f"],

Cell[BoxData[
 RowBox[{"0.6419325786547422`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.2867766420182989`", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "-", 
  RowBox[{"0.5740070872311539`", " ", 
   SuperscriptBox[
    RowBox[{"Max", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
  RowBox[{"0.24094297994453887`", " ", 
   SuperscriptBox[
    RowBox[{"Max", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "3"]}], "-", 
  RowBox[{"1.6147761473682722`", " ", 
   RowBox[{"Min", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{"1.319781329362162`", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{"Min", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "-", 
  RowBox[{"0.5665965893836358`", " ", 
   SuperscriptBox[
    RowBox[{"Max", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "2"], " ", 
   RowBox[{"Min", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "-", 
  RowBox[{"0.417774736780823`", " ", 
   SuperscriptBox[
    RowBox[{"Min", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
  RowBox[{"0.5665965893837299`", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Min", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "2"]}], "-", 
  RowBox[{"0.24094297994488234`", " ", 
   SuperscriptBox[
    RowBox[{"Min", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{
  3.83688783350872*^9, {3.8368878670438623`*^9, 3.836887880400776*^9}, 
   3.8368879271005993`*^9, {3.836887969692215*^9, 3.836887976388191*^9}, {
   3.836888061905094*^9, 3.8368881147637577`*^9}, {3.836888220051206*^9, 
   3.836888241535791*^9}, 3.836888303336382*^9, {3.836888369273046*^9, 
   3.836888411678606*^9}, 3.836888500516714*^9, 3.836891655447118*^9, 
   3.836896061979388*^9, 3.8369834761143208`*^9, 3.8370604707810383`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"4699f346-7d02-4cc6-9c02-db6ba9d1ca9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"gs", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", "x"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"c", "*", 
           RowBox[{"Abs", "[", 
            RowBox[{"x", "-", 
             RowBox[{"1", "/", "2"}]}], "]"}]}]}], ")"}], "*", 
        RowBox[{"gs", "[", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{
  3.836887950104924*^9, {3.8368879852043056`*^9, 3.836887997506276*^9}, {
   3.836888118128736*^9, 3.836888118859864*^9}, {3.836888262123*^9, 
   3.836888284941025*^9}, {3.836888474387241*^9, 3.836888495775443*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"e165c44a-ca28-4038-9bdd-68c4cc004437"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXdUFcnWt1Ex54yOaUYMM4OKOVtgxnhFxzTmnBAVA+acFRXFnHNAx4iK
ipgVMyIGDMghZxHzKB/vd/ZTvW6vdf3HVU813X1+XbVrV3Xt3b8OcncdmtXG
xqZzbhubbJn/j6rebFMll5NqV88jZ5c4eDS79DPYefCQGOUb+yLD3uWq5j9P
TL85tEi8svcvVvus213N077kXlNgU6J6cKPKKXuXYM2r368x59i/yWpZ9Rv3
3MJCNa+yrnPDuztTVesNg6L93MI0f59l4Z68fu9VFpv/+xeu+TWHwslOgWmq
/+kHK+xdIjQfVrjjkrVXPqhLI7aVcvGO1Pyw75p3f15MV7+UHbPfLSxa8x7f
64+sdfKjmvq4UW1v+zjNG3/b6PVw3yf1bGHuQD+3BM0r7M9/5c9Nn1XdRs87
hPklaf7we7K7u9cXtSZ5/4uMjBTNS37xyXNt8VddRleznvA7fdc6t/WP1nrC
e23J5dx9fJzWE77vdVy3r1kStZ7wtuXi/p43LlnrCR/9Z5/Suwakaj3hkwJt
37ac8V7rCc/Tvk1Ct5VpWk/4l1szjn31+aD1hOer83PD3xvTtZ7wwivsS+5Z
/1HrCX90r+2WL96ftJ7woh+urV2w6rPWE+4rOqMn+tEO9XHCzXrCCx49VWKx
Q7TWE/45anr/VUmxWk/4kXX1lv+yNEHrCb980sdzRrZkrSc8emul+XMdU7We
8JNrFuS26fpe6wlfezqw2aDRaVpPuGvW2t6Ppn/QesIDptTx8FiUrvWEbytc
rovHyo9aT/hF0Rk94bH7rO0ZPdGJ/ouecNohfw836wlflFj7SvkLUVpP+PM1
T38tvDhW6wn/t2xq7UnVE7Se8FXL6oZuPZOk9YSviT3iMaZQqtYTfniSbcWm
jd5rPeF9Rs6MHdE7TesJnxDoXtvO44PWE35OdEZP+Nfl1vaMnvAsYjfQEz2w
e+gJp/+iJ5x2yHnhZj3h1coUcy4yLErrCU/dXnxJWNNYrSfcZ2qJzjnS4rWe
8H/23Z5oWZSk9YS7FUhJGGiTqvWE9xiz4M9/a77XesIHiM7oCe8q7Rk94d9q
W+0Geup2JPYZPfndjBfoCcfuoSec/ouecNoh14Ob9YT/bNxtfb9qUVpPuHP+
Jt7JhWO1nvCxBw69evAkXusJr2Dbudt/piRpPeGeojN6wv2lPaMnfIfYDfSE
fxD7jJ7wBTIOoie/j3EWPeGMF+gJx+6hJ5z+i55w2iH3ATfrCf/QPj3QtnCU
1hMe8KqtU7tssVpP+ALRGT3hr6Q9oyf8mNgN9ITfE/uMnvCiMg6iJ7yL+Bvo
ye/AP0FPOOMsesIZL7QdEY7dQ084/Rc94bRD7g9u1hOeo4OVoyd8tJwHPeGh
cl30hL+R+0RPeL5t1t+FnvAVogN6wi+KbujJ/eLXoScc/wQ94Yyz6AlnvEBP
OHYPPeH0X/SE0w65b7hZT3idJtZ2jp5wpx3WfoGe8D7lrP0IPeHlT1n7HXrC
vaSfoif8i/Rr7cfLfeEPa39UOH4desLxT9BTn0fsEnrCGS/QE47dQ084/Rc9
4aNNdhVu1hM+Tew2esLre1vtPHrCC/hYxwX0hG+QcQQ99XVl3EFPrs88Aj3h
+MPoCcevQ084/gl66vPLOIuecMYL9IRj99ATHmoa9+G0Q34n3KwnPFj8EPSE
t4u2+i3oCY8TPwc94a3EL0JPrsP8Cz3hzCPQE44/jJ5w/Dr0hOOfoCeccRY9
4YwX6Al/Y/JL4fRf9ITTDvn9cLOe8AbiV6MnfLL44egJjxW/HT05H/NW9IQz
/0JPOPMI9ITjD6MnHL8OPeH4J+gJZ5xFTzjjBXrCsXvoCaf/oiecdogucLOe
8K0yT0RP+DGZV6Inf8d8Hz3hzFvRE878Cz3hzCPQE44/jJ5w/Dr01NeVcRA9
4StM83o44wV6wrF76Amn/6InnHaIXnCznnBbWfdAT+pZJ0FPPU8VndETzrxV
zwPxI8RuoKeen4l9Rk84/jB6wvHr0BN+0bTuBGecRU844wV6wrF76Kl/l/Rf
9ITTDtERjp5R53Pcq+yyW+s6u1zZYm1+ROky9fDB69Rat7Bk/XcpVU6f/bTc
WL+Cq7oh5ybm+arL/B3Hc364qxzPeeDzyv73dak3c87naroux3M/HPfy0Yaa
v7t4q2KFm4ROahWlj5vm7OHn55aiUgpaOcfxdxzPcdRP8Kh6NCT3V12mHk6Z
63B+OOf3fuLvntzWOA/HLxVOmXo4f8/5OM+7DM97Z90uaD2aOOZcHJTXeO7U
w+lH1P9zR1U/sDtKl6mHj+gypdTYsJv6PEMXTxn/yj1al6mH0x+pDz5Uum6X
rFG6TD18XOFelW1sHunz3HjQpmbbVOO61MPp19Tvdy5y+PXMSF2mHu4w7ZNy
8Q7R5+mWw/Nm/pXGdamHYx+o/21N5ZUdikfqMvXw2Ii1vbztX+jzFKmeq2a1
1lG6TD0cO0N924093my7bdFlvV4hfG/7mh5hfq/1edJbfRm3/5coXaYejr2i
Pn+Pfdseb7DoMvVwx97DW3vbv9Pn+dKx7aKp+aN0mXo4do/6sfcL3o2ZZ9wn
9XCvAvWe+LkZ1ynd2nqflKmHYz+pH/x9/bDwpcbfUw9PvGo7IMwvSp+nu+hM
mXo4dpj6pPBG4y74GvdJPbzdlCeJGRkx+jz7pJ1Qph6OPac+x6zvMZ4Jxn1Q
Dz/45+6p9i7x+jxZHlrbOWXq4YwL+rrBz+/btY7UZerhOcLH5XDxTtTnGSH9
lDL1cMYX6oPeBP+65WKkLlMPxz5znkc1rHaGMvVwxil93d1xloxOUbpMPRy7
gV26K5wy9XDsAHbmptwnZerh9GvsxjjRTZelHk4/xQ4EzrQ+R8rUw+l39Otz
0q4oUw+nH9FP20k7p0x9O1O/0OtI0u8oUz/J1B/pR/XFDuj1AqmH027pF0vE
LlGmHk47pJ0PEzup54FSD6dd0W5vi92mTD2cdkI7PCTjCGXq4bQ/7WfKuEaZ
enif5c4Z59yO6PG3l9el/HYPDV55Q9jJsWF+atajPZPSp0SpTnXyetjYBGq+
xqnw1DtVDJ5n28EVLt7Xldeb7HYb3kSqm9lb7/e2v6O55+G5rn23GnzeWMvl
ML/7qtPeBVXLDIxUO0YHjvG2f6x5/nsFNj9xMPiP8qu++rk9UX6/VjgwP8Oi
/g7puyjM76nmrfad6+zwwuDnlzgUtbF5rq52f772/nmLKtn0+w57l5ea29eb
7TF8l8Envb/j4OL9So1pcTT56yqLerJv43m3sDea75g1KPvChQa3O1q7oot3
uDods/1srsz21jbnlpFhfu80PynHwycPzHrcLSxCrZbz778w8lNG5u+A95D7
gYcUf9zE2z5K/Sv3bzuuwXx7l2jNV8jvhdcK2nHHzy1GfRJ9BtnnLOTiHat5
O9ETvnrW2O5hfnFqmugf+PzpVreweM1XyvOCJ9dqasnISFAz5fmWW7n3d2/7
JM07SnuAd4jJO87eJVl9e2htP9gv/Lu5N/66sy4wVrcn2uHXkleL16kfo+0X
/tq83q1S6gTEaY5d9N5yxPdd6VjdzjhfcY+Xy2qsi9Z2jevPmXjjwp0/4zTH
Xg7ZvPdexpoY3f4434gA16cL8kdre8f1L6f86XDAL1Zz7GjyFaffUyrF6HbJ
+ZK//vGx9h7Dn+H6ze55Ot3vF6u5fp9VZM7Vf0KjdXvlfNsqDY5v8pfht3D9
tNy+Xxrbx2qu18mWD9rovDdat2PON8n5++kdFQ3/hOu/PHij24ccsZpjj086
xB7e6xWt2zfnm9DxQ7c+BQw/hOunynng2Om0T4W+PfeJ1u2e8612aR80objh
b3D9WnmsvwuO/X4S92rhm/NGf+B81+tmK25pYPgVXH+D6AzHrnfK3qHTmW9G
/+F8+Yr8UveoZ5S2y1y/XKr1ucOx94Nd+nXt2zNG9x/ON/qN9x+PQ4xxX19f
2iGccSC3X1Gf0OAY3a843/3Noz526hit7TjXHyf9As74UK/9mKK/jorV/ZDz
1Wmz26dyRLS28/SjPQkVcx8KMPY30I98mo9+X90nUtt5+sv58TUcy1c0/A36
y6JVxW952Rh2nn7RsKhf4SZ7LLpMv4j43KiHz2KLtvO0/18fnT2a0czwN2j/
e6aH7Wr+h2HnaeejD9axHfXJeO+o7X/pz/vXx0ZoO097LrTVofj0O8Z7Ndpz
k6crh625GqHtPO02/5Ed4bXOGe+NaLcFhWPnaZ+95TyUaZ+15brYef3eQe6T
Mu1wl/wu7Dzt7Y3oQJn21kd0w87TrvJ8sepMmXbVU54Ldp72M0WeI2Xaj5c8
d+w8/kUJaSeUaXf/xlvbFfaddoe/QTujfeFX0J5oR/gPtBvaC34C7YN2gT9A
O+D5M+7zvHnOjO88V54n4zjPj+fGeM1z4vkwLvM8eA6Mv+iO3oyz6IuujKes
g6DnwpVW3ShTD2e8RO8I1xXT75Uw1n+oh/P32I/YLlZOmXp4Drv8bcP8UlTy
qBf23vYpyr+Re1hctShdph7uujt4yAW3LerGz/P/VnOZp643tnLK1MNpD7QT
/E/sEhx7RZnfNbz1ghWv4yJ1mXo47Yr2hr+KHYNj3yjjP+zO/t52VJtIXaYe
Tvuk3eLfYvfg2EPK+BVtw5/X3xZoMeZvUg+nndP+8Yexk3DsJ2X8je6hjStN
+cuiy9TD6S/0I/xn7Coce0sZP+R6TKn7n7Mb6zzUw+l39Ef8bewwHPtMGf9k
fTGPGuWDI3SZejj9l36Nf47dhmPPKeO3BPRp0yHpfIQuUw/HDmAf8Oex83Ds
P2X8mQaB6ysOumSs+1APx55gZ/D/GRfgjBeU8XOyqoFnZr4y5rfUw7FL2Cvm
C4wjcMYXyvg/pV7sz+JU0pgvUw/HvmH3mF8w7sAZj7R9FL9ogtfwXIfcjPk1
9XDsJPaT+QjjFJzxizL+Ur7+e+6ce2usR1EPx65ih5m/MK7BGe8o48eFt+vd
yt3NmL9TD8e+Yc/wr7An1Du3/+/jqYcvaH9YrbU/r25H5Kvczvu0Ov0o6X7J
uZG6TD0cu4edw0/DzlCPDnr+I/Xwhp8LPgnzu6HCmju3Put2TRWdGzMtMcWi
y9TDsYfYP/w97A/1zvJ8KVMPP3G7XY6xYQ9U12Izprp431NhHfpEDJ9m0WXq
4dhJ7CJ+I3aJ+hfPre2WMvXwYvevlrGxCVHRE/4OdQsLVjnrdLBdVsGiy9TD
sZ/YS/xP7BX1T5pZ+yNl6uGP6g6o5+L9XO0O+5Li5/ZMedc7G+4aEaHL1MOx
q9hR/FjsGPUVxc5Qph6+YvuPzt72r1W/lutz29i8Up7dtk25ejlCl6mHY2+x
r/jD2Dfqg8R+UqYevnf+/dNuYeFqReimNfYu4cpv5c/bzzPPQ5l6OHYYu4tf
jd2j/qqMC5Sph2dtsNXZ296i4peNKOfiHaFaRbwM8bkfocvUw7HPen+9jIPY
Q+0PxlrHO8raXgofkDjqgZ9blGqr6h9xC8u0I661tnz9EaHL1MOx23qfjIzv
2EnqV8s4rtd9pB4esLPh32F+MWr/h+wNvO1jlNNr2zK27Sy6TD0ce479Zr6A
/dTzCPFPKFMPL/NXrtiMjDhlezDkup9bnNo937XHmRMWXaYejp3HrjPvwK5S
P1D8LsrUw6flfjbR3iVRDeqzp0uYX4JybvVLx/x1I3WZejj2H3vP/AV/mPpN
raz+JGXq4c8v7cvi4p2sAgtNeJORkaRK/tb/R96QSF2mHp5vmnu+LDbH1c7f
9ka5h+1X94VTpv6+6XjsfdTO4H9OH4pUM70mnPe2v6KanW7T65XfJTVZfhdl
6uGUsd+jllU7tqNwpPrY/2iivUuQ2nDkTX8bm9tqmTwXytTDKWOPe6zKNrym
j0X52aWvCvN7rJYErHBx8X6kbKVdUaYeThn7evSfbi9H1rGoCXPXHLJ3CVUt
q/wx2Nv+qXrbxdovKFMPp4y97JdQIZdLSoSqHl/9mlvYS2Wz+taMML8X6hfp
15Sph1PG/rk3H5H64EamfXC998rP7a26+GXIenuXN+ofsUuUqYdTxp69OP3H
2u9nM+3J6zrfMzLeqYuOWZ77ub1TPmJXKVMPp4x98pL7qeWdbYm9S6QqHfVw
SJifRd2RcYEy9XDK2Bsf0Wd16+BiLt7RynPT9vcZGVGqtYxrlKmHU8Z+RMrz
Sv62c5dbWKwK7eg2y94lVuXoaB2XKVMPp4w9mCbtp8M/7tW97RNUnaxN8rp4
x6s84ldQph5Omf7dWtrz4cHNLvi5JSlvvzwb3cISlZP4RZSph1Omv7pK/6I/
Mm91677Wr6xNlO5f+F0NTx7vUbd3pO4v+EUev7uc+vDQaP/4LcUv9rnTc6BF
t2f8itKjEjYNKWDR7ZNxf1btj/YlnxntjXG5gd20UeMuGO2HcbOtcNoD49ph
OQ/Pl3Gnp1yX58W40FruE/2x257yu9ATuxp3wqoD6/7M+ze0tw2fGBup1wFY
n6j7/n2zu4+M/UOsJ/RuZz2eMusSdqnW4/l7zsd5OI6/43iO4764H47j+lzX
L8+yk2VuHdd+u0e9VxMO2Ueq4NDZKyosuaL96tpxB5p3WmFRLgf9L5/0DdJ+
77oqj4PGF7So8IvTpu6ONdY5l73vkbfYsQi1tZLd2oRpodpvtGvTxLbuiAjV
0+uMb538Ydqvq1N11pmQphGq+GfXmzN3vNV+18t1Zct/qJ5pZ2p8cbfYRagB
4hfZriztvLpxhGoTefPfnIMiVYD4LccLTfrFd3CE2rfRZ6nDEWNd8Xn5asda
H8j0ezoOKdElPXP+JuO+p3/zr/1zZPotWWrvmdTUGJeXhZ/59/Mci7p4Jovj
5kVJqraMm9m8F50rUDJS9Rj2Ki3u2E41Ln/NfYMte1RqJY9fy3hGqjKhlv6b
dvqrw78XaBja6KIqkBQ4rMwTi1pw0cHyZuJN1T76SucfzrfU6Utzd251sahv
K4eXGL/poYr4e9aVNrUfqcgNZx5szfTn/Gs83pulf4jafv2XsNU3QpT39D7v
yyzN9G83jg1o9/656l3tfPqLHpl+94jJucq6ZvqJWfI9Xzv/tbJb371AxfjX
qlf/bMW21YtQH0+HeCbneaeGZXwtWq/ZOzVc+F8j92Qv2s2ibp26vbN35rwl
Rs5zuuwE7/rbolSlERuqzX4Upe7IdYsGO5XvEx2jFpYZ5r+nVKwqvNF6n+6L
CvrOqRGv3j6q0+b2oHh1XH7X3UZvGuzzzLRHC7OFJB5JVOcSrTpsaRg8oPDH
ZOWQ4nvjzpVklVV0o0w9/FK1385YuqWohn9dP7t0UYp6YDOoa6c9kWpzW/+/
lw72ybRH8QW8+3qpmCxWzrrY9eBD94LGH1MxfVzqhDtFqgkeVe4N7XVGzzvz
9lt04+d3i17nqtp6aLTtlUBVqO3AoLhMP7DG8k6lWj2+pueLpz1Gtpg/yljX
2llyZ6kNUXfU84BQuwm/ZfqNfZZ2ePbxnp7nfSt2eOqi9Ai9DrViotv+Ygsf
qwZXDpWfejFCFS4ZcblO/ifqp8zPnjm3HZFrc4TqLetKbV7nCexbMlTV6Pzy
zc/xEere7NkvZu54pvxlXtX2W4uCuf/OnHfIOlH21gdf7D/0Up0ZMaJ7thYR
amFsmQ83a75SE2U+1KbZtrFL6mfOv2Td59KxVh9SGr9Vt/N3W7SoRoTaVbVv
jlyDjPX/R8JZxwlYPn5RmZh3qr+cJ8vrP9c6HDHmHy/kuqzLlHVyKursGKmm
y332XfOtfJd0Y/1/mPyuLLLOMjm9wM6hU6NVweZWHS61uuM7qanh/48R3QbI
usmzg68dll2NVRWKW3Uu9W1Dw82LjPX/eHkurIPU7+t7/ljeBLVLnqPnsWE3
Ax4a6/8hbazPnXUNn8LTWz/plqRW9bW2k6eD6na12Bl+soO0q0P9R9zr0GWj
ttPHpw9IPrzJsNvUw7Hb2S5t3TSpaYraOs3KKVMPr9nzSfaWJU6pfbaHHHLO
OKE6HlzeyuG3SN2+ae+083ZZ3Dc16LhPRco6cXLGmi0jxxj9Ir3Fi5oHRh5U
a2PO5s3XOVKXqYd7zbSvd/qfq+pW11V3fCKuKMf0IgsTl1l0P6Hf0F/WVax2
KjDlol7Pqb7Ee/7a20b/imk5KOPzzAA1tv6Yao//segy9fAcnfuPbB1yVzlX
Cvq3Ss67aotL/vMOmeML/Y3+R79rPvjxiglbb+n1nIJbUys2cbKoG3Jc4oeE
Wl6Db6vIIrNyFnew6DL18KaFOnYaMyNY9Zme1e518WC19OC0d4mZ4xf9ln5M
/+1bOseAeQMe6fWc5Y19Zwx+YvT3k4OK1i50/ZH6NDVp07NrEbpMPfyLZ/zw
MwWeqZKRO2pWPhiq0gv9/dNhVITu/9gD7ECp+Xum3k0L0es5W4bdWJl7nmE3
xt493qFX96dq+xj/SLspEbpMPfzsu8Vzf+4MU6EdmrZ3bxSmns87VjDJKULb
EewK9uRpgtPaYgtf6PUcp7JNelTvYNifP+t0GrY79oUKjY+Med4qQpephzfe
531/T6lw5X3m5ZBz996qOj8nFq9WO0LbI+wTdmlNtze+fUsa69jj+hd68bim
YccitybMTpj2Rm1MH7OnpGOELlMP39JrYO/bgyKUfcEml+dknjdDfi92Tb/n
FPt24E3TwU+6Gevblas1L5pey7CHj+dd77B50TsVtdS15NO6EbpMPfxjfseY
xCORauG1PB32ZY5nvxe2Pl/sI/YSO5l9bb7Uz9uMde9+ix5n9+ls2NUa9de+
CMj0R08c9mlRuEeELlMP/+vqT4/CH6NV+JQXz+9ciVY3pT1jZ7G72NtBbcJm
lIkx1nNKjg44fnpxpk7u1uOWJAwcZrGLVt+616t6b22ELlMPPzH5vk29ZnHK
2eHg0OQ8ceqM9F/sNfYbux34/VBuZ0djnbx1WK5iXcMMOx+/w/FDzkGx6pxX
nRvZEyN0mXp4gT+3ruy9OEFtDZ+cVqRbgson9gq7zziA/S9/3HP90KnG+nlS
6PEa49oZ44VLt4zZDkfiVVqX1aUD+lt0mXr4qLejSs9+lKS+rms1u/62JHX8
gNU+M34wnjCOzBzSpuKyq4l6PedHX79s+Z4a487BXA/ydUlPVGt2ulT9mGzR
Zerh+DH4NfgzL/xXbZrS95yuz7Hrv4+nHo5/g7+DnxN5LKtNp643dH2G/F7K
1MPxe/CD8H/6zmlaO3zKAzVf6tfL86JMPRx/CP8Ivyi+apPaDR8Y/lKgtDfK
1MPxk/Cb8Jf2r3nRYd6A57p+jvQXytTD8Z/wp/Cj+n2bPOxu2is1QeofSH+n
TD0cvwo/C/9qVc08TsuuGn7XXrFXlKmH42/hf+F3JUU9v3csr7E+/FPsLWXq
4fhh+GX4Y+03H+j1pJux3vtcxgvK1MPxz/DX8NMOdpoc/Xmb4b/9Ps063lGm
Ho7fhh+H/5YzWyuPMjGGX5cm4zVl6uH4c/h3+HVDzha1cXY01lerir9BmXo4
fh5+H/7etdERK4ZONfzAoGirv0SZevhD4kaiGjTbVcFTuc19+Ofe25GqzY7F
D7dYRuj5+oOSVWosDjTm72eLe2ef1MtLjetWZ1Xq8UjlTbyV1/xLAQ9TVPU5
1vMM8nQcUibGWAdYV8J6HsqHz8b9uTlz3tSuq/U8nJfrcH6O4+84nuO4X+6T
47g+12UdoZxr2uzqd0+pTTJf1u/nvtX2+D3PNeUr82vWEX7cHbv/QvV7qrfM
x1lHuPAgJHH/oWC1S+bvrCNMqT8hR2rjZ2q6zPdZR6i9s2CFhg/CVNQK6/oA
6wieC0LLODuGqxeynsA6wtMG+w4NnRqhXGX9gXWEOkke9ZZdjVQdZb1Cx3nt
an7tWN4YFSjrG6wjvP+r8H+edItTx2U9hHWEjnnCX33elqByy/pJLVlHOBhw
bGSZmCR1r651vcUi/vqnyCY/fl+2XbmPL7W68vRIXaYe/tKuxPFjeVPUEPaz
jLNyytTDmT8zn2YezfyZ+TTzaJ4j60OsCzGvYJ7B/ELHBcm6EetFzAeYHzAv
4LmznsQ6En48fj3+PO2BdSbWl/C/8cfxw2knrD+x7oTfjB+N/0z7YV2K9Sj8
Xfxf/F7aFetVrFPhp+K34q/S3ljHYv0K/xJ/Ez+Tdsj6Futa+IX4ifiHtE/W
vVjvwp/Dv8Ovo92yHsY6GH4Yfhn+GO2ZdTLWx/Cf8Kfwo1gvY/2MdTP8Hvwg
7f+IvaDdYTfCpf1Ue3U96ljCeTWgn/V4ytTDS9QdcinH7rOq/lfXg6HF/FTT
i5evT/hs0WXq4doeSfvFLtEOV6qy+0eWvqlS5XdRph6eNTFxjc/H66popyGL
f1S/rsak/TanxHCLLlMPx97RD7B7tOcchXu++N7soSoj+lOmHj79UpUbVUo/
UMvL7/Bf1fW+ct+7fGHDtAhdph6OPdX526Sd0C/UeJcct2qGqLejrO2EMvVw
zzY1/+2z44ma8yXxU6EmT5RT8NeQsI0Rukw9HHtNv8Ru07++v4guX+j6c1VX
2jNl6uH1jj8ovr/mc9Vs4LJCvR88U6+mu4390TtCl6mHMx7QvxkX6Kdnmy9o
2Kv7a1Vc+h1l6uGpdmNqpFx7pb7cqfLHngGvVJNd0V22N4jQZerhjDfYCcYd
+vv5p6t/75IermaJfaBMPfxp4AL7MkfCVa9NEb9Onhqu+jUfOjsgk1OmHs54
hr1hXMNu2C3r7zepaea8hfm7lKmH15nU9YRTpv9+vuOJY5uvZs7b+8d96tva
KFMPZ7zEbjFuYn8mNaveYvOiTL9S7C1lvb9A+Nrff2s2tGmUsss6p/HlvFHq
3ucJ52ZMjtBl6uGMx9g/xmXs2NO0fx8GPIxRZ2VcoEw9/P3r1KCli2LUJL9O
ty3dYlSRfFmvl878nZSphzPeY0cZ97GHNQ/c7WOxi1fFZPyiTD28o/flHsce
xqnHo8r+lWt7nMrYsr5Ug98tukw9HH8Ce4xfgV1d/ffmuJyDEtXLxdZxljL1
8MOtvSKD7RJVjfKJ7xxiEtSGA47nQ45YdJl6OP4K/gt+C/5GUsGRkx2OJKs8
4g9Qph6e63uf8Z8HJqsVT/zHdnFMVqHVH+1OdYnUZerhTW65Fov75qtmdnaM
XxJ+SK2vYeWUqYdPW33Ga+W8E6rXvZt7LhU8pfIETTn/tHykajW/s2eHwYHq
SNDKsBENL6uX8rsoUw8/vcnn2/OoK2pv/XLZx/teVS139dq9aYlFBXRbduTN
4jvqgV+WXa2v3Fbp8lwoUw93GP2o2ug8d1WZ3L0aZHt8V3VLd3r6Kp9F/bJ2
kHuD7o9VxZblRiWmPVJv81rbFWXq4a7bFx6fVTJYtUu6cyZoWrCqea2a6w7f
zHH5e8aSubFPVbjvhfl1Fz5V66RfUKYeni9nxaBbh0KVbffhD4vmf6Ze5K9Q
6t3wCLVuyLbdQdNeqq3Fe22bVfKlKi79mjL18CD3QEuhJmHqaoBtXJ8dYapd
SMk/djeLUB3uN7pYNP9b1W3WJ79bh96onmKXKFMPX/S8749eD96qy0W7ZHli
F65mlCi+MCJznpvzl8RRxx6+U8s/uIzItf2d6iZ2lTL18F07Zy7vkvl3ZW+X
9/o8MEKNkPsZ8tD/c7BdpIo9YPfRIcaiCs6wjguUqYf/7NbBbvLUzHY0I7l0
mSORqlABqz6X5y9d8HlgtGrRJ2ZuF8doNUXGNcrUw/vl/mXf5qvR6oXjpQNO
6dFqhDyvcg16Fi5zJFbtLuRXYPLUWOUj4zJl6uEXLsXVvJw3TtWPWl5naNM4
NUbaz+zEytud0uNVthsLtmy+Gq96il9BmXr4LxPOBVi6ZfbzTb2vLF2UoCpI
e3618+MfQ5smqf5Tu1a9nDdJXb9g9YsoUw+fWHlx+1zbk1Rqx987HXuYpNzv
WPvX1Y8l33UP3aOyzfro9+nCTvU28faca5Mi1YNtWZ51rnNRpQ5MvVL+gL9y
yHHw+q1HmX7rzgvl/JvdUu5Zaxf7zfOm6rJlhWv7NhaV2OB71f01H6nYJ25t
Tm99qNr6Tv6j04sIdXDXxuYp10LUcdduTfcMCFH5Gw7r8GhR5vPNU69Pg+4v
1JgL77snpj1XG53/Pvc400/41ePJpLmxr9Uf9qvG1V34WiXc+Gusa50IleJ2
rs3Qpu+UR+sSrS7nfad+CG//2+KQpYss6uG3yMeW/3svKuc5HPrXwGMPo1T1
f071y7U9SrWW6+Zabp8cbBerVgyel+AQE6M85T6Hqg/TPg+MV3Elu3h2cYxX
neV3Xf1wJWeZI4mqzb3y2SdPTVSPslt1WFMu/j9hVT1V8+Sf/0meuUR1OTrq
3Dn/SHVlWY/eeect0e+RvL69+/nlYKS69mc/l2OZ8/82thdb59qeoir6Wo8P
3bU++PM24/3R2K/W4zkv1+H8nJfrcH7Oy3U4P+flOpyfdY1Hss7B+gbrFKxb
sF7B+x78/HZzAorstY1W62U/CfsWum8v1mrV/gTNOX5+2NXHs8bFKnfxgzm+
kGXrkjdBSZpz/KwmX4MOnI9XRWXfCcf3WlVq+sLQFM11PLrP0rNjEhLVWVkP
5PhNKa+6/hKdqjnHj0os43rSNkX9LfuoOL794tAOrs/eq4z//++t5lclzwzH
6/y6zd57F1+Qqo+HT5Q8P8GyP4rzPF6Xve7IXR805/izXwPiao1OU3vlfQDH
P1/odHfhzHTNOf7iiH9mPur6QU2WfTIc/3Rbr08pf33UnOMXHHELn1w/XbUV
/4njb0+L/W7j8Elzji8wYE2P2SU/qtKyn4bjj/sv+LVIls+ac3xP+5NVW3z8
qBJlXY7jl3+/4Tsj9LPmHD9g/fBNvwR/UgGyn4nja7SrenXc0S+ac3ylbi4p
A//5rPcZMu/7zwjHtPaVYnR7g/cskrf8erso3U7g02LepVhi4nR7gNfo43Xz
VJVE/XzhOwZ3aFetc7J+vvAoyQ/Jc4TbnTrX4Hj19/p5wV8eGX/CpVKafi7w
PyrF1jpQ/IPWH57z0qmsv2VJ1zrDxxceM6xoXLrWU8cLBx7cE/Lgo9YNHj48
i83lU5+0bsxb893K1b5jaJzu1/DdsW3f+f+I1vrAw+v0qRzvGKf1ga+826Bq
79kJWh/NJQ8b+sA7Lak9dPyTFK0PfLBr9c+3U1K1PvAv+cfN6pn8XusDj173
aWVgdJrWB/7nwl6je7/8oPWB35rh2Gd2ULrWB36+VNH9S8591Powv16/xfVb
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
GOsS5KvZtXLU+0vljHWJjFXW+M5Zyw6v8/hPgrbnMbKvY8jGj90mDzL0aWH6
ThD6OMh1bxQcsbCOreFXF5PrzpLvjKDPv3Ldurm3tM03N0nrEynXXTv9fo3h
uYx1m3sSf+o8Z2LDRS2MdZvTYg+aiB1Dn60Sf13+sV/cmC3Guk2CxEPvvb3u
7Mz5xvoD+XYWO30YsbSJsf5wQeJcd20qdepRsPH+Yo/sP7nTfv6VpoUStD1f
LvGwnXJFHhlUzWg/sXLdeR1c0n4tZMyLiYOoFjbnw7h8sVqfc3Ldz4erLTgR
Ha/12SnX7Ws3u5LTdmN8XyLX7bJiaq+JZYz1mXGy33nGtshmXfoa6zM9xR60
lXETfZ7I/TKeok8biZsYLOfR+ki8b025LvqwT6a83Cf6EBd8U34X9pz91BWc
L89sVcBob/1M3/fR61pyP1Wc98+fZ2/Mf/3lfia5L3q1549YrVt1uZ9SHazP
q7TO+2C9n0/yfNGthNyPr7QHvR4ocfTnpf2gW02Ja68s7Q3d9sn9Ms6iWymJ
h64m7Rnd2OczW9o/uhE3XUr6C7qxf9xD+hd2njj9kOaLg8plN/S8aPq+D+3T
Ue7/aLMfK1KrGnrayX2+/T3vpMqdorRuNnI/b8RuoNtEuZ8fYmfQLVbuZ7fY
JXRbJXH8FcSOoVs2iX+5KHYP3abg/4qdRDf2KWURu4puxJWPFzuMbuyXXyV2
G93IS/BA7Dy6lTZ9xwfdvOT+s7v1juvbwLB7WeX+R1QqcL589yitT7Bct+Vw
63ik10vlumNk/EKfJMlP8E3GO/QZKPE1wTI+os9TiZtnPEUf9lMx/qIP8fWv
ZLxGH+IAsreyju/oQ76FGeIPoI+n6bs86JMo939X/A30IT5oqs/QC9cmGnYv
RO7f0aZKK++NUVqfvXLdtuL/oE97ybswU/wl9LkscUCNxL9Cn9qSP8Bf/DH0
Yd8X/hv6kGeAcRl9iG8IEP8Qfcgj0Uj8SfQJNX1nB33ayf2XPGb1V9EnQO5/
4Gerf4s+teT+ry3qm6vCLWP+e0jyRkwSvxodykpc0hXxw/X8V/IllBC/HR3Y
h/ZC/Hx0IK+Cu8wL0IH4DMZfdCAPxl6Zd6BDHdP3cdDhoNx/gMxr0KGM3P95
mQdpP1zuf73Mm7DztuRDc2r+aEINY92JeIhLrcOdH6801gfYN1Fb5nHoQ17J
nDLvQ59Bsl/OS+aJet1J8upUl3kl+rSXuJN2Mg9Fn8vSrhl/0We16Xs36GMr
9x8k82L08ZT7z+NvnUejT5Lc/zWZd6PPQLn/ETJPx54/lfsPula06MWjhm68
rz+2aGi9rXlidH+sLPP0Z6InvIL8XVubwDK7HhjzO/KZtBPO8aw/xCy0np/n
8krm12XHX6lst8po5+TXzJtrUN/mraP081oo89CB9/6OauQYo5/XMNN3T/T+
E+HXhXOekzIfWdYw2uFkVeP4Eabjee7H5Phf5zx+XWGjwZfKPChbsXt+bW9G
6vP8afoeCrya8L+Ecx72k+c8VNGzbA3jeN7bVpQ8/xz/UPzkTTJe6/diksel
w7K7N+1sjXk0+8YdLP8sHrrYOA/vPZvLewTa50rhTcV/4Dwe4md+dbL6Y/Cn
4t9u+33z3KD1xntz9o3fKDIt+OYXiz6e94aL5T0R7X+A/F3u87cLh7aK0ech
r9FE8avh5CsqJMdz/+wbHyPfa+B43rt1Nb0HLC1+4GW5f+0viT9593WJVrsq
WnS/sxW/aIXozHlCZdzP0sOaV5P+GG/67gk8WfhO4Zw/UMbrrtKuOB7/Z7cc
T7++KMf7dU86uiLC4M9lnD0n7Zzz7Dd9DwV+mO+ZCOc8+BUxBcf0vLjQOF5/
X0K+68HxnjKOhMk6GHyd2PPx0n/xlxiXi9fed6fxeuO6rJ+PkP0/HN9O7O2Z
1tZ1S/gMsZM3x1ntCfaH8S4g+4kVtQKM87DOnF32v2F/iJeqksN6PPYK+1BC
7pN+yv4Td9EBO0O/Pi660e/o1ydmJFx/vczoF/SXEMnTSLulPZ+Tdkg7p31O
kXau/VWZX7yXfkf7pP2MFzvAc9R55sXO0A557j3FLvFceO4r/4h8vaJQpNYT
nYdIfjz0198vy2m15+hMXOPy1rcPXNpk6E/+K1vfn9venjOOJ//V3vM3HaYN
Nuz5S1lP29Hyj0YzfA39XWUd6duE9nEz3A375iL2J0XWN+C7TN9jglc3ff9F
6yx2qefQPy0t2xt2jPlmnkv/njm52Dg+UeZH6ySvGpx51uCOv9+MWms8r4mm
73fAg03f79D7PWR+kad8rpJRjwyOX/3z4co2sz4a+UAY9y9fiG0zc6Sxrthb
9C87z69HwsR43c5fm75zAY8SPtvE2bc2WL5/AT9m4vSLerKO2jEpo8HA67Ga
b5b7Skl263Ljs3E8/W7tiqadG9811tu7y3NPfF131Zohxjg4S9Yb89aoUjNl
gjGu7ZJ1ztoTbwa6RxjH6+8RlQzKMrCcwb+bvpcBzxC+WTj91yLreCcaNt7r
Ud+Ypz/mO4oy39TvR2Qd0rNGfHLxBOM8jNfXHz7rXnK5wXfIOph/wIFKs6sa
/In4Cc06/OfQub5G+9wrx988cPzbhgrGOqenjO/1Dp61G+hmvP/dL+255P7W
XseeGestK0zfv4CvFu5t4uw3aC/fxYBfFu4iHDvTT+b1e3uuP3TlcKzm0+S+
WqVY2wMcO9bk5JPk/O+N8xyU9h+x9kuzDeuN8cJR5r/zj+5c6ZvP2C8xROat
6aubjKzqa4xT2L1tJyxPj2UY5/EyfUcD7i38tnDsYVaZP9a5uyFx5QJjv0En
mScGvcoY02K64YczDmZszD25WWWDD5D51/DgzaPrPzDOP0PG31vpN5qstTPs
Kvknli1dfGpNDsN+6u90iT2n/ZB3YX39iREhvSN0u2Udr7Dk46VdsU4VmZI4
19/BsFc89++Sr5h2pfeZyDjI/RPHf2Rsd4+HAwy/+r7pu4H09/HSX26Vs9o9
+mMpWZeuIvYTXtz0vQZ+b5Ks33YQew4/L+u0Hy9a7TntdorpO3HaX5LneETG
I9pDBZnnusr3F+DMfzsIR4dcMh+828o6PsITZd7X8sh/j4+8z+3v/t+6/Wb6
LhvPHX9mnVfBnCEDLJqTl6nFsCb+QV0sWucz8p7ogowjnJ/3Uz0kDzA695X3
JpdlnIL3MuX/h/Me54pwrgtf1HpkAW9343nVkvcRy0uXq/3iuuEv/ZD3Dk1l
PIXzfuSitE/aM+8F8praM3mEjkr7pz3jX2WIn0Z7KGX6XhvtHL8rfEnXepV9
jfZvI+uHBxoFB/15JkK3H9bTfvWw+i2cn3z1kyRvOe3nKnnpJV89PMCUxx5O
/pxpwrku/OGCIgXyNjP8N9ZtJnguSQs4aHDWZxzFH4OTJ8fWZGfIW3NVzk/7
IW+Nk/wueGWTXw2fY8rrTjshD42b6Aln/ntI9IdHmfKu0w4ZZ6+IvYJHm/Ko
066Yz4ZM2B4Q2tfgq+R9zQzJrwtfaspzTrvCfnYTu6TXS8XfuyHtn/bA+u1K
6XfwstIOB0g7hDua8njz3Fnn7CT9XY+bMi/bLvYBntWUZ5t2xTi1XPJpw1mv
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
+rrS3nQclPA50v7pn/B7pv5lXp/R66pyX/i9nUzrMPiNOl+08MISj8l5+B34
yZwHjn+y/n+st3B+OOO7zpco3LmYVWeui0744VxX22Pxr7guHH/M3bSugv/G
/cB7mewAvIKMv/o7YsJzN7C2cz1/kOfGvID7hONXc59w/FXuE879FzWtq2ww
6Qlfa7KfcPwEnd9bOOOsfq7Ch4j94Xfp77+Jn8/vgjMv4HfpfWvye/X3SoTj
D/O74LSfs6Z1lcam9mmOj9P7nIT/a5ofwfEfdB5C4YzXOq848x4ZL/KZ1hNc
ZD0BHfQ4L/qgg85vKu0BHfR6i7Rn/V0S4bmlf6EDfK70379N6y1tTN9TgBcR
P1a/rxKOH6i/uyH8vdh/9NHzDPFbdP4o4X1lnNXrccJvyvhOGf1cTN9HwE84
YFl4IdQjWuvJ+H5w2Oub9dKMdQM93xG/C33gQxbkbtgl2ciDynhRxbb/zqvJ
Rj4ueKLMOzgPdtVp4eNOK68Zx6PfINmXi/7wAqZ8+5ynixyv31OK3m5yfp3n
UPQeLfeJnjpfvinPPPVw2is8LXpx/xvvjf5M/SnRU+fDlOfzt0l/ns9+4bRn
nhfPRecpkHnTQNN3BKgfK79X59+Wen6vXseX34dfzXW5H9V+5O6uL4z1E/O+
U54j/tiOx588/zlsPBfaSbrMQ3mOeh0sPGh4Nw/jOwu0k5nZZ8T8cs14jvAJ
Mr7ze9Chuun76fxdq7flKk6aZDw/nVde9lvyXNCh2Y6x00f1MfqR/q71dP8x
QaEG5+82DXbsNtTD+N4E9+Mqz+X/AX1dbUA=
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[
           TagBox[{Polygon3DBox[CompressedData["
1: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
L+3nyN+ZX/hYfNV1aI+2zrxPv+bcepn7zObccs1b5X2pPae9p3onrX3V/n1F
vwaZ4xWfRptKtpXsu7Uz23jSPz1j3kr5R9XKKl+luN8BmWN/qu1WfFlr6wfG
2jZzDkhyRflXyV3FH/bPHIP4lXPdMufsfi69DlTT9wVtKfz6PPNv4FVYN3+X
jtcp7qec4Wu05vKLqlgzw7XfQmcx1iqZbTzF6pUjk82nmIx0qmLv2g/SxYq5
3BP3/P/rZCbDmxscX1fOTnNdcJ9zYgy6LXhGjHGrNu9Y6PX6LqX1hvKbqus7
CnwddEBpfaW8qnzVe1LHUtZmnJsYZ1Rq2atv92fh2irFBVTDthZ9ro85JO0L
zfv3pdeZeB9HuXtvlL2KZ6iGSzWWqvORXa/aJOVtx6Suh2+aeY0qzqjaJFHt
EZ3X3ta+1t5Rjfwtlff6uMgfGb+f7itZqPUtedie5/w8s/+k2OazqW39OfGZ
9DyqlVIcr19p2121+ootaq0pBqL4xai4nhRDlu2smjHljlVnKztScV3VjCmW
e2TpuRwV+6uG89bU8dx6imVnzjueCF6WOeea8V2XQGfTp4J/YeZ8z42la/O7
4/9eUzhPei20K33mxXyD/KYzUvvJqjE5FXxD4dzrSbG/4vaHp66lVM3/KbFP
f8b5KbMPqvoRrY0r4f9LmwPv/cJ6RPl+1dHtQ/9vMudpVgNfnjk2oFqIofTd
q85+h3yc5YXrULQOh4FX0mZlrhUvufb8zP6S8rnK+Sq/2ye379wVvDp9hma2
pxqDb89cN6Z8ruorzi9ch6a87h7cdwP6jMxc06aah36xz2nwV8BvlFm2S8+u
KKxvpHekU9egz7DMufmUb/Er+IvC9TvyARXfUKxbtRWqvVUtwSEcD4bm9L9F
9wW/yfNszVgF67MGfzj8+2WTwBuRub5Nck95LNUZDiyciz+ncFxROXrl7GV3
ySbtUud80IGxz6vB8RzVU6l27Eb5PtDBwTll1QFKdsmW0383NwXnlzeG/4/s
oprjfzcH53mblq6jUG5UdQr3BY+petd9ZJMlrsl5ObjmWfVvtwTnv5qBVzLW
v7T9JEOD6wBVFzSicnxf/4D8xbm/afvSbg3OP27CtfcH521VZ6sg0uM1xz5l
q2ifjoEuLy0XVKOoeh/ldpRzV2xT8bONoE8H53lV86YabMUcVBPYOfgfGdUj
jQquU1Vtz1PS/zXrhqeCc8GqwesS/H+NapxUZ6RaANXH3A3/2sT1osMVk9J9
wTdVrvuR7d1RNm7i2jzVdeu5NuTb3VW5dlk2/52V80ay22+uXE8ju/eOyrko
2clNeK4HMsu7ayrHrBVjub1yXYJs442UZ81s49xauUZEdv5o+GnNOuzH0rUd
qskfXrn2Qrb3XcF5281L2zDyE1Vvdmdwzrd5af0ov171csqnKz6jWsoT6NMn
8b8w+r9HfpP8pxsr1yHJ77i2ctxc/s71lWtiZKt3CP5XSPVgN1Su1ZD9L59d
Pm5b5uoP6eSa9b3sZPnjqqscFuwLN6bv6cF1BarFPTW4rkD1sUODax4aye4K
rpdYt7S9IV2pPXh5cL3E2qXrklVHoXrgk4NrElRze0VwHcU60nG5ax4ku64J
rk/YAP55wXzV4spmke2ivX+QYmGJ46WPBNcAqI70Uc174prP+aXzyvpn5Nrg
XPCGsseD6wQK6W3wgMT+1PHBNQaqDT4wuOZBNcOSWbINVM/ZN7huQfHb//57
SSyLdy8dY1Cu9vPoY/xSulZBMn4p9ILgGg/VJ//J+dO5fl3ZgvBPAM+l3x/R
Xlf9rWrolHtUHkT/n8j/uKJw7bZqJRSv0f8pim/oHz7VSyrXLnku+6eKclX1
evJDVbejvLByx4eC1+G+p0q3Fa7RW5A4L6N8n3JefeJ7qZ6udZ1rDGTrqU5p
QvD/F6rXVd2IxlReegj80+E3BF8UXKOi2mnVXSr3r5jtYp7r6JrtftX4qwZj
68L/8ijup38KG2q90efLwrX2yp22KpwXUD3yVnXO/UkntKxzXk+2xDjoitLx
Mv0vMDr4fxbVwU6pXJOh/+P0n9wt8gehQyrn4RQPv7RyPknxcPmqW2b+j0w5
EeXlVYsoO0H/9OnfvumpfQDZ/4cE/+ukesgHgmNZqoWWva//JmXzPw7/usS1
u3dXzrsrBjKtcm2N/p3UP5T306dLbttcMXPltK6snBNSPHxk5f+LFCd5Jvhd
VIv7WPC/J6r17R/8r5Nqdy+vnK9SjP2KynkL5QKGVs4hKV59SeVchXIHz1Wu
SdJ+UY2H3lO5qpcr1zxJH71SuV5K+uVgrumauKb6yOD/yFRXPKZy7Y7kwIDg
f8r07+GDleuKtAf7Bf+HpbrrV4LfXf+YvFi57kr69PXKdUuSmZMq13ZIrr5U
uR5LuvWI4P2oWuvnK9dINYE/sXJNleSJahVkZ74hvReck1Ld8vjKdVSSY+Mq
11FJvr1QuYZMOmhs5ZoqyasJlevDJCdfC84HqU5b/kuPuPevC66r0TP0CP5X
VHW5ae6YqtazYhctM/ss8is7ZK5DLqRnM+vl7sH/nKpGV77q9pnt/6U1rzft
nWGV6y2Ug3gi+D8j1XhfVbnWQfmU/wH/UXg9
              "]], 
             Polygon3DBox[CompressedData["
1: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
Gf9Ym0r/N675Ffu/0D8YO3WiCagFGNPvD14K/HU7v2GmXvhgeeH3zRdcw+B3
PYb+NLTZzCeMmejPSJuviXdHm5/1YkO0HXIzixfhfOV6Pze+Z3we5o9m/9ue
z28MPCPP827w5lXynzub73sl2unghcA9nvc9VeKXPxt+9a4q8cDvDb96d5V4
44+G/7y3SjzzV8MXP1Alnpb0ly99qEr80imTzz5YJV5sl/nenqoSr9Vl4qWn
q8RfvTLx0f1V4vd/Of844Geq5BNjMD4Z+Nkq+ceYZeJ7OV3XkmtKrtcYzlhu
A9qM+mfmP838icrEh6PBL4KnKBM/vgl+BjxJmfnvgF8A9y2Tz7wNfh48eZl8
6y3ws+BJy+Q3o8DPgScrkw89WSXerMrEZ89VydfGKpNvPFEl/izLxFuPVonf
ijLx3aTmBOYv4NnAU4C/0pfr+8GbsOXntj43Bi6jMQ1obKja02b87rfND2jj
es9ltIY1OWhG+k8xb5TxfysczOJ8L7/Rn9O1qZ7G9mfjY32+OVuZWHI72mJq
JHX8yZKNf1m1jm0bBl4AvFAZ3+ZNyjnImU3cxHhyaSOrxJ+/NfrLUH5f17iU
sYHg3Rhvg7fyd4GH9HKudcDzgpcB98DrgQcZv7Pd1ufJvm29X+7nL/B89Odh
/PEq8Xq3TLw7pI4tmxU8B/j5Kvnr2GXymVfAj4PHKxNPn1OF/3m34XOOq8I3
vdjwQcdX4ZNeatbbyVX4lFebfPqsKnzKOw0/cnYVvmh0w4+cxP1sy70fy/Ue
NH6uwn893/Avx1bhj15o+KXTqvA9bzR8wylV+KTXmnz91Cr8zutNvq/eqf5w
eDd8+/Aq/v3SbuzZClXiwcu6sX/zVLGPx3bDj5vHTmd+0U4OL/+vfTq5Gz1j
UBX7cyL4NePtKvrBYeCXwfNXsXcndaMnHFjF3z4Kvgn8QpV8bpwy+c6IKnzO
0w2/dUSVeOPJhq+6qAo/8VHjr64Hn6x/Bj9trlXFn30PfgZ8ZRU+6kvwU+BV
q8TLV3aTX7wGfhI8QZl8cPUq8dXV3eQzr4OfAk9YJn98FfwEePwy+d8VVfiv
L5j/JPO35H3OwbN6gPEneuH15PfGMqZW46jCt3xI/3/m11X8/eMN/3Z4lXjn
iYYfvLgKf/Mx+DHw7eCzwb+Cn/P9c52d2okZT6V/Jm3XdmLks8rY64uY/zfz
n2f+UmXiw7mMr+kfWSW+e6rhD1erop9f1U2+dJTxEXML8I/N/e7K+GPg33vJ
4cztfmlyu63rxNXG1+oNxiTGau93EqtsWIeX+6XJr4Y1+dJQc1Rjq7rJUzqJ
j+XE7qDfvwhXJqe5PXiWIvmBHKxa+spFuFn505na2eeY/PLs7ejfrzT8mrGn
/P1LdWKUwz22SOxyaZ1Y2HhcvdX4epfm+Rqb70T7pxV9WL1n+zpctLnQhfRX
dI2CB/N86j7JX8wV1ONfdq3XyfXMDe+tw5er1ZzXiVa7Qp241/jX/N33bS7g
Oz6jTj4zdTv6+FN18q8p2qlHeKKOzdR2Lu491+F8FyzDWcoF6+P0jfpUfZ8+
dZVufK6+VhusLfaezbeWBh9Rhk/fsErOe2SZNWQuLIerJr98K9yuOfghZXJ4
c/OpwNOU8UeD6nD+U5fhuNQCtOnadvPLTepoDFvy26cqoj3sRhu/HT1HPWqP
OlqAsdzjdTiZHcy/i3A1t1bJdfRR+qo5Of9BnH998KJ1Ysx5y3AGxp76WH2t
+d46dXysvtZnvF6Tz8o1qHc8Sf9/VXJP19jZTT5q7mgOeR79vepwaXLVl/u+
qujHX3dTr3JZlfjrs27qRRYt48/GoO1YhkfXnmwPPr6MfVOf/7YbPf3mKvH7
T833dUsV+/JzE8/dVEW//hFcga+rop9/043+fnUV/fyrbuojTqyiN74M/oPv
b1PwhuDbu6mfWQe8JviGbviG9cBrgW/sJj9cuAxXvTltfPatz/jajN/UDb+g
Pm59xjXd8DEbgNcB39xN/L8JeAPwbd3wF5uBNwLf0U1+a/y6MXhkN/Udl1ZZ
X5+CFa7PqFJ/8xb4r8b/HgJ+BfwneEgZ7n0rY385LvNr4z36N/fS9EMT1hmT
05+tG05frv9a8IAyMcVYjK/ENa8sw7VfV0dTPptvb/wiWrM1EKfyPU5WpDZC
De0scN8i2tq+tL7t1MtYn6HP1/cfpQ2Ry6mSH13eTb4gB/1ZEc1EbtocwLXw
eCe5wQVV6ive70Yv1r9Yf/FBN3qpOo7xxzYcczTXOa9K/dR73ejNcugvFOGo
5dbVqNWqpwHv20sOr/Zzb5Pby8m/XYQjl6u3ZsbaGbXKnXvhqO8twuHKXVtv
IB93QTf5zJAq+daZ3eQ7o5pzWfOixtWfNth3RVtD/1VGm1Ojq6rYCuPBoe3w
UcZ/S7Rj88fznGW4FjmXdhVO6lMO2YWxheVL63wPb4MXA68Fngy8Isct1Cec
ldzVQYwvYr5R5Fks2A7feD3tJfAA8A30r6U9Ap7X74H+WmXqAtQar2jwjO3k
KOYqa5bJ28zfrCdSY1RrtOZggirj1hqZY75YhsPehnt4qhNuW1tlfjCoHX7K
fGCg5/Z5l8lJRzN3ySK56jNluBk5mn/oP1tGh1WPXb2MxuT6fZbfuyi/93L2
rdvKPXv/2qdh7fhQY+79mb8K/V2ZP5T5u9apTdpAn6Ptr1OfpU/QN0zDvH04
31Lt8D3WNFnbpD0+kP6c3Xz7S7fDn67hOjSf8zvg+O3YLtlOzdIX5iZFar+8
hpzv6XV8o3HQ8n0SA+mr9dmnlfFl5heeQ77u3Dq2Wt7P2rxON1zvn61wEN+W
uVfr476jf6L+iP5zjC3H/OPBm4EfBC8LPquOLzDuWkH+HLxROz5T32ncZPy0
cTucsZqu2u4D9If0aTQNftPznWgdcpD6EzWPJ5v3ZX2a7/A5cxbawq3Uw8jP
XlyGB1rG9Uf/gzLfpjUvH9L/iPZDKxr+x/QvKsOTDWv8zauuuXY4m9fKhqPp
RIOVu5kHPLyVmhr1dmtqlmBs605qbRYpw7u4Bs2/7i/z7KwxHIfjPymTz7mG
P6U/N+3XVjR2+W415OGc77pOtOWBZd6FGrP6vXy0v9UaILVL18sw5l/ZiVZv
fZ5ryZzV3PUr2jjtaDZfl4l31VmMIeREB5fh3Y2PjJP83l2rxnSD6E9fhidz
TW3arHfrXt5ifNpmvatracNXaZ63dTDWw2xM/0bP10ldm/VsG5WpHTm3sQ+u
Z7UpayYmrjKu7TBHNlf2HJ7r/Ma+uEZdq9pX7ezaZWpf9D9XNe/POhj3ObZh
mdheDnp0mRoHax3MWQ/geuuX0bXUgsxR3ipTV+I+x9SgrF2xhkVtypqtLfkt
O3VSy7WC76SVmi71Qn2g+b55v75xWZ9pK+dQ3zuvTO2gNn2LMpz4j5xrqyJc
uferTuY7Mh+Rx5bPVsN7tLk/8ylt+qgyNRDWSC7SSm2E/ltfbg5+UJUaEGtB
zJn3q8IZXsix5xXhEv0+5m+4U9eOepK2XY7xmzLrf7mG+5WrVpNWmzaHNpeW
A5YLXqqVWjU1VLXU/q3UIsv5yv3q8/R9csRyxWpm1rrJWT7M+S8twmWqH2n7
5DS/b9ansaCcjtzOVXVqoaynWrCOf97d76Kd2rJr6tR5mUNYb+N6lAtRM/q8
jGY0Um2hiJakPVWXU8NQy3B9Wvfjmhjc2AvrPH1nvjv1H32tNkHboOan9ifH
ba3isQ1HMG0rtZdy2HLZctbWylpzYe2FMaCx4La8m21oE5fh3GYo429X1T4W
0YnVi/19uzE2XRn/vZI23fdfRc87rxu+c4kquca54FHmt1X0yPO74VcXq8K/
ntVt+N4ytbnaRL9H68OtR9yL8Zd6qTGQe5XjkOtQ81f779dKbaoau1r7TK3U
ZqvBq8XP3ErtmPFQP7+jVmqL1fjV+tXsrW0/vYl5rOmxNlhNXm3eGgJra60p
sLbAmgdr19Tg1eKtObDW0hoDaw3U6K1lUxNQG5DjtTbVmgFrB9SMrC215uD5
hsOxtlcNSS3JmgNrO62ZsXZGDmDnJt4dtxsOZvde1re2xpzc3FzNR+1nC3OU
KpqQ2pAczY5VODFrpeS45MpGNjHovq1wW3Ik1vpbLyB3IiezSDechlyNGo9a
j5zI1lU4a7UZcwBzATUbtZtNfH+u9zp1MdbHWE8nh2ItkxyFXIU2Qc7ppibW
l1OydkoOTa5JTslaKDk0uSY5F2uz5PDkYtRg1GI2A29bpSbN2rTt/GaqcCbW
Xsm5yaXI+SzO+x+zHS5IjmbZbnJ4c3k5qSW64WTkquSsrL02xzPXs4bFWhZr
ZKzN/YFzrdWJzqi+KIdojnh0K9yiNTTW0ljDYq2qNSTWklgTY22oNS3WtviN
+61bg+EaG7+VWkFrLkY2a85aTWsurL2wJsNa/v84yTL5g1ylNWzWsslR7lOF
k5y+yTHkKuVIrX2Tc5M7leOyFtycxNxEzk6tSc5OLk9Oa/5uODu5LjlLa5Xk
+OQy5TStRZIzk+uU87TWSk5MLtR4Xu3d+jLrq+Rg1T7kbOVm5WCtbTqkldxQ
znXuJseWizVmM3a7HfxIFR+mL9tGf9ILpyO3o969XZ2cTC3HGMxcTY7ZuMH4
Qe7548b+L9HYO/lmtfSF29HP5BS/avyDXKM26t3G3mi75CStfdDGyVWObuzR
gMafyNGqVWnT5G6H1+EW5QDkAh6p49vlkOSSrPE/mvmHdVL7/0rzPUzS+DM5
YLUtczK5YfkR42BjsKF18uu9W4mhh9XJgc2FjRk3qmOD1Z7keLXNbzT+sl9j
P4f3CY8hn3FyHU3J2n05EbUmNafFm+9fLcp8wlhWDk4u7jbXYCucpfVFcpLW
cmjj5SrV2dTb3lXrq5NTqqXJYZtravPV+tT/9QVyWHJZi5qP1OG4rQWfuhXu
W75M3cIcc8k6nPVLjf+Xy5Zf27KMZqlWMXsdvmmOZr2LXfuuz8ur1P/5bZpD
W5+7ay/xtHG1estcZfQXc662dtIYr52/OVF/ma2MXuExaqa79PLtmQeoX+xZ
pr5cf6O+o03U997Vja18Dzwe+OYi+a/xgrW5/t6r6R9XRn/wntV3duvlXvym
/bbVaPxbGTkjtRs5IGtPlmmFG/qqSn5snmy+bLzyhe9Le16H7xrRCse1rGuh
yr0aL1gbqCZn7ZYaoFqd/KC6lPrUgDqcodzhGz5/+VLmvNlK7c7NDb9nTiGn
ul8vz9RnKyertjUp819pJYbyfnzH/nY1tcF1OHFrs9Q05cq/rHLt12gDGb+r
TuxtPbZ/r+Mz99m7pl3bcp5yn+Y0i9X5uxz/PmcPY3jwjFWehTn7AnVqsLc2
Fu2kNtv6gOXa+fsk/55h0SZnlqM2N5ejMEfWxmnrzLGHllkjrhU1R2sxH2xF
i1SjtDb0oVa0SzVOa+XkKNQ+5X+Nu4y/1ErlUOVS1ce/qcNZyl1ab7tnHc7U
XN2c/eA6mqi1nmo2aqVqmtZSqvGqdZojy7PJt5k7q6lZK6gmrNZmzixPKF9o
Lq3mY62bOYVa0NFVfKs59wl1NGQ1FHMKteVfq8ROrpGD9Pd1vgU1B7UHNRxr
+9Rg1XbUaKzVU3NVu1HDsRZQDVptR43P2jk1QrW/fTjHCu1oGv59jfbV2nRz
yhXr1LCqg6mHHVhHAzWvNL+Ub5YTMY41npUr8X6da/xlvKdmbG2sGrZa8tdV
1sIaTTwvNvbVHxtPT1b9V4ryH+eyXx0N3r9FktNVm1dTt5ZD+6/WfjRzNm0n
59Y+9avju/dr4gVrhMyx5NAP7IXzMo81n5UL00ZoK9QU5M7kxOXGzTG0F/4N
3j6MX9TJ3+Yt0OR81nOqBat5W5toTYFauD5V32pOZz2TnI45pBy5XI+cv9y/
Mdz1dTRxaxGtOVArlyOR15PfkztRw7V20RoFtd2XjDFa4UysB/NvLK199R3u
Xad+Rd9rLcYFjf2ZsxVOxfjcGoQVm/VvbYL6hbzSfxxWnZoG/xZMzt1ah6Ma
/sZnfEyd56ut37aJj3wGPgvXtPU+h9Xxpf9xQnVqJoY28d+9zfvSl2zSnM8a
AGs91citDZDTktvSB+oL/5+TVJOQq1y6jP7u+nEdWUOhPbuxldoK9Zr/eCfm
jKhTM2FttDUb1lIcWWfMe1AP2auXteY79d2q36zZTY3CTr1wzP2beEruWZug
bRjS2D85Zf+W6eBWuObfmvjdeN04/Ide/Jw+ZhfwsXXqKbvs+6kXHlE+0XtQ
L9X+aFu18dp642t5C2OcPXvh2Xy2PmO5o2fZtyTHXQy+kfM/Dl4AfCr4kioc
v1z/wca+zXr3b+n8Rvdu/KG1DnKS8vLj1LFH4zd8n/bGv6Xym9P/mHO+U0QD
NxddrJfcwxxE/WFR2i5+n93oK2oyC3ajYajVTFEnN5q24RfVXPzbZTVotZhZ
6sTKxtDG0rPV+S3GzMbO3/da//2BlZrKTlU0FGtB1XDVVrSx2lprJI6rY5O1
zXKy2tejythaf6N5zQscv3Lz/dynvQXXTf61fxXNd4wmPzO/2rFOba4+cIfG
XuhfD+xGW9uisZ+fd1Ov8WJjD84uw7/OUScXtIb8FPorleHj5dh35pgXe6nn
ua/5ntV4pu4mJjU29ZsZUYaT9Vt6v05d3ZB24nU1otm70YjUjtRrHfutiQ/U
Yxdph09aqYrGLWfrN7kH/X168Z3aSG2l8Zm1MdqQfcrcv7Gt+YT57PAy/LXH
6He1b97rM91ondZIvFikRsLaCTVW46NR3Wiv6sv+LaExtvmEGohaiDGff0/s
/c1fxgZpi6yxuK/J76y92KUOt6nGrtauhmnse1w32ubPzC+70fj2Zv4vfpPd
aG77VuFA7inyN/NTNc/XtalGtz/9vXuxNdpwbbnv31hajd/67AV6+RZd4651
NT7jVuNXtb+5mHNOKzm/ub9r1O/5h27WrjGz9tScwdxhzjrcgJyB3IH7TigT
czt3njpr3Zza3HruOrZVG2tuvWAv9+5v9rerHw9vx54+XEUD9W/F1cTURvXv
e5d5v8anxp8jW7GB2kI1W//W33dmbKvmai2d37j5lxrtwCa/NZ9Xo7UWQM33
5sYfXum3Wyb3HLvO2tTH6es2bOLJw8voB4N7eVe+I9/Vv00+az5sPj1jHVtl
jGisaH5m7iqHI5cjP+LfGvoN6l/71ln7xpjGmvOCr2qFo5CrcM37PP9pbMGf
DZ8iH2L+rA3Tlmnj1I7nq2Mr9DnG0voo1/PJZXzXQr18W9oQbYlr2Pl9yqxt
NekBDT+gVq1+vnw7a8j4YFAvevO/fEPf0R9AWwP8N/ibXmyKupT6lLbmW31U
kWO2qxIv61PMkZevcw7PpUa9g/ayzt8deE3jXTVra+PVYNWy1aB/b/hLtWk1
6D8avk0+av5ezqUN1hZ/W6f222/MeFrN33+rQo3WWoCBvejp3qP3an2Df2vr
92ztwq5lYj1jvluKaOzWYi/bivb+fhXuxhjTWNMY01jTHM/4UB93BP1PuvF9
C/diu/XB+mKfmc/Oe9iqSo3lUt3UDNzfxIenl9HPrH1ZpBfuS5uv7TfftJbQ
nE+dWD3bf2tgsiZ+/D8+y3NZ
              "]], Polygon3DBox[CompressedData["
1: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
vySs8dn7do7+7sdb00r+/85Ri2c=
              "]], 
             Polygon3DBox[{{2110, 1228, 1054, 1053, 1337, 1860}, {1805, 1215, 
              1335, 2165, 1652, 1653}, {1806, 1216, 1415, 2172, 1654, 1655}, {
              1921, 1408, 1000, 1001, 1409, 1922}, {1650, 1649, 2163, 1331, 
              1332, 2164}}]},
            Annotation[#, "Charting`Private`Tag$18356#1"]& ]],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
        {GrayLevel[0], 
         Line3DBox[{1559, 15, 1572, 29, 1586, 43, 1599, 57, 1612, 71, 1626, 
          85, 1641, 1642, 99, 1667, 113, 1680, 127, 1693, 141, 1706, 155, 
          1720, 169, 1734, 183, 1847, 216, 230, 197, 228, 220, 1123, 198, 
          1124, 199, 1125, 200, 1126, 201, 1127, 202, 1128, 203, 1129, 1130, 
          204, 1131, 205, 1132, 206, 1133, 207, 1134, 208, 1135, 209, 1136, 
          210, 1312, 218, 226, 598, 944}], 
         Line3DBox[{335, 1, 1308, 211, 223, 597, 943}], 
         Line3DBox[{946, 2, 1393, 335}], Line3DBox[{948, 3, 946}], 
         Line3DBox[{950, 4, 948}], Line3DBox[{952, 5, 950}], 
         Line3DBox[{954, 6, 952}], Line3DBox[{958, 7, 955, 954}], 
         Line3DBox[{960, 8, 958}], Line3DBox[{962, 9, 960}], 
         Line3DBox[{964, 10, 962}], Line3DBox[{966, 11, 964}], 
         Line3DBox[{968, 12, 966}], Line3DBox[{970, 13, 968}], 
         Line3DBox[{229, 14, 227, 219, 970}], 
         Line3DBox[{1584, 28, 1845, 214, 229}], Line3DBox[{1597, 42, 1584}], 
         Line3DBox[{1610, 56, 1597}], Line3DBox[{1624, 70, 1610}], 
         Line3DBox[{1638, 84, 1624}], Line3DBox[{1664, 98, 1638}], 
         Line3DBox[{1678, 112, 1665, 1664}], Line3DBox[{1691, 126, 1678}], 
         Line3DBox[{1704, 140, 1691}], Line3DBox[{1718, 154, 1704}], 
         Line3DBox[{1732, 168, 1718}], Line3DBox[{1746, 182, 1732}], 
         Line3DBox[{1759, 196, 1746}], Line3DBox[{221, 212, 1559}], 
         Line3DBox[{222, 217, 1759}], Line3DBox[{221, 591, 763}], 
         Line3DBox[{222, 593, 766}]}, {}, 
        {GrayLevel[0.2], Line3DBox[{1559, 1959, 1960, 1849, 540, 1949, 2054}],
          Line3DBox[{1572, 1848, 2071, 2347, 1881, 1961, 1962, 1851, 2015, 
          2067}], Line3DBox[{1584, 1781, 2195, 1583, 1780, 2194, 1582, 1779, 
          2193, 1581, 1778, 2192, 1580, 1777, 2191, 1579, 1776, 2190, 1578, 
          2260, 2073, 1577, 2259, 2072, 2189, 1576, 1775, 2188, 1575, 1774, 
          2187, 1574, 1773, 1917, 2186, 2170, 1573, 1772, 2365, 1882, 1975, 
          1993, 1974, 1976, 2049}], 
         Line3DBox[{1586, 2074, 2261, 1585, 1850, 2075, 2348, 1883, 1963, 
          1994, 2036, 1979, 2050}], 
         Line3DBox[{1597, 1789, 2203, 1596, 1788, 2202, 1595, 1787, 2201, 
          1594, 1786, 2200, 1593, 1785, 2199, 1592, 2264, 2078, 1591, 2263, 
          2077, 1590, 2262, 2076, 2198, 1589, 1784, 2197, 1588, 1783, 1919, 
          1918, 2371, 1587, 1782, 1884, 2196, 2160, 1977, 1852, 2016, 2040, 
          1978, 2057}], 
         Line3DBox[{1599, 2079, 2265, 1598, 2080, 2266, 1600, 240, 1365, 288, 
          486, 830}], 
         Line3DBox[{1610, 1793, 2208, 1609, 1792, 2207, 1608, 1791, 2206, 
          1607, 1790, 2205, 1606, 2270, 2084, 1605, 2269, 2083, 1604, 2268, 
          2082, 1603, 2267, 2081, 2204, 1602, 346, 2372, 1601, 243, 1324, 245,
           436, 676}], 
         Line3DBox[{1612, 2085, 2271, 1611, 2086, 2272, 1613, 2087, 2273, 
          1614, 2161, 2349, 1854, 1853, 1897, 1950, 493, 1996, 2060}], 
         Line3DBox[{1624, 1796, 2211, 1623, 1795, 2210, 1622, 1794, 2209, 
          1621, 2277, 2091, 1620, 2276, 2090, 1619, 2275, 2089, 1618, 2274, 
          2088, 1617, 2373, 1922, 1921, 2374, 1616, 1856, 1920, 1855, 2350, 
          2171, 1615, 1898, 1980, 582, 1995, 2042}], 
         Line3DBox[{1626, 2092, 2278, 1625, 2093, 2279, 1627, 2094, 2280, 
          1628, 2095, 2281, 1629, 2162, 2351, 1857, 1900, 1951, 1899, 2017, 
          2032, 2043}], 
         Line3DBox[{1638, 1798, 2213, 1637, 1797, 2212, 1636, 2285, 2099, 
          1635, 2284, 2098, 1634, 2283, 2097, 1633, 2282, 2096, 1632, 2376, 
          1927, 1926, 1631, 2352, 1858, 1923, 1925, 1924, 2375, 1630, 1901, 
          1902, 1885, 1997, 2061}], 
         Line3DBox[{1642, 2214, 1799, 1640, 2215, 1800, 1644, 2216, 1801, 
          1646, 2217, 1802, 1648, 2218, 1803, 1650, 2164, 2219, 1804, 1887, 
          2175, 2383, 1964, 1861, 2020, 2021, 1953, 2055}], 
         Line3DBox[{1664, 1811, 2224, 1662, 2296, 2108, 1660, 2295, 2107, 
          1658, 2294, 2106, 1656, 2293, 2105, 1654, 2172, 2292, 1931, 1652, 
          2165, 2291, 1928, 1930, 1929, 1651, 2356, 1904, 1905, 1886, 1999, 
          2000, 1998, 2062}], 
         Line3DBox[{1667, 2109, 2297, 1666, 2226, 1813, 1668, 2227, 1814, 
          1669, 2228, 1815, 1670, 2229, 1816, 1671, 2230, 1817, 1672, 2355, 
          1860, 2110, 2354, 1889, 1965, 1966, 1863, 2022, 2041, 1954, 2056}], 
         Line3DBox[{1678, 1823, 2234, 1677, 1822, 2233, 1676, 1821, 2232, 
          1675, 1820, 2231, 1674, 1819, 2378, 1935, 1934, 1673, 1818, 2367, 
          1890, 1983, 2002, 1982, 1984, 2051}], 
         Line3DBox[{1680, 2111, 2298, 1679, 2112, 2299, 1681, 2235, 1824, 
          1682, 2236, 1825, 1683, 2237, 1826, 1684, 2238, 1827, 1685, 2239, 
          2113, 2300, 1686, 1862, 2114, 2357, 1891, 1967, 2003, 2037, 1986, 
          2052}], Line3DBox[{1691, 1832, 2243, 1690, 1831, 2242, 1689, 1830, 
          2241, 1688, 1829, 1936, 2240, 2173, 1687, 1828, 2368, 1892, 1864, 
          1985, 1866, 2023, 2068}], 
         Line3DBox[{1693, 2115, 2301, 1692, 2116, 2302, 1694, 2117, 2303, 
          1695, 2244, 1833, 1696, 2245, 1834, 1697, 2246, 1835, 1698, 2247, 
          2118, 2304, 1699, 2119, 2305, 1700, 1865, 2120, 2358, 1893, 1968, 
          2004, 2038, 1989, 2053}], 
         Line3DBox[{1704, 1839, 2250, 1703, 1838, 2249, 1702, 1837, 1938, 
          1937, 2379, 1701, 1836, 1894, 2248, 2166, 1987, 1869, 2024, 2025, 
          1988, 2059}], 
         Line3DBox[{1706, 2121, 2306, 1705, 2122, 2307, 1707, 2123, 2308, 
          1708, 2124, 2309, 1709, 2251, 1840, 1710, 2252, 1841, 1711, 2253, 
          2125, 2310, 1712, 2126, 2311, 1713, 2127, 2312, 1714, 1867, 1870, 
          1868, 2369, 1906, 1955, 2006, 2007, 2005, 2063}], 
         Line3DBox[{1718, 1842, 2254, 1717, 1942, 1941, 2380, 1716, 1872, 
          1939, 1871, 2359, 1940, 1715, 1907, 1990, 2029, 2069}], 
         Line3DBox[{1720, 2128, 2313, 1719, 2129, 2314, 1721, 2130, 2315, 
          1722, 2131, 2316, 1723, 2132, 2317, 1724, 2255, 1843, 1725, 2256, 
          2133, 2318, 1726, 2134, 2319, 1727, 2135, 2320, 1728, 2136, 2321, 
          1729, 2167, 2360, 1874, 1873, 1908, 1956, 2010, 2039, 2009, 2064}], 
         Line3DBox[{1732, 1945, 1944, 2381, 1731, 1876, 1943, 1875, 2361, 
          2174, 1730, 1909, 1991, 2030, 2031, 2008, 2045}], 
         Line3DBox[{1734, 2137, 2322, 1733, 2138, 2323, 1735, 2139, 2324, 
          1736, 2140, 2325, 1737, 2141, 2326, 1738, 2142, 2327, 1739, 2257, 
          2143, 2328, 1740, 2144, 2329, 1741, 2145, 2330, 1742, 2146, 2331, 
          1743, 2147, 2332, 1744, 2168, 2362, 1877, 1911, 1957, 1910, 2026, 
          2034, 2046}], 
         Line3DBox[{1746, 1878, 1946, 1948, 1947, 2382, 1745, 1912, 1913, 
          1895, 2011, 2065}], 
         Line3DBox[{1759, 1969, 1970, 1896, 2013, 2014, 2012, 2066}], 
         Line3DBox[{1845, 1771, 1844, 2346, 1571, 1770, 2185, 1570, 1769, 
          2184, 1569, 1768, 2183, 1568, 1767, 2182, 1567, 1766, 2181, 1566, 
          1765, 2180, 1565, 2258, 2070, 2179, 1564, 1764, 2178, 1563, 1763, 
          2177, 1562, 1762, 2176, 1561, 1761, 2370, 1916, 1915, 1560, 1760, 
          2364, 1880, 1972, 1992, 1971, 1973, 2048}], 
         Line3DBox[{1847, 1846, 2333, 2159, 1747, 2148, 2334, 1748, 2149, 
          2335, 1749, 2150, 2336, 1750, 2151, 2337, 1751, 2152, 2338, 1752, 
          2153, 2339, 2340, 1753, 2154, 2341, 1754, 2155, 2342, 1755, 2156, 
          2343, 1756, 2157, 2344, 1757, 2158, 2345, 1758, 2169, 2363, 1879, 
          1914, 1958, 2028, 2027, 2035, 2047}], 
         Line3DBox[{2044, 2033, 2018, 2019, 1952, 1903, 1859, 2353, 2163, 
          1649, 2290, 2104, 1647, 2289, 2103, 1645, 2288, 2102, 1643, 2287, 
          2101, 1639, 2286, 2100, 1641}], 
         Line3DBox[{2058, 2001, 1981, 1888, 2366, 1805, 1653, 1932, 1933, 
          2377, 1806, 1655, 2220, 1807, 1657, 2221, 1808, 1659, 2222, 1809, 
          1661, 2223, 1810, 1663, 2225, 1812, 1665}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{946, 1394, 1138, 2370, 947, 1315, 1151, 2365, 973, 1380, 
          1483, 1518, 1524, 1457, 1548}], 
         Line3DBox[{948, 1139, 2176, 949, 1395, 1396, 2186, 1397, 1398, 1316, 
          1319, 1317, 2196, 1456, 1364, 1485, 1486, 1484, 1534}], 
         Line3DBox[{950, 1140, 2177, 951, 1152, 2187, 974, 1399, 2371, 1400, 
          1401, 1402, 1320, 1324, 1321, 1459, 1366, 1489, 1528, 1487, 1535}], 
         Line3DBox[{952, 1141, 2178, 953, 1153, 2188, 975, 1165, 2197, 987, 
          1403, 2372, 1404, 1405, 1406, 1407, 2350, 1328, 1462, 1463, 1461, 
          1490, 1554}], 
         Line3DBox[{954, 1142, 2179, 956, 1154, 2189, 976, 1166, 2198, 988, 
          1178, 2204, 1000, 1408, 2374, 1410, 1411, 1412, 2375, 1413, 1333, 
          1466, 1467, 1465, 1492, 1555}], 
         Line3DBox[{958, 1144, 2180, 959, 2260, 1156, 978, 2263, 1168, 990, 
          2268, 1180, 1002, 2274, 1191, 1014, 1414, 2376, 1203, 1027, 2291, 
          1335, 1215, 2366, 1040, 1385, 1386, 1341, 1513, 1530, 1469, 1543}], 
         Line3DBox[{960, 1145, 2181, 961, 1157, 2190, 979, 2264, 1169, 991, 
          2269, 1181, 1003, 2275, 1192, 1015, 2282, 1204, 1028, 2292, 1415, 
          1216, 2377, 1041, 1340, 1229, 2367, 1055, 1389, 1495, 1519, 1520, 
          1470, 1550}], 
         Line3DBox[{962, 1146, 2182, 963, 1158, 2191, 980, 1170, 2199, 992, 
          2270, 1182, 1004, 2276, 1193, 1016, 2283, 1205, 1029, 2293, 1217, 
          2220, 1042, 1416, 1230, 2378, 1056, 1342, 1244, 2368, 1070, 1391, 
          1496, 1521, 1526, 1472, 1551}], 
         Line3DBox[{964, 1147, 2183, 965, 1159, 2192, 981, 1171, 2200, 993, 
          1183, 2205, 1005, 2277, 1194, 1017, 2284, 1206, 1030, 2294, 1218, 
          2221, 1043, 1231, 2231, 1057, 1417, 1418, 2240, 1419, 1420, 1344, 
          1347, 1345, 2248, 1471, 1372, 1498, 1499, 1497, 1537}], 
         Line3DBox[{966, 1148, 2184, 967, 1160, 2193, 982, 1172, 2201, 994, 
          1184, 2206, 1006, 1195, 2209, 1018, 2285, 1207, 1031, 2295, 1219, 
          2222, 1044, 1232, 2232, 1058, 1245, 2241, 1071, 1421, 2379, 1422, 
          1423, 1424, 1348, 2359, 1352, 1349, 1474, 1374, 1502, 1529, 1500, 
          1538}], Line3DBox[{968, 1149, 2185, 969, 1161, 2194, 983, 1173, 
          2202, 995, 1185, 2207, 1007, 1196, 2210, 1019, 1208, 2212, 1032, 
          2296, 1220, 2223, 1045, 1233, 2233, 1059, 1246, 2242, 1072, 1258, 
          2249, 1084, 1425, 2380, 1426, 1427, 1428, 1429, 2361, 1356, 1477, 
          1478, 1476, 1503, 1557}], 
         Line3DBox[{970, 1309, 2346, 1310, 971, 1162, 2195, 984, 1174, 2203, 
          996, 1186, 2208, 1008, 1197, 2211, 1020, 1209, 2213, 1033, 1221, 
          2224, 2225, 1046, 1234, 2234, 1060, 1247, 2243, 1073, 1259, 2250, 
          1085, 1271, 2254, 1097, 1430, 2381, 1431, 1432, 1433, 2382, 1434, 
          1360, 1481, 1482, 1480, 1505, 1558}], 
         Line3DBox[{1123, 1295, 1311, 2333, 1110, 1283, 2322, 1098, 1272, 
          2313, 1086, 1260, 2306, 1074, 1248, 2301, 1061, 1235, 2298, 1047, 
          1222, 2297, 1034, 2214, 1210, 2286, 1021, 1198, 2278, 1009, 1187, 
          2271, 997, 1175, 2265, 985, 1163, 2261, 972, 1150, 2347, 1362, 1379,
           1435, 541, 1522, 1545}], 
         Line3DBox[{1124, 1296, 2334, 1111, 1284, 2323, 1099, 1273, 2314, 
          1087, 1261, 2307, 1075, 1249, 2302, 1062, 1236, 2299, 1048, 2226, 
          1223, 1035, 2215, 1211, 2287, 1022, 1199, 2279, 1010, 1188, 2272, 
          998, 1176, 2266, 986, 1164, 2348, 1363, 312, 375, 631}], 
         Line3DBox[{1125, 1297, 2335, 1112, 1285, 2324, 1100, 1274, 2315, 
          1088, 1262, 2308, 1076, 1250, 2303, 1063, 2235, 1237, 1049, 2227, 
          1224, 1036, 2216, 1212, 2288, 1023, 1200, 2280, 1011, 1189, 2273, 
          999, 1177, 1365, 1318, 1381, 1436, 1508, 1509, 1458, 1541}], 
         Line3DBox[{1126, 1298, 2336, 1113, 1286, 2325, 1101, 1275, 2316, 
          1089, 1263, 2309, 1077, 2244, 1251, 1064, 2236, 1238, 1050, 2228, 
          1225, 1037, 2217, 1213, 2289, 1024, 1201, 2281, 1012, 1323, 1322, 
          2349, 1325, 1443, 1460, 1549}], 
         Line3DBox[{1127, 1299, 2337, 1114, 1287, 2326, 1102, 1276, 2317, 
          1090, 2251, 1264, 1078, 2245, 1252, 1065, 2237, 1239, 1051, 2229, 
          1226, 1038, 2218, 1214, 2290, 1025, 1327, 1326, 2351, 1329, 1444, 
          1464, 1525, 1488, 1553}], 
         Line3DBox[{1128, 1300, 2338, 1115, 1288, 2327, 1103, 2255, 1277, 
          1091, 2252, 1265, 1079, 2246, 1253, 1066, 2238, 1240, 1052, 2230, 
          1227, 1039, 2219, 1332, 1331, 2353, 1334, 1445, 1446, 1367, 1491, 
          1531}], Line3DBox[{1130, 1302, 2340, 1117, 1290, 2328, 1105, 1279, 
          2318, 1093, 1267, 2310, 1081, 1255, 2304, 1068, 1242, 2300, 1054, 
          1228, 2354, 1369, 1384, 1438, 1512, 1546}], 
         Line3DBox[{1131, 1303, 2341, 1118, 1291, 2329, 1106, 1280, 2319, 
          1094, 1268, 2311, 1082, 1256, 2305, 1069, 1243, 2357, 1370, 1388, 
          1439, 1387, 1514, 1523, 1547}], 
         Line3DBox[{1132, 1304, 2342, 1119, 1292, 2330, 1107, 1281, 2320, 
          1095, 1269, 2312, 1083, 1257, 2358, 1371, 1343, 1390, 1440, 1515, 
          1533}], Line3DBox[{1133, 1305, 2343, 1120, 1293, 2331, 1108, 1282, 
          2321, 1096, 1270, 1373, 2369, 1346, 1392, 1441, 1516, 1517, 1473, 
          1544}], Line3DBox[{1134, 1306, 2344, 1121, 1294, 2332, 1109, 1351, 
          1350, 2360, 1353, 1449, 1475, 1552}], 
         Line3DBox[{1135, 1307, 2345, 1122, 1355, 1354, 2362, 1357, 1450, 
          1479, 1527, 1501, 1556}], 
         Line3DBox[{1136, 1359, 1358, 2363, 1361, 1451, 1452, 1375, 1504, 
          1532}], Line3DBox[{1308, 1377, 1378, 1314, 539, 1455, 1540}], 
         Line3DBox[{1312, 1453, 1454, 1376, 1506, 1507, 1442, 1539}], 
         Line3DBox[{1393, 1313, 1137, 2364, 945, 311, 428, 667}], 
         Line3DBox[{1542, 1468, 1511, 1510, 1338, 1383, 2356, 1382, 1026, 
          1202, 2352, 1330, 1013, 1190, 2373, 1409, 1001, 1179, 2267, 989, 
          1167, 2262, 977, 1155, 2259, 957, 1143, 2258, 955}], 
         Line3DBox[{1129, 1301, 2339, 1116, 2257, 1289, 1104, 2256, 1278, 
          1092, 2253, 1266, 1080, 2247, 1254, 1067, 2239, 1241, 1053, 1337, 
          2355, 1336, 1339, 2383, 1447, 1448, 1368, 1493, 1494, 1437, 
          1536}]}, {}, {}}},
      VertexNormals->CompressedData["
1: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
LqnXM7vXpzYyN8LnL+ysQP3D9GDzT1H/bDs5/izqJSiz6sFQLzGb8ElM1EtV
C57mob6CS8XduqO+Yl8+tu4l6quNhTUpqMfg89b7x1CPMb8XVwpFPXZG+h3d
9dLv6BpIv6N7LmCKAeo9aBt9Yg/qPfZ6Ye4eUe+Zyt92RH0IC2qru6I+ZNWN
b0wT9aGb8ZdWVac5+Jc7euVFAyVLqT3hYzO5FH5s6DwZ9SfLreRboP6EnefG
nxb15/KtMxsOrVHAAQfTMtSrLDPudJWoV02vHdyP+hYaRuaYob5lf2K9gkR9
G3mzdBHqYZh8Wf4B9TDTS7er18M3dXrloX6G1q16tUT9zO7/DG0u6mf71sEP
UW/Dnr1BzVBvs0ZnprUT9bZu3Ts71OfQO7L1PNTnrCjd67uoz3s8+yzqeXC9
OC0Q9Tw7GuohE/X8//pd3Ek7Z+jgvADX9qTdxnmBtS0qrxXnBb32M+JwvoBQ
5zaLcb5gtxOPLRTni/K2v8R5BDZsjGyB8wiLvPbtrjiPbBg9MD5qDOZzw4bH
X/oi3rAgshbnZd7ovBHOQXBLzgfiHMTszv2rn4O6jXWLwnkKArTuh+A8xQ55
BdmL89SL72cX4FwGl/btPI9zGRumtIgS57LEOOcEnO+gItjmNs53bOW9ge3F
+U4n8lQDnBPhvlLbBOdEVmxyZqo4J+pGNTyN8ybMdPydiPMm+96zscZ+rJO4
Rp4qnFvBqzJtNc6tbJzW2Tbi3For/c6tl/Q7t/nS79xmvjgnw3kZ2ti0Eedl
pgifUD8vb05r9RjncRhwZMsbnMfZ+Z4X6ufxuGbTfHGuhx5/hIE417MJNUn1
c/1K62oXo4sKGD5y4bygQCV7dHtU/fcDC6x7Tr7KoX7NOGrkl61k4X7fA/Ix
bustNefgXAmxXsOm4lzJrpad7ynOlbWRlQqcT6Fn8TJxPmWHhZEqcT79+aDl
VZxzIeG9ewbOuezCwhMqcc41XzatG87L0Ghwd2Ocl9n4+Mo54ryc8MZCnLuh
IrlkOc7d7KrFjnXi3L1UY7Ynzu+gZW5rg/M7212z+oI4v5fohiforkFeyuRH
mAk8c7v7wkj8HuB//Z7thiMdH8celcMb7e+eHjEC+xo0vv57ieLzQ9+tuiWH
J03P283+LjDra4H132+U1umM81PK4aqL8YNdo5UsxuRn/fckvrd3vJzRHnXu
VOdQu31KVrzsrYb4fcsSphpWOFYBB8/G3vz0Ssmsinw7it/bpLPGL+9uwfx3
zehq3UnF5PKSJTcnlcLXwMPTT1QqWMmrjISS5irwjmuvV7SiBG5f1i/udlrB
Ojkfzn+bq4T3uQcCzyJfn6m9seOuu4Lt3N5xcVGYEgwvCxN4LYzL0GjfpUYK
9uRWu5RZI5TwzjOrieYVOaz9oNF9gCBnl8Y8MOj3WYA7p81vbZiJ887nvCk9
zsnZM52cJQFHBEjStzdI//S/v295GjDIx6FazjLXNgtc+YSHFk22/VsTgf2x
JrknlMqZbvyT7weWY19oPpGXN+Nh7ofLyyfnydm/rD8H1mG/z1ppeHusHw/+
XVu0bFkgZx7Jmic7XuDgk+Gd+fGPeSgP6Pj7HO7zx8l5r5bMwv4PC2ysWwuw
WLZ+V21TBXucOya1N/KC6bRPL88PFcD1yL5Nb/4q4en6gwf21CmY0dot0QZ+
JTD69axXL4ajftWobjrilhJuT4nMKjtQAkKbCw17ZyrYjHdBq/r2U8KH0tbr
t5vI4YvmkNoLyBP3mn2/WSIToEFG/NvKJ3J4mnjMbetEBftxNMQhC+cDe9On
nzxWKP7n9xWDH0xYmx6JuLLbvnnXeTgwIkHbtB0H9gdDe83zUTDfxCVpvDMP
q6tNhneO4cBr1yn9tvMUTLbI3moBzgU2Ju49furyMOfZ/Su7ZyrY5Z0dz7wO
5UArLz998RYeihLuPxk7X8FaB2aqvHqIOsmuzq0A78EqJX/+WgUbvGp2gn6O
Aj50ih1p306AtA1FsCYGeS595f+r7M2javze//9IQqKEiDQplGSmqK3ShBKl
RCIpSkoS0YDIXGSmMpVIypRSaIvIEEqh1KnOFEKDSGT47uu87+v9XivrrM/v
95f12q+zTve5772v4d7Px3P3u8f60I1yBiczp4pI+ZzpndoyxUQ5gz79e5dP
f5lfyrIoqyYCgYVrr6ti8qhxSHGbrYAOyn07Sj+eR3qoWK6qHSig7/3svclL
EVHUtpQ3m1hLNu2ZsMVFzKdlk0cO6bFRRHi8ddF7edLfVwQeppHTtQT0YZp+
NwPWj189np84bxefxG3Yd/2mjICu2ZE88YqNkFyP29XjlLqAHPf9+308q2Ms
+r7b7l0pIF9znyxpTmZ59GGdckQVn/5oWVpiHiAg+s9ePX04WEj2D/geZcTG
h4w5M9qH5ZXGe5dnQL3kej/P7AL7nv43vTp3OsEnzvqL/Hq/EhJDU3cZkZyA
ijY+Sxs1iU82H38UW6UsIsYx3c10l4rJwJWXslV38+mdDRVn+ANYfX5vQsOB
JWJSseiC98R+AnrqiOpdi1/VZPn0d7b67PNil/cf9hwVUK9U9zvvb/PIZXOd
A+dY3W8csmqDVYiIzN018VWbZa3U9xVk21nN5+kCmp3Gu3uM3Z/ph/3MX3+p
JVWC5LJPewX0xmu5TXesWB+0b0pRP5a3zo4etmBisIAucno5yfsVy6+d7kZf
0BYQp/p3e92XCqjLJ6Mj7F+yvHxgkJjVeeLvLY/l3AV0RZip37UGPokdffa2
tTqry42GlV31FND46pjpp8LZ91qc2he1WUgsXZZYJK5lz9F7773lvfhkycFN
E06/EJJCjRbtZ13FxC3Et+DsfD61/HxptM19FsebG6resXHtj2FnbNm8ONQj
u/L8yFpyu/XrGCUFMVmQ5znymJ+AahQ98DNUr5F6rtAfLzvD6LFCGpniI3Rj
6+juMvOc/XNrSdiWU3rv+gipUmp5TCqL+3SuoHo+63cVHO/0ed4moL53ItN/
snr52qr+Z5/F8YmWcqzjQ7GAbpm0UpHH7kN1/v2hxuz+5BntjmTziZptKf3F
5hexPpiwDOZV3wKLS+PYePv3rzYjAvmkC2/ChmBVIbuv9jZxdQL6YmDD9e7f
a8nlz9nV4euFRGbjibTcJBF5uKx8dtQoVkeVyERm+PDJnnlRdFeyiAx71iv7
Ty6fDpv+xTDkdS1ZYCLXecdFEZkT1/VDkrmAJuhON9wwtZb03WQbn5QpImE7
gzzr7wroLru2pyUTa/55/zCce/+g/UeNymYIacK+cDKoUEjMWpd+l3OtIat2
3Kn5uZ99PuLu2q4LheTU8tzMOU61JCfgVUnXUCGdeMcl8PQ7AQlKvm1o+o31
HWoVlvtY/fH3fYyFCVtH0ZHhRzbG8klDqWvPrvOFdMsvn/Ubm/jk2pGvveey
umqw6cJUFr/oqFMPIJ6R2Trq5hDHtlt6zIpzE1I/N0G9ZlMtkcmeZ+CmICTH
h9vVDjARkRof9Rc3FPmUf84qbZ6MgPwJMFKZz8aLjtb8HHqMT5PzZg18E8on
wpMffmqbi4iqUc/SsCECOu5ND11TlndnCzYqE3sRMdA6c0R8UkCfOg5wnWrL
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
t69YJyLlxFy/5o+A/o6WcwL/PVp/tfOCHHY9ZV17g5/f/P3ykn2xLvetBOBb
V9wwWAZ87KoEqyX7aHoXBw4Fv7aAySOWgn+ba1JzPOy77akrSQH/spVG4YvA
z2xro4Ey7NNJ88kcyvl7ot8n+nx2m7u5BHyo3z0ssANf6tsHer6HfVXcd7fk
9uFx//1wXMzxgEAhqVPr2bleTkRNxthI/DC3xVwAfyVyuGy4Ifhfds1P+wQ+
S41njjqBn/Uny2EZ4G99MDazAPZ5jbe8aPP4LCBPDv12Bl/nUdbW+rAvLM1H
8ang+XbwG+3z4Gwk+I/uu3lN4s+5W9H9cZOqkCwZNbx+6yIRfXJPTgi+ppH3
3muAL6T1mFF14BM55zItA7+pcR4tM8BH+0lmug/4amcmV0j2r38mfjcF/+hD
vY1hv5sOG6N7E/a7ezyO2g2+yccL3s4HH+Vur2qewf447qPjvjrup69+NNoM
/E8d26dcBT9UXkyxJA6ELvu0Cfw96x8ojgC/TxOjNCeIG2oH99vW3xWQFWl1
15MyRfSj/eqH4GebV/Y9CHy9a/1PeV1m6+taj1fmsI9f8sLXHfysO4/ScbX1
4FPDBwV/Yd//Sa1bFrznbY0S/AZfZ9Wu3SU6gaTEdTrgXzzzVGflrqy+LV75
SOK7KM0/UK3MwBN8WvfM3j0RfFtblLeYQfwcNGrITfAhzTfw7cfiLdVsHqYN
8XZi4sgC8NksrLfS23FRRO+p7BsOOgey9XavY34Csk5D2UFJQUxdLeqXgY9x
zfCWWeBLfk/LuB58yj2+e1eCvmJXXq0q+HGf2nZx0eIQPs2YHWkJeoysCs1Q
mRN88mPlpCfgSz2ih5pEvxG1MKX8ZDhb398qp13zZHHDqV6i9/imcV8R/IhD
71SCPoTWumyU+HOinmAIpy9w5HQFZ8q8IsF/ttnNJAb8aE/MO9ME+Whj5olq
lr+I+mqvUeC32uONVX/IX4ah2/aBf2hMdEsd+Il6zTEZBnqV2h5lYeCb2fRI
o/P7rmLquF3+FehbbB09ZkzsJyDTzr3sdnCJmC5ZtSALfLCPHpXLzg/ikzON
u06B77h7qKVEbzM7ydMK/LU7pTQuB7/tYpvTu0CfI0pPXA6+0gYpxifBZzqx
YvIo0PNY7CoOAp/l1pVKu8F3+fOHrW9A/0M0yx9J/IU/3w0Av2E1s0t6oBeS
5u83WJSXB76xvq9bvoCP7GH55+cgv+99cw10SqSz2BR0SvSwYTeJTmnvqKRz
4Aea8+WeOfiDdiY1El2T/WeDM+CDed1+yzzwxVQKGCPRQT03kMn/e5d9v2eZ
YlummL680PMS+Kjj/ivux+I+LPrcLeN87zw4v7vDVeOOvlAXk9FvLNqy2fNN
iN2yF/ad68vcNJexPHIkhLdQdiSbt8WPRsB++jmxQqB/OOsXikeBjywtLdyc
CroCabwA7kcmd/BzQ18z9DlDf7OUWy5f9hwVkAsBOUSf/V79nPR7oAuy3yR6
1WbL6m/WFYOfytpqXyPQRz0OvXF0XzufHFb5u/HtHzG9ektO4sN/MiAh0XmU
gAYo2eUN3i0mcTsic8C/xa9bb5VmIqRrc5bPdK8Qke1no888O8QjI2s/ac64
LaSzil/NtZwrJDJHYseCH865W8tG84pEtLzQO1LjI8vj916Ggy+Qm/rC8Ps3
xXTH0ttKoz0FhFe2fLumrfT9rxsWJycknOTTktUvqhu2iMm4iNf7J12uISp3
kvsNC+LTKZHEymWCmDS32+1aHFBLMgan9wm05dOWLsVrDwtEJGTbOeMKGT4x
cTIpT9PlUzOLg4HTd4vIMI9c8cIY6Tq3MV7fhGrNtVTRf1293AohKXY+3JLX
LiBLreyPjfpWS9fF92/PkBWSL6u+nUt3F5IB7X3P+sjx6evG1BlPTgnIpx3H
KiozWJ1leOJ3oDafLu5ztuCmKesLpz09r9wsJH8Oz7a8xvL6UW3Tzc+r+aRV
SaW7nbbov/smth32TVqU4s89aeXTfSXPuh8fISZvbb4c/Pm6hix8tWvG0hd8
emzP+JE93rA+VeS9vm5LLdH88eDpy0t8auF+Om9ipIh0n3J13W0VvlQ9W6e1
kaY6gXyac7luaEK9gOj0ELwez/Kv8lkbtZpQPp3sOTTh5GYBmZ212nufj5Ck
xHcN94xlddVnhf4LVQXEcv5oucc3hKRv46yCaVdYfhowRNf8CotPqtccrnxl
92FexRT2O+mUG9572e8mvWb97Aq/t+P+aSm3f+rycXqFtqOAjtxpqa/J+k5L
wZn5U77XkNCgQWPus/n54bFr25H1InIgTWOvY5x0PVvBgaTeWZ/5tLvPvKkL
/QWkYfr+wHW9hOSI8o2Gil98Ov1eu8HbX3yybKxbf56vkKj17VewQFVARxX2
K2G/j6hMvNAFfldvt9DN7PnRmzsf2K7W5pM/PrHn4DkaCAxn+VwUUJ+vc3ff
YvVXeehKWZF8rVSdm8re89rsOuilSVnD2XWRNV+KVsP1pKZ4BbD7SxVbXGaw
+01OlT2R3Oc4dTqIzSea9rn+FZtfZOn7EZJ5JU3nNqNwygD2/Kj7KUc79jxJ
xrBz5fAckzx7v2PzlWa0HMpg85cYj1RPgXkrTecWal4lZvOebts87ANbB0Qj
I0Uy/6WdT6fPcbyfOa53y/9xPp05x2Eil/n9/+f5dMjHSTtvbjmn1//O6fcz
/o/z5hZx+umHnJ66hdNRS9OtSTuH7uOXOT/O32L95I3UgkHhfDp3+wXHJNan
RCpWK5DrQrKzrP55b9bHCT2fbNW7xPKWKDLf76qQ8N5mtN3eIKCyvvNH5hmw
+1N268hCNu96vf66oqWJ9SndzhRPTKol0+3N9SzzWPyYsL/9lqeQ1r1vmuvR
t5a8vtnjNJt/dOSSzlPYfCT7D1xtF7J5+Kk4tfvR9SLaedwIXbZuyPnFr7fC
eolrW/GYxQWaUKNcyOIE+ZN+MgDig1fNnLUsPtL84mKIlySr7XgNxMkD34pX
qdmxPodsW/W7gU+HvL5++ZKhgGzQV7r33UpIKl7P/LDVT0CdQ8w+vrvOJ3nZ
l/qfZJ8PaDcIS+Sz/vLAc6f9o/kke4bmPH0Wd86tWxXK/qUZrQMOBJ+rJf1i
ckTs9xD96EAz9vvohZRCR/hd0vYfO13zs2dxgT7wnpjH4gTx6NlvCsSHjKbj
diwO0r1/Z09icZHEn5BfDvFw0vVF21g+YPnoqALLD8T39x1DyAtOfYqmCl4J
yGvZ3LOebL2O1W18MnGcgCToZO61KheQ28/3nGL/UlnNRS6bsvjEaMOuRez3
EA3ZbhPZ76M1V0bOgd/F71kxlz0n8vP7oCvsuVGFOXeewvNCvUTPDnqJhcHu
Y1gcp7L9Zu1icZ2UL7voB/E8ZF+dO8tn9MUan24sv5F5TiWhkNf+PniXzK6P
DDk83oRdL21c5vcUrvNYqAWP3XfSt6x/MXsONLMg8j3c/9jAlo9sPpGK5SYv
2fyiCY/e6sG8spNz+c7yKH370Hk4y6uksbVoJeTTiy0mQey5khyD577sOdPp
ljOvwPP1Nr5UxOYr+XnJUJnNXypOGrYZ5u1TB7lCNr9J4/is72y+041HtSXz
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
f9AfVNk=
       "]], {}},
    Axes->True,
    AxesLabel->{None, None, None},
    AxesOrigin->{Automatic, Automatic, Automatic},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGrids->None,
    FaceGridsStyle->Automatic,
    ImageSize->300,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"},
    PlotRange->{{0, 1}, {0, 1}, {0.5682311637616763, 1.5956449903019398`}},
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwVzmtUk3UAx3FQyc6BwJ1EGiIJ6KKkIEU8cYAftSGBHm42gQ6BLMbFJJBo
aDcknQSMy0FRkIsIZhgCKROVmwsWEjEIQW7R82fPnozrYNzGuGj24ns+b79W
grgA4QY9PT3nF/2vt3CsRzbOd1MX2Vu3puqwiWseT9iO0A5pdPliHfZdzS+q
ZfNQUeAy8PlZHQ4pBu4Usz/CL+2WZebJOgRGaJty2RHYuboqShDp8Ld9KjeT
nYgTYd5GNkIdSk19z6ezzyE3rzE09QMdUl6ufSONfREaJ+u4oPVlBAVfq5nV
XEePfORDftQyDJ+nhHha1iBpyttzZViL3f7qsdYMKQb3s+wUflokdb2H/IUH
kEQic/rBEsykLEpf/yFeCjjoOrpnCXU0t7PbpQUCo6jf9+csouV48fbgKTlM
RDGjBxcXsMhxNamKfYR6H4MeiWABG3SVW7bv7sBWdVVwjWweTs+P1R2p7sTE
GWObCs48Os85drW91Q1D2+YjJZI5vJ4zqbup/hNXGk/eaFJqMKkl1BOHx3AQ
JheK3DS4PtHQYZzVixbJhGrmh1kY7/hphmH6UJTufk9SPgNJzN3I0l39WFk6
YPMZT40l90omOnkAfnH9JuLGKSTulUu3tQ7iUhfPrZY7CVItz+ixGsblsnFx
eck4Vo/3Fb751V84Pdk8Vjj/L/a8v/lZZMMIeLGPZcKgp/Ass4q6bUbh7rh/
9VAGA8d8Y06bBYXpodDfNooZ7MxaZYatKPROJK3Zfcdg5fQTwSY7Cl5p9h3f
xDOo8k8LDXSnUPpFCGHxGbyqr+GvR1NI7p1QsCwZkDAZz6uegsWJ9h+jalTo
5FdtDH1IgYQITn5ZocL9Q1daEuQUbnBZQd9fUyH3QKJ7UReF5VdMRAUXVPAw
sXWZoSnw/fbONiapUNmcvS/PkOBUOL9+ECok7QizVoYQfBu+li3opiHwczg6
Ek5ALbrNitpp+JzVTx+IJOjKvB+X/isNzni5RhFP0LSl4Y/qWhp90jFZ/TkC
80/+mZ+6TMPhcELYxVsEPyuNGbdjNCySuReybxM8tXXieATT2Hxn66P0OgKD
PFexdwANyuzeOykyAs6uwIIAHg2JanU9to/A57Vi0yBbGqe2Kd6NGSKQnqly
DrSi8alXiTCCIigpSfiab07DucZd8fEYAY8r9vU1evFHs/SPThO8rU6lvQ1o
sExVjv5zBJOXbuZ4PFNizVMafVhLkNUtD4ZWCTj2p7atELSP3roaOKfEf1rw
5HM=
         "]], LineBox[CompressedData["
1:eJwVxX00lXcAB3BvncThettsdrV5qSHFkisv6+vQ8r6T63VEuuI0c3qRszON
UO5ELo4UFmXejs3mZWJOXZFutczrUFri8dzrjuvy63q9TyPb/vicjxnvDDdO
TUVF5dP//P/0jJGwXI1CL/Xz7bClafhZzDiaaFIos/CuG1Gl0S3sHyzRotCS
7p41rkmDE9r+5Ts6FGb7EtImWDTMc7Ir9Awo+C/JHkyb0ig1P+uUb0SBW3dV
R2xJQ1cYPqxtTGGn+kqyeA8NZtF623Y2hd9Ot5RMO9MYCu5L3NxFodlw3X4k
hIatPET7eQCFpGc2K9qPaHQE+3flHqVQWBQTkt9Hw7PT4/yhIApNiRaNrFEa
Efl2L2vDKcRXsbxYYho59jsakmMphFoJP1BTFUOaLPQ1SKGQ4MG50O4mRuWm
eW5ADQXLYYeIyFYxDFmvNUVvKEji00wqKyTQ6LrZZFE+jUPuPkXHvaX46sC9
Fzv8aMQbW22wNGfR4MOrvL9Go7KXXRHQMofVeRM96Q0xGIHz5bFP5tEW5KVe
fFiCWn6ia/hjOdK9+bfvSCWQ5SyLXx1YhNkr3/Fq/gw+GlXfjC0icHHKKn5/
vxRHrv9h05L5Gsd2DjKqI1LcF4iyg6wVWO0V0Gcz/4Ze1O+H0/9SoFQjOplr
OQuH4eKMjW+XYDjZVqUmmsW1j3FN9u4ytqVlBjufm0PvdWn25XvLUPkxuok2
kGGoTC2aw11B0vdNAoMeGaLqC+J+XVpB554rmvqn57HbnWcuEqxC3zfJ9pKu
HD4D2Xw+ew0Te4dGUoRyBPqMRpa2raH5Fiwl0Qs42hOuddBzHVFNHH3Ttwvg
Oc48tOpfRwb/h8yJnxYx/KSqazdPiV9mTW/q+hM4eXw2MSVX4koFP2byc4Iv
uqPf8yNKnOQu7GoMJHiiPxncrlCCLRQ2B4QRREylDOatKZFbEPk4j0fA+cd4
wFmFwSlOmUIrheCkJFWz2JCBeZaR9/Y6ghOK6H2+LgzeHkzVeV5P4JBxrKHN
jcGLBfGfdQ0EylOmtmZgUBjWGnWkhWA/E+ys9GSwZcM9zxcSeMny+HUBDCaG
C26pjxBc6GzcUD/BoOO79diRMYKcmoyeM7EMil2PW1ePE0zViwQv4xj41e67
4zFJ4HZX17E1gcHdb/qfZs4RZI2VP+UlM7ix17EgUE7QkKroHPiawTm6PNiM
EIiqCjpcUhhY+SdOda8Q1LCNHhhcZKChOlpTuE7wzNt+8GIGA6rNNSHmDcFQ
japEdomBMKHazn6T4BG7eiuUz6DkQ+3VrS2CxXI784fZDP4FQwb5cw==
         "]]},
       Annotation[#, "Charting`Private`Tag$18496#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwt1Ws4lAkfBnCT2pRySNK0SoRIYstSolupJaIcolRYUlK9SZblzbZyKKNQ
qeRQRLW9lLNs5JROdoQoKZ7n8czQOD6mMGHMvN7rej/8r//X+8N9Xz9Nn1PO
frNkZGTCZu5/385P0FLTt3eL5tvM/p8OSDHbelkgyTZBWdiVhEfuUmy4k5Je
zN4Oe53z6/VdpbBvbC/KYLsi5Kxv+EoHKdwPi55dZR/GmzW68xUhRZfRBevL
7GCcuZCrP6glRabq7lgOOxr1VmX+9/sliJQrXh3HTsbR4n96l4VLsG9/Vv6I
MAc8A+tvi2OnIS+NPGizIh9c3ueX5nfF0HEaFjyPL4GCyLHpY90UQt9uQsro
34jNUBBcaJ6EWokywWJV40QU88pneAJltDW3yaIOsWL1cseJ76gLyPhx/2A9
xM3aXUVy3zGma6n46OQrEHyHN9v0RJg1kav0o04DxuOfv+CZjMNU6l3m8piL
sCCPuAKnMXCjTd6+XNME95J/IseCRqGRNDDxcLgZAXFxHPvIbxgQkcR743cY
yPD3aLzzFTn9FQ0KCa3I2pFs7p0rhMLyBwyf34ZC29TdxytGcOlY6ZFM7Q84
uCTKffsTBuNWuXz/c+2orQ0wbmsZQvD6+pIlzz9CZjD5ZsWCQZCP6+NbND/h
ocU+jRea/ZgKaEvTD/8Mue3NStUQwGDrXMmRik6ggZOk9EcvbO5qHi1UI0CH
EMbRN/gwSVHQfalOIKkp5dDRRD5WJkzxP2kSgJ4Lx+4iH5Nh731mryWQ1vGK
pxTOxyOnOE93KwLOFoU3Mg7xocIS7p32J1DLihaXafNBetVs3/mUQOYl/dd9
RTxw9z6S9awm4NjDG+Xm8lBun1oXVE9g2vK2ZkEOD1fNgq3S3xLYzyz6d8gN
HnYo6lkwNAElZ7GhbDgPuVWJG67Lkzin1nRNfSsPocu9tLoPkvC8G+y1u4mG
zx5jt85fSfQ1vndwe03DMYrFaT9CInDC1OJQLQ3dvmxhYyCJP/dMLD1eTKOt
RFDzNJpEtiTiXexNGsa7gryS80j0e1zYUeVFQ/2c9bXEQhJBsYINL/bRmFu0
+BWnjMRU4U4trhMNQu3JusgaEgvmLZB2WNO4xJuaPtlGwvhJUvnYahq/L2n8
6VgHiXJaeF+8kobvztt+hwkSWxVcrssuo2Geb9XoISDh6qcapLxgJh+tzHIb
IvE5KcR76Rwayqo8E6evJPwq2x01JN0Q25T47xKRGP6y0VJX1A1BeEy6jZhE
iEqqgeFIN/rdDPyzZCis2KRBVgx2w3tEZZaGLIXrC6tGSr5140OcOC19DoWF
9MFZjye7Yb+q5+dlchSiyqZUHrBo1FQ2Nt2cT+E7J1UnU46GqVvZMdWFFAK9
NpndUqShFXchQ2kRBS+5UI/45TRStALNEhZTaO9UPRGtTUOhcl+LvBqF3YUl
EREGNCaG9efMVadg4fE189QmGs2u3BPTOhTYeSe/uOylsXZwr3y7A4VL3zxY
PfU0yl13VXP2UDjuG8r5jUvD+tm2M1tcKNi2XlP5oY2GR4LR53v7KLCKuTqr
eTTijOflBvtSM/vbYneMxUNvcKXdojAKR4Sa14Ysecic1uI45FCwYgTa42U8
qCiOyNVPUhD2h9jOfcjH7Oq0/FXp3Tjru4f17kQvjptUdMyzp5FWmnQr3E2A
3J0+mVXjNH5wUn+93qwfYwPLlHpneply0s//mmgApS42ssnb+ajyVRW0dA3h
nG3MnZJePhZ+Pt9Rns1As8vuY3ZMD1oaMwrcC0ZgbhadzF7fC0GqIb82S4iD
K5omWK29uKKXvkcm6ivGGi7TgZFfMGdVVZ5h6DekzPYMdtYWQIGo2mp0YBQq
ROndWfUCVFj2ZJWbj2FORKTrptN9WD+/WmhsOA6Zh5759KJ+WNwMDY9QFCEo
Nf/yorp+KF/hfS2f/R3PDC7KKf9rAJeNfjM9O/YdynZBa88rDCItoadI5cME
Og2bW8MqBxHsMU8j9c0kCm5Dm+85BKpXvn40bwqH8k2Vl0uGIFQzMWmPF+PP
mKzIzv8Mg1uqmPxXxDQeCZanKexisHlxw1pHLwkuZsR4E44MtE7VVlj6SnDY
eUjnsROD+Q3ldoZHJVCvrCxwcGfw6dwD/wWnJOAkHnh5yYdB6EB0TsMfEvib
3hLOD2NQVgd1m9sSaEUvtp17n8G606XyVl0SSDaeXdj+FwM1bl6qUbcEHUO8
d/dzGUzr5uhr9EiQ5F586JdCBtzOqzaSQQmka5zPxFQyOG4bGFUplqCzJfG2
bCuDBxoGUxvVpSiPFfm2vmeQGK7F0VspRfJmL/3sjzN53rPZS7VnPLu3rmQb
weCXeDkzkYEUT39vfBPZx4A/3hNUulmKG4Y/JzoNMmh06mLdm/HtNJ3uqskw
KM5rS0q2lkJv1wmyZpTBeZ/nj8/Yz/jJastJEjEIePbU0ne3FFTp5gDvSQbO
S4u4zi5SVAZkGxlPMzA/8/DAthlfb2rIj0mlM736v7//BSkU5A4=
         "]]},
       Annotation[#, "Charting`Private`Tag$18496#2"]& ], {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0.5601481778956303},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->300,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 1}, {0.5601481778956303, 1.9597644009744573`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.836888483512415*^9, 3.8368885016411953`*^9}, 
   3.836891657622919*^9, 3.836896072208139*^9, 3.8369834774627047`*^9, 
   3.837060472633552*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"045ca93d-a110-446d-badb-3cf7a20ef60a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.836888503386636*^9, 3.8368885049081087`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"8c7a7efe-a185-4712-bcaa-eaab869520c7"],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "edda8bd6-d594-471e-bbd3-2e23bb729bcb"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3"}], TraditionalForm]],ExpressionUUID->
  "732332f8-7875-42fb-b2b6-7404e795d128"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688538205641*^9, 
  3.836885412157634*^9}},ExpressionUUID->"13e6a63b-28d2-4a8c-8810-\
d7ea54a0315d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fmonint", "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "stored", " ", "values", " ", "to", " ", "get", " ", "a", 
    " ", "more", " ", "accurate", " ", "estimate", " ", "of", " ", "the", " ",
     "time"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmonint", "[", "mon_", "]"}], ":=", 
   RowBox[{
    RowBox[{"fmonint", "[", "mon", "]"}], "=", 
    RowBox[{"monint", "[", "mon", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "flegendreIE", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flegendreIE", "[", "sum_", "]"}], ":=", 
   RowBox[{
    RowBox[{"flegendreIE", "[", "sum", "]"}], "=", 
    RowBox[{"legendreIE", "[", "sum", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8368885548025923`*^9, 3.8368885813130703`*^9}, {
  3.836888655340311*^9, 3.836888668221517*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"7d956711-67b8-4bad-94c5-3d34dfcb899f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"legendrebasis", "[", 
    RowBox[{"10", ",", "3", ",", "1", ",", "3"}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"7dc667a1-3381-4abc-8041-315d0236f632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.521304`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.836888588329999*^9, 3.836888602655479*^9}, {
  3.836888672561223*^9, 3.836888679470902*^9}, {3.836891666099551*^9, 
  3.836891675696723*^9}, {3.8368960840086803`*^9, 3.8368962086937532`*^9}, {
  3.8369834932320957`*^9, 3.8369835088140697`*^9}, {3.837060478397006*^9, 
  3.8370604890960484`*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"62164cbc-f083-45ce-aeb5-9346c06b952d"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Local operator blocks", "Chapter",
 CellChangeTimes->{{3.836888771846079*^9, 3.836888777547818*^9}, {
  3.836981364866551*^9, 
  3.836981366415537*^9}},ExpressionUUID->"85a2500d-d2a8-4113-b945-\
a5ded897ed67"],

Cell["\<\
We calculate the action of the local operators on the monomials. These are \
later transformed to the actual basis using the basis vectors found above.\
\>", "Text",
 CellChangeTimes->{{3.836888929117256*^9, 3.836889076133547*^9}, {
   3.836889267870839*^9, 3.836889270694264*^9}, 
   3.8368893561226*^9},ExpressionUUID->"8dfc16a4-c5ae-4c4a-a679-bc631898c325"],

Cell[CellGroupData[{

Cell["Kinetic energy", "Section",
 CellChangeTimes->{{3.836888820813587*^9, 
  3.836888822757608*^9}},ExpressionUUID->"ffd3c8c4-23dc-4375-be35-\
c8fdef7d5dc1"],

Cell[TextData[{
 "The matrix elements of the kinetic energy, ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"\[InvisibleComma]", "\[InvisibleComma]", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        SubscriptBox["\[Psi]", "1"], "|", "K", "|", 
        SubscriptBox["\[Psi]", "2"]}], "\[RightAngleBracket]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "1"], 
          RowBox[{
           SubscriptBox["dx", "1"], 
           RowBox[{
            SubsuperscriptBox["\[Integral]", "0", "1"], 
            SubscriptBox["dx", "2"]}]}]}]}], "..."}], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "1"], 
        RowBox[{
         SubscriptBox["dx", "n"], " ", 
         RowBox[{
          RowBox[{"\[Del]", 
           SubscriptBox["\[Psi]", "1"]}], ".", 
          RowBox[{"\[Del]", 
           SubscriptBox["\[Psi]", "2"]}]}]}]}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bfc8d083-2be0-4ab0-8e09-137c0a5aaacb"],
 ",  between two monomials are given by Eq. (S33) in the supplement.  Below \
is a routine to calculate these (up to n!/2).  As before, \
\[OpenCurlyDoubleQuote]incr(p,i,s)\[CloseCurlyDoubleQuote] increments the \
i-th element of p by s."
}], "Text",
 CellChangeTimes->{{3.836889343131062*^9, 3.836889394620757*^9}, {
   3.836889470774068*^9, 3.836889516572689*^9}, {3.836889556339302*^9, 
   3.836889587775738*^9}, {3.836889650475045*^9, 3.836889828183612*^9}, 
   3.836889932539487*^9, {3.836892006349799*^9, 3.836892009317878*^9}, {
   3.8368921084199953`*^9, 
   3.836892112316978*^9}},ExpressionUUID->"c2355193-051a-4069-b255-\
b0e8712a127e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KE", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mon1", ",", "_Real", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"mon2", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sum", "=", 
         RowBox[{"mon1", "+", "mon2"}]}], ",", 
        RowBox[{"prod", "=", 
         RowBox[{"mon1", "*", "mon2"}]}], ",", 
        RowBox[{"res", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"prod", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "!=", "0"}], ",", 
           RowBox[{"res", "+=", 
            RowBox[{
             RowBox[{"prod", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"monint", "@", 
              RowBox[{"MapAt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "-", "2"}], "&"}], ",", "sum", ",", "i"}], 
               "]"}]}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "prod", "]"}]}], "}"}]}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         SubscriptBox["\[Sum]", "i"], 
         RowBox[{
          SubscriptBox["p", "i"], 
          SubscriptBox["q", "i"], " ", "\[ScriptCapitalI]", 
          RowBox[{"(", 
           RowBox[{"incr", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", "+", "q"}], ",", "i", ",", 
              RowBox[{"-", "2"}]}], ")"}]}], ")"}]}]}], "*)"}], 
       "\[IndentingNewLine]", "res"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.836889885338874*^9, 3.836889910147681*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"121267da-8dee-4966-9d2f-1cfec6fcf767"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"mon1", ",", "mon2"}], "}"}], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"sum", "=", 
                    RowBox[{"mon1", "+", "mon2"}]}], ",", 
                    RowBox[{"prod", "=", 
                    RowBox[{"mon1", " ", "mon2"}]}], ",", 
                    RowBox[{"res", "=", "0.`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"prod", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "0"}], ",", 
                    RowBox[{"res", "+=", 
                    RowBox[{
                    
                    RowBox[{"prod", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"monint", "[", 
                    RowBox[{"MapAt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "-", "2"}], "&"}], ",", "sum", ",", "i"}], 
                    "]"}], "]"}]}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "prod", "]"}]}], "}"}]}], "]"}], 
                    ";", "res"}]}], "]"}], ImageSize -> {{1, 500}, Automatic},
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Real], 1}, {
     Blank[Real], 1}}, {{3, 1, 0}, {3, 1, 1}, {3, 0, 
   1}}, {{0, {2, 0, 3}}, {-2, {2, 0, 6}}, {0., {3, 0, 0}}}, {1, 7, 6, 0, 
   6}, {{44, 0, 1, 3}, {45, 0, 1, 2}, {7, 0, 1}, {33, 2, 2}, {6, 3, 5}, {3, 
    16}, {38, 2, 0, 5, 0, 2}, {10, 3, 3}, {27, 8, 0, 2, 3, 0}, {2, 0, 12}, {
    38, 2, 0, 5, 0, 2}, {42, "CopyTensor", 3, 1, 3, 3, 1, 4}, {38, 3, 0, 5, 0,
     4}, {10, 6, 5}, {13, 4, 5, 4}, {39, 4, 0, 5, 0, 4}, {
    47, $CellContext`monint, 3, 1, 4, 3, 0, 4}, {16, 2, 4, 2}, {13, 1, 2, 
    4}, {7, 4, 1}, {3, 1}, {4, 5, 2, -15}, {1}}, 
   Function[{$CellContext`mon1, $CellContext`mon2}, 
    Block[{$CellContext`sum = $CellContext`mon1 + $CellContext`mon2, \
$CellContext`prod = $CellContext`mon1 $CellContext`mon2, $CellContext`res = 
      0.}, Do[
       If[Part[$CellContext`prod, $CellContext`i] != 0, 
        AddTo[$CellContext`res, 
         Part[$CellContext`prod, $CellContext`i] $CellContext`monint[
           
           MapAt[# - 
            2& , $CellContext`sum, $CellContext`i]]]], {$CellContext`i, 
        Length[$CellContext`prod]}]; $CellContext`res]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction6.dylib", 
    "compiledFunction6", {{Real, 1, "Constant"}, {Real, 1, "Constant"}}, 
    Real]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.836889914156267*^9, 3.837064909615831*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"0e1bba82-8826-4e10-940d-c3763efeb6b7"]
}, Open  ]],

Cell["\<\
We generate the matrix by using a symmetric version of \
\[OpenCurlyDoubleQuote]Outer\[CloseCurlyDoubleQuote] defined above.\
\>", "Text",
 CellChangeTimes->{{3.836891784672113*^9, 
  3.836891812556869*^9}},ExpressionUUID->"243c99cb-da80-4404-b293-\
9af681b04f27"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kinoverlaps", "[", 
    RowBox[{"n_Integer", ",", "dmax_Integer"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"monlist", "=", 
       RowBox[{"allmonomials", "[", 
        RowBox[{"n", ",", "dmax"}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "!"}], "/", "2"}], ")"}], "*", 
      RowBox[{"symOuter", "[", 
       RowBox[{"KE", ",", "monlist"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.836891729881504*^9, 3.836891733166201*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"6925eacb-8282-4c89-9c15-8336b97d58c5"],

Cell[TextData[{
 "Here is an example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "aabee2b9-689c-4b51-8eea-c48d3e874c89"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "9d41a06c-81a8-4784-927b-6b2203c25543"],
 "."
}], "Text",
 CellChangeTimes->{{3.836885270604451*^9, 
  3.836885312950878*^9}},ExpressionUUID->"2791134c-6190-4336-8815-\
471fb2c99896"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kinoverlaps", "[", 
   RowBox[{"3", ",", "2"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8368853275215197`*^9, 3.836885338660243*^9}, 
   3.836890772040604*^9, 3.836891575424363*^9, {3.836891846506177*^9, 
   3.836891849273301*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"6e196d6e-09af-40f0-9aa2-71638bdaca7f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.5`", "0.`", "0.`", "0.25`", "0.`", "0.`", "0.25`", "0.375`", 
      "0.`"},
     {"0.`", "0.`", "0.5`", "0.`", "0.`", "0.5`", "0.`", "0.125`", "0.`", 
      "0.375`"},
     {"0.`", "0.`", "0.`", "0.5`", "0.`", "0.`", "0.75`", "0.`", "0.125`", 
      "0.25`"},
     {"0.`", "0.25`", "0.`", "0.`", "0.2`", "0.`", "0.`", 
      "0.15000000000000002`", "0.2`", "0.`"},
     {"0.`", "0.`", "0.5`", "0.`", "0.`", "0.6000000000000001`", "0.`", 
      "0.15000000000000002`", "0.`", "0.4`"},
     {"0.`", "0.`", "0.`", "0.75`", "0.`", "0.`", "1.2000000000000002`", 
      "0.`", "0.2`", "0.4`"},
     {"0.`", "0.25`", "0.125`", "0.`", "0.15000000000000002`", 
      "0.15000000000000002`", "0.`", "0.2`", "0.2`", "0.1`"},
     {"0.`", "0.375`", "0.`", "0.125`", "0.2`", "0.`", "0.2`", "0.2`", 
      "0.35`", "0.07500000000000001`"},
     {"0.`", "0.`", "0.375`", "0.25`", "0.`", "0.4`", "0.4`", "0.1`", 
      "0.07500000000000001`", "0.45000000000000007`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8368918503168716`*^9, 3.837064912542623*^9},
 CellLabel->
  "Out[278]//MatrixForm=",ExpressionUUID->"5f37bdb7-4f2d-4ac7-8ebb-\
aff5433e6081"]
}, Open  ]],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "23891ae9-2b12-4e71-b16f-64b549632b63"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ac9d6802-3ead-4e07-9cd9-835e620861a8"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688538205641*^9, 
  3.836885412157634*^9}},ExpressionUUID->"9d2dad7d-1d99-4eb7-b3fe-\
6bd0be434f19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kinoverlaps", "[", 
    RowBox[{"10", ",", "3"}], "]"}], ";"}], "//", "AbsoluteTiming"}]], "Input",\

 CellLabel->
  "In[752]:=",ExpressionUUID->"b72a9857-e03d-47c6-9e09-15ec273cb241"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.12623`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8368918893079357`*^9, 3.836891905378249*^9}},
 CellLabel->
  "Out[752]=",ExpressionUUID->"ebb28685-b7b5-4dfe-abf7-6ef7f8cbc608"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interaction energy", "Section",
 CellChangeTimes->{{3.836888820813587*^9, 3.836888822757608*^9}, {
  3.836891965268283*^9, 
  3.836891966942079*^9}},ExpressionUUID->"98db2e37-fda9-4090-bc00-\
2229cea87e79"],

Cell[TextData[{
 "Matrix elements of the contact interaction ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["U", "L"], "=", 
    RowBox[{
     SubscriptBox["\[Sum]", 
      RowBox[{"i", "<", "j"}]], 
     RowBox[{"\[Delta]", "(", 
      RowBox[{
       SubscriptBox["x", "i"], "-", 
       SubscriptBox["x", "j"]}], ")"}], "  "}]}], TraditionalForm]],
  ExpressionUUID->"9d326609-3504-4043-b0d6-49995dc55d4a"],
 "between monomials are given by Eq. (S37) of the supplement.  Below we \
calculate these up to n!/2.  Note that \[OpenCurlyDoubleQuote]merge\
\[CloseCurlyDoubleQuote] is defined above."
}], "Text",
 CellChangeTimes->{{3.836892062320106*^9, 3.836892150021716*^9}, {
  3.8368921986204967`*^9, 3.836892218395146*^9}, {3.836984768327303*^9, 
  3.836984773263872*^9}},ExpressionUUID->"973849bb-75cb-405b-8bc5-\
e907e9862b29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IE", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"sum", ",", "_Integer", ",", "1"}], "}"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"merged", ",", 
        RowBox[{"res", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"merged", "=", 
           RowBox[{"merge", "[", 
            RowBox[{"sum", ",", "i"}], "]"}]}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"merge", " ", "the", " ", "i"}], "-", 
            RowBox[{"th", " ", "and", " ", 
             RowBox[{"(", 
              RowBox[{"i", "+", "1"}], ")"}]}], "-", 
            RowBox[{"th", " ", "elements"}]}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"res", "+=", 
           RowBox[{"monint", "@", "merged"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"Length", "[", "sum", "]"}], "-", "1"}]}], "}"}]}], "]"}],
        ";", "\[IndentingNewLine]", "res"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8368922285303793`*^9, 3.836892253224985*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"d294bb33-36d9-4fac-b85f-be1e4fe4d448"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "sum", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"merged", ",", 
                    RowBox[{"res", "=", "0.`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"merged", "=", 
                    RowBox[{"merge", "[", 
                    RowBox[{"sum", ",", "i"}], "]"}]}], ";", 
                    RowBox[{"res", "+=", 
                    RowBox[{"monint", "[", "merged", "]"}]}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "sum", "]"}], "-", "1"}]}], 
                    "}"}]}], "]"}], ";", "res"}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Integer], 1}}, {{2, 1, 0}, {3, 0, 
   1}}, {{0, {2, 0, 4}}, {-1, {2, 0, 1}}, {3, {2, 0, 6}}, {0., {3, 0, 0}}}, {
   0, 7, 4, 0, 
   3}, {{7, 0, 1}, {33, 0, 3}, {12, 3, 1, 3}, {6, 4, 5}, {3, 5}, {
    47, $CellContext`merge, 2, 1, 0, 2, 0, 5, 2, 1, 2}, {
    47, $CellContext`monint, 2, 1, 2, 3, 0, 3}, {13, 1, 3, 2}, {7, 2, 1}, {4, 
    5, 3, -4}, {1}}, 
   Function[{$CellContext`sum}, 
    Block[{$CellContext`merged, $CellContext`res = 0.}, 
     Do[$CellContext`merged = $CellContext`merge[$CellContext`sum, \
$CellContext`i]; AddTo[$CellContext`res, 
         $CellContext`monint[$CellContext`merged]]; 
       Null, {$CellContext`i, Length[$CellContext`sum] - 
        1}]; $CellContext`res]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction7.dylib", 
    "compiledFunction7", {{Integer, 1, "Constant"}}, Real]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.836892258918044*^9, 3.837064924623057*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"3ae07fa7-8832-4edb-a03a-957ada210890"]
}, Open  ]],

Cell["We can benefit from storing these integrals.", "Text",
 CellChangeTimes->{{3.83688303194849*^9, 3.83688304051228*^9}, {
  3.836883201288652*^9, 3.8368832089097548`*^9}, {3.836886418338353*^9, 
  3.836886434148815*^9}},ExpressionUUID->"ea3455b8-2484-4a6e-884b-\
667875065f62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fIE", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fIE", "[", "sum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fIE", "[", "sum", "]"}], "=", 
   RowBox[{"IE", "[", "sum", "]"}]}]}]}], "Input",
 CellLabel->
  "In[280]:=",ExpressionUUID->"716c6bba-6735-43aa-a6ce-722e3f22dce9"],

Cell["Below is a routine for generating the full symmetric matrix.", "Text",
 CellChangeTimes->{{3.836891784672113*^9, 3.836891812556869*^9}, {
  3.836892482140154*^9, 3.836892514417144*^9}, {3.836895034610732*^9, 
  3.836895037625825*^9}},ExpressionUUID->"b1bd9e51-fbe4-4212-a480-\
39e346586f85"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"intoverlaps", "[", 
    RowBox[{"n_Integer", ",", "dmax_Integer"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"monlist", "=", 
       RowBox[{"allmonomials", "[", 
        RowBox[{"n", ",", "dmax"}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "!"}], "/", "2"}], ")"}], "*", 
      RowBox[{"symOuter", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fIE", "[", 
          RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], 
       "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.83689497357936*^9, 3.836894978435573*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"2667e08b-05e7-47bc-b0a2-503e1ed86dd7"],

Cell[TextData[{
 "Here is an example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "9bef0106-666f-49b2-8ac5-e5465ada477f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "306cb652-c47f-4a0b-a587-3c0dbf857732"],
 "."
}], "Text",
 CellChangeTimes->{{3.836885270604451*^9, 
  3.836885312950878*^9}},ExpressionUUID->"f23caa8e-d51a-4869-8e91-\
aa0598ffaa84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"intoverlaps", "[", 
   RowBox[{"3", ",", "2"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8368853275215197`*^9, 3.836885338660243*^9}, 
   3.83688654488316*^9, 3.836892348124135*^9, {3.836892523965933*^9, 
   3.836892526111356*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"4b5b3da1-20be-4cbf-88c0-d6bc02dccf9f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.`", "1.`", "1.5`", "2.`", "0.5`", "1.`", "1.5`", "0.625`", "0.75`", 
      "1.125`"},
     {"1.`", "0.5`", "0.625`", "0.75`", "0.30000000000000004`", 
      "0.45000000000000007`", "0.6000000000000001`", "0.35`", "0.4`", 
      "0.5`"},
     {"1.5`", "0.625`", "1.`", "1.125`", "0.35`", "0.75`", 
      "0.9000000000000001`", "0.45000000000000007`", "0.5`", "0.8`"},
     {"2.`", "0.75`", "1.125`", "1.5`", "0.4`", "0.8`", "1.2000000000000002`",
       "0.5`", "0.6000000000000001`", "0.9000000000000001`"},
     {"0.5`", "0.30000000000000004`", "0.35`", "0.4`", "0.2`", 
      "0.2666666666666666`", "0.3333333333333333`", "0.22499999999999998`", 
      "0.25`", "0.29166666666666663`"},
     {"1.`", "0.45000000000000007`", "0.75`", "0.8`", "0.2666666666666666`", 
      "0.6`", "0.6666666666666666`", "0.35`", "0.375`", "0.625`"},
     {"1.5`", "0.6000000000000001`", "0.9000000000000001`", 
      "1.2000000000000002`", "0.3333333333333333`", "0.6666666666666666`", 
      "1.`", "0.4166666666666667`", "0.5`", "0.75`"},
     {"0.625`", "0.35`", "0.45000000000000007`", "0.5`", 
      "0.22499999999999998`", "0.35`", "0.4166666666666667`", 
      "0.2666666666666666`", "0.29166666666666663`", "0.375`"},
     {"0.75`", "0.4`", "0.5`", "0.6000000000000001`", "0.25`", "0.375`", 
      "0.5`", "0.29166666666666663`", "0.3333333333333333`", 
      "0.4166666666666667`"},
     {"1.125`", "0.5`", "0.8`", "0.9000000000000001`", "0.29166666666666663`",
       "0.625`", "0.75`", "0.375`", "0.4166666666666667`", 
      "0.6666666666666666`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.836886564933619*^9, 3.836892354630473*^9, 
  3.836892532324314*^9, 3.836894982126298*^9, 3.837064930520604*^9},
 CellLabel->
  "Out[283]//MatrixForm=",ExpressionUUID->"2f9635d8-0977-44c4-9fa4-\
c58cfeb52ad8"]
}, Open  ]],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "59b069b4-3a70-40ec-888e-7370ecb40a36"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bcfb92b4-c39b-4024-adc2-cf21299f602c"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688538205641*^9, 
  3.836885412157634*^9}},ExpressionUUID->"2cdaa921-e27f-4665-8242-\
5843bc6003de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"intoverlaps", "[", 
    RowBox[{"10", ",", "3"}], "]"}], ";"}], "//", "AbsoluteTiming"}]], "Input",\

 CellChangeTimes->{{3.8368854246715183`*^9, 3.836885448099195*^9}, 
   3.8368866125805683`*^9, 3.836892368698834*^9, {3.836892557669964*^9, 
   3.836892559948064*^9}},
 CellLabel->
  "In[868]:=",ExpressionUUID->"7751382c-c451-4335-a8a0-702e6bded467"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.217729`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.83688661639824*^9, 3.8368866356975327`*^9}, {
  3.836892376665914*^9, 3.8368924026181173`*^9}, {3.83689256093336*^9, 
  3.8368925922884607`*^9}, {3.836894963228918*^9, 3.836895021601775*^9}},
 CellLabel->
  "Out[868]=",ExpressionUUID->"e5b64426-93b8-4d94-8163-564b2d14b9cd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Density", "Section",
 CellChangeTimes->{{3.836888820813587*^9, 3.836888822757608*^9}, {
  3.836891965268283*^9, 3.836891966942079*^9}, {3.836892677069395*^9, 
  3.836892678226654*^9}},ExpressionUUID->"b75fddc8-9218-4007-bac8-\
d639331edb7b"],

Cell["\<\
To calculate the density and density-density correlations, we store the \
density operator \[Rho](x) in the local basis.  As derived in Eq. (S28) of \
the supplement, the matrix elements are polynomials in x.  Below is a routine \
to calculate these polynomial coefficients between two monomials, which \
depend only on their sum p+q.\
\>", "Text",
 CellChangeTimes->{{3.836892766850086*^9, 3.836892823851519*^9}, {
  3.8368929104988422`*^9, 3.8368929671826344`*^9}, {3.836893287792245*^9, 
  3.836893336138455*^9}, {3.836893433452733*^9, 
  3.83689347324585*^9}},ExpressionUUID->"f61a878d-8c58-4e55-9fb4-\
50de57bd83f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"denscoefs", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"sum", ",", "_Integer", ",", "1"}], "}"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "sum", "]"}]}], ",", "powers", ",", "coefs", 
        ",", "phases", ",", "leftint", ",", "rightint", ",", "middleint", ",", 
        RowBox[{"partialsums", "=", 
         RowBox[{"{", 
          RowBox[{"-", "1."}], "}"}]}], ",", "result", ",", "scale"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"powers", "=", 
        RowBox[{"Accumulate", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sum", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
           RowBox[{
            RowBox[{"Rest", "[", "sum", "]"}], "+", "1"}]}], "]"}], "]"}]}], 
       ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "powers", " ", "of", " ", "x", " ", "with", " ", "nonzero", " ", 
         "coefficients"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0.", ",", 
          RowBox[{"1", "+", 
           RowBox[{"powers", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "list", " ", "of", " ", "coefficients", " ", "to", " ", "be", " ", 
         "updated"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"phases", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1."}], ")"}], "^", 
         RowBox[{"Range", "[", "n", "]"}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "signs", " ", "originating", " ", "from", " ", "the", " ", "definite",
          " ", 
         RowBox[{"integrals", " ", "--"}], " ", "see", " ", 
         RowBox[{"Eq", ".", 
          RowBox[{"(", "S23", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"leftint", "=", 
        RowBox[{"phases", "*", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "1.", "}"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"monint", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"sum", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], ";", 
       " ", 
       RowBox[{"(*", 
        RowBox[{
        "integrating", " ", "over", " ", "all", " ", "particles", " ", "to", 
         " ", "the", " ", 
         RowBox[{"left", " ", "--"}], " ", 
         SubscriptBox["\[ScriptCapitalI]", "l"], " ", "in", " ", 
         RowBox[{"Eq", ".", 
          RowBox[{"(", "S28", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"rightint", "=", 
        RowBox[{"phases", "*", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"monint", "@", 
              RowBox[{"Drop", "[", 
               RowBox[{"sum", ",", "j"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "1.", "}"}]}], "]"}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"part", " ", "of", " ", 
         SubscriptBox["\[ScriptCapitalI]", "r"], " ", "in", " ", 
         RowBox[{"Eq", ".", 
          RowBox[{"(", "S28", ")"}]}], " ", "that", " ", "is", " ", 
         "independent", " ", "of", " ", 
         RowBox[{"x", " ", "--"}], " ", "see", " ", 
         RowBox[{"Eq", ".", 
          RowBox[{"(", "S23", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"partialsums", ",", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"leftint", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "*", 
                RowBox[{"monint", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"sum", ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], "+", 
             RowBox[{"leftint", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ";"}], ",", " ", 
         RowBox[{"(*", 
          RowBox[{
          "nonzero", " ", "coefficients", " ", "of", " ", "different", " ", 
           "powers", " ", "of", " ", "x", " ", "originating", " ", "from", 
           " ", 
           SubscriptBox["\[ScriptCapitalI]", "r"], " ", "in", " ", 
           RowBox[{"Eq", ".", 
            RowBox[{
             RowBox[{"(", "S28", ")"}], " ", "--"}]}], " ", "see", " ", 
           RowBox[{"Eq", ".", 
            RowBox[{"(", "S23", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", "2", ",", "n"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"coefs", "=", 
        RowBox[{"partialsums", "*", "rightint"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"multiply", " ", "by", " ", "the", " ", "x"}], "-", 
         RowBox[{"independent", " ", "part"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"scale", "=", 
        RowBox[{
         RowBox[{"N", "@", "n"}], "!"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"symmetrization", " ", "factor"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"1", "+", 
             RowBox[{"powers", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], "=", 
          RowBox[{"scale", "*", 
           RowBox[{"coefs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"update", " ", "the", " ", "nonzero", " ", "coefficients"}], 
        "*)"}], "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
     "]"}], ",", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}], ",", 
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.836893523614162*^9, 3.836893630272298*^9}, {
  3.836893686495269*^9, 3.836893723148361*^9}, {3.836893864023715*^9, 
  3.8368938856712513`*^9}, {3.83689391618368*^9, 3.836893924243267*^9}, {
  3.836893991259362*^9, 3.836894017241*^9}, {3.83689405714526*^9, 
  3.8368941539193773`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"95fc80cf-79a7-4d4d-92d4-24eff2e94e17"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "sum", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "=", 
                    RowBox[{"Length", "[", "sum", "]"}]}], ",", "powers", ",",
                     "coefs", ",", "phases", ",", "leftint", ",", "rightint", 
                    ",", "middleint", ",", 
                    RowBox[{"partialsums", "=", 
                    RowBox[{"{", 
                    RowBox[{"-", "1.`"}], "}"}]}], ",", "result", ",", 
                    "scale"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"powers", "=", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"sum", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Rest", "[", "sum", "]"}], "+", "1"}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"result", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0.`", ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"powers", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"phases", "=", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1.`"}], ")"}], 
                    RowBox[{"Range", "[", "n", "]"}]]}], ";", 
                    RowBox[{"leftint", "=", 
                    RowBox[{"phases", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1.`", "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"monint", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"sum", ",", "i"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
                    ";", 
                    RowBox[{"rightint", "=", 
                    RowBox[{"phases", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"monint", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"sum", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "1.`", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"partialsums", ",", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "i", 
                    RowBox[{"j", "-", "1"}]], 
                    RowBox[{
                    
                    RowBox[{"leftint", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"monint", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"sum", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}]}], "+", 
                    
                    RowBox[{"leftint", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "2", ",", "n"}], "}"}]}], "]"}], ";", 
                    RowBox[{"coefs", "=", 
                    RowBox[{"partialsums", " ", "rightint"}]}], ";", 
                    RowBox[{"scale", "=", 
                    RowBox[{
                    RowBox[{"N", "[", "n", "]"}], "!"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"result", "\[LeftDoubleBracket]", 
                    RowBox[{"1", "+", 
                    
                    RowBox[{"powers", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"scale", " ", 
                    
                    RowBox[{"coefs", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", 
                    "result"}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Integer], 1}}, {{2, 1, 0}, {3, 1, 
   2}}, {{
    0, {2, 0, 3}}, {{-1.}, {3, 1, 1}}, {{1.}, {3, 1, 6}}, {-1., {3, 0, 1}}, {
    2, {2, 0, 10}}, {-1, {2, 0, 4}}, {1, {2, 0, 1}}, {3, {2, 0, 8}}, {
    0., {3, 0, 0}}}, {0, 14, 8, 0, 
   12}, {{33, 0, 0}, {42, "CopyTensor", 3, 1, 1, 3, 1, 3}, {38, 0, 0, 1, 0, 
    6}, {34, 1, 1, 6, 2, 5}, {
    42, "Drop", 2, 1, 0, 2, 0, 3, 2, 0, 1, 2, 1, 2}, {41, 257, 2, 0, 1, 2, 1, 
    2, 2, 1, 4}, {42, "Join", 2, 1, 5, 2, 1, 4, 2, 1, 2}, {
    42, "Accumulate", 2, 1, 2, 2, 0, 3, 2, 1, 5}, {38, 5, 0, 4, 0, 6}, {12, 1,
     6, 2}, {47, ConstantArray, 3, 0, 0, 2, 0, 2, 3, 1, 2}, {6, 0, 2}, {6, 3, 
    6}, {35, 2, 2, 4}, {6, 3, 5}, {3, 2}, {36, 6, 5, 2, 4}, {4, 5, 2, -1}, {
    41, 263, 3, 0, 1, 2, 1, 4, 3, 1, 7}, {12, 0, 4, 5}, {6, 3, 7}, {35, 5, 3, 
    4}, {6, 3, 9}, {3, 4}, {42, "Take", 2, 1, 0, 2, 0, 3, 2, 0, 9, 2, 1, 8}, {
    47, $CellContext`monint, 2, 1, 8, 3, 0, 4}, {36, 7, 4, 3, 4}, {4, 9, 
    5, -3}, {42, "Join", 3, 1, 6, 3, 1, 4, 3, 1, 8}, {45, 7, 8, 4}, {12, 0, 4,
     7}, {6, 3, 5}, {35, 7, 3, 8}, {6, 3, 9}, {3, 4}, {
    42, "Drop", 2, 1, 0, 2, 0, 3, 2, 0, 9, 2, 1, 9}, {
    47, $CellContext`monint, 2, 1, 9, 3, 0, 2}, {36, 5, 2, 3, 8}, {4, 9, 
    7, -3}, {42, "Join", 3, 1, 8, 3, 1, 6, 3, 1, 9}, {45, 7, 9, 8}, {6, 0, 
    2}, {6, 1, 5}, {3, 20}, {7, 0, 6}, {12, 5, 4, 11}, {6, 3, 12}, {3, 9}, {
    38, 4, 0, 12, 0, 5}, {12, 12, 1, 13}, {34, 1, 3, 5, 13, 4, 2, 10}, {
    42, "Take", 2, 1, 0, 2, 0, 1, 2, 1, 10, 2, 1, 9}, {
    47, $CellContext`monint, 2, 1, 9, 3, 0, 7}, {16, 5, 7, 5}, {13, 6, 5, 
    7}, {7, 7, 6}, {4, 12, 11, -8}, {38, 4, 0, 5, 0, 4}, {13, 6, 4, 6}, {34, 
    1, 1, 4, 2, 9}, {34, 1, 1, 9, 0, 10}, {
    42, "Insert", 3, 1, 3, -3, 0, 6, 2, 2, 10, 3, 1, 11}, {
    42, "CopyTensor", 3, 1, 11, 3, 1, 3}, {4, 5, 2, -19}, {45, 3, 8, 11}, {10,
     0, 6}, {47, Factorial, 3, 0, 6, 3, 0, 4}, {6, 0, 2}, {6, 3, 5}, {3, 6}, {
    38, 5, 0, 5, 0, 7}, {12, 1, 7, 9}, {38, 11, 0, 5, 0, 6}, {16, 4, 6, 3}, {
    39, 2, 0, 9, 0, 3}, {4, 5, 2, -5}, {1}}, 
   Function[{$CellContext`sum}, 
    Block[{$CellContext`n = 
      Length[$CellContext`sum], $CellContext`powers, $CellContext`coefs, \
$CellContext`phases, $CellContext`leftint, $CellContext`rightint, \
$CellContext`middleint, $CellContext`partialsums = {-1.}, \
$CellContext`result, $CellContext`scale}, $CellContext`powers = Accumulate[
        Join[{
          Part[$CellContext`sum, 1]}, Rest[$CellContext`sum] + 
         1]]; $CellContext`result = 
      ConstantArray[
       0., 1 + Part[$CellContext`powers, -1]]; $CellContext`phases = (-1.)^
       Range[$CellContext`n]; $CellContext`leftint = $CellContext`phases 
       Join[{1.}, 
         Table[
          $CellContext`monint[
           
           Take[$CellContext`sum, $CellContext`i]], {$CellContext`i, \
$CellContext`n - 1}]]; $CellContext`rightint = $CellContext`phases Join[
         Table[
          $CellContext`monint[
           
           Drop[$CellContext`sum, $CellContext`j]], {$CellContext`j, \
$CellContext`n - 1}], {1.}]; 
     Do[AppendTo[$CellContext`partialsums, 
         Sum[Part[$CellContext`leftint, $CellContext`i] $CellContext`monint[
             
             Take[$CellContext`sum, {$CellContext`j, $CellContext`i + 
               1, -1}]], {$CellContext`i, $CellContext`j - 1}] + 
         Part[$CellContext`leftint, $CellContext`j]]; 
       Null, {$CellContext`j, 
        2, $CellContext`n}]; $CellContext`coefs = $CellContext`partialsums \
$CellContext`rightint; $CellContext`scale = Factorial[
        N[$CellContext`n]]; 
     Do[Part[$CellContext`result, 1 + 
         Part[$CellContext`powers, $CellContext`i]] = $CellContext`scale 
        Part[$CellContext`coefs, $CellContext`i], {$CellContext`i, \
$CellContext`n}]; $CellContext`result]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction5.dylib", 
    "compiledFunction5", {{Integer, 1, "Constant"}}, {Real, 1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.836894159840727*^9, 3.836917711413019*^9, 
  3.8370607857222023`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"5f803948-4304-45d4-a18d-f29a7808196e"]
}, Open  ]],

Cell[TextData[{
 "Here is integrating a 22-particle state {1,1,...,1}, for which the integral \
should be  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", 
    RowBox[{"n", "/", 
     SuperscriptBox["2", 
      RowBox[{"n", "-", "1"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2ee8024a-97fe-4167-a4d7-a516abd7c4a7"],
 "."
}], "Text",
 CellChangeTimes->{{3.792832689742922*^9, 3.792832708712143*^9}, {
  3.7928438423840857`*^9, 3.7928438502112103`*^9}, {3.836882639305966*^9, 
  3.836882661608306*^9}, {3.836882781196698*^9, 3.836882876297154*^9}, {
  3.8368944295038*^9, 
  3.8368944765645037`*^9}},ExpressionUUID->"99368e9e-7e7a-4185-9d2c-\
0c1a38fe86b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"22", "/", 
    RowBox[{"2", "^", "21."}]}], ",", 
   RowBox[{
    RowBox[{"denscoefs", "@", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", "22", "}"}]}], "]"}]}], "//", "AbsoluteTiming"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.836882695844336*^9, 3.836882699712884*^9}, {
  3.836882900976077*^9, 3.836882949158887*^9}, {3.836894492136478*^9, 
  3.836894520038221*^9}},
 CellLabel->
  "In[1232]:=",ExpressionUUID->"9e2c4542-fdde-40d5-806f-a823fdaad8f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00001049041748046875`", ",", 
   RowBox[{"{", 
    RowBox[{"0.000179`", ",", 
     RowBox[{"{", 
      RowBox[{
      "0.`", ",", "0.000010490417480468786`", ",", "0.`", ",", "0.`", ",", 
       "0.`", ",", "0.`", ",", "0.`", ",", "2.3235172534369603`*^-18", ",", 
       "0.`", ",", "1.0455827640466322`*^-17", ",", "0.`", ",", 
       "4.4437267471981867`*^-17", ",", "0.`", ",", 
       RowBox[{"-", "8.887453494396373`*^-17"}], ",", "0.`", ",", 
       "3.3327950603986403`*^-16", ",", "0.`", ",", 
       "2.1579848016081192`*^-14", ",", "0.`", ",", 
       "1.7059744715415542`*^-14", ",", "0.`", ",", 
       "1.7912731951186316`*^-13", ",", "0.`", ",", 
       "1.7592861737772275`*^-14", ",", "0.`", ",", 
       RowBox[{"-", "6.304108789368398`*^-13"}], ",", "0.`", ",", 
       "2.230032669494962`*^-13", ",", "0.`", ",", "2.2334687753031208`*^-15",
        ",", "0.`", ",", "5.4043501663945226`*^-14", ",", "0.`", ",", 
       RowBox[{"-", "9.608881980479273`*^-14"}], ",", "0.`", ",", 
       RowBox[{"-", "2.0629218244245433`*^-14"}], ",", "0.`", ",", 
       RowBox[{"-", "1.8464339459454903`*^-13"}], ",", "0.`", ",", 
       "3.054992777056975`*^-15", ",", "0.`", ",", 
       RowBox[{"-", "5.927848280322998`*^-16"}], ",", "0.`", ",", 
       RowBox[{"-", "1.692311525023864`*^-16"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.83688267202759*^9, 3.8368827005197773`*^9}, {
   3.836882924847834*^9, 3.8368829556122704`*^9}, {3.836894513628541*^9, 
   3.836894521288274*^9}, 3.836896559036276*^9},
 CellLabel->
  "Out[1232]=",ExpressionUUID->"9c09b01f-5d27-42c0-891a-53835dd0fe46"]
}, Open  ]],

Cell["We can benefit from storing these coefficients.", "Text",
 CellChangeTimes->{{3.83688303194849*^9, 3.83688304051228*^9}, {
  3.836883201288652*^9, 3.8368832089097548`*^9}, {3.836886418338353*^9, 
  3.836886434148815*^9}, {3.8368942719344387`*^9, 
  3.8368942736484833`*^9}},ExpressionUUID->"f1eb5610-e86b-4cc5-8b8a-\
a1e81d2b4e29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fdenscoefs", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdenscoefs", "[", "sum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fdenscoefs", "[", "sum", "]"}], "=", 
   RowBox[{"denscoefs", "[", "sum", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8368942897749662`*^9, 3.83689428993777*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"212baadb-572d-42bc-8d02-266463b573b1"],

Cell["Below is a routine for generating the full symmetric matrix.", "Text",
 CellChangeTimes->{{3.836891784672113*^9, 3.836891812556869*^9}, {
  3.836892482140154*^9, 3.836892514417144*^9}, {3.836894869937314*^9, 
  3.8368948712137003`*^9}},ExpressionUUID->"a3f3d185-569c-4569-ac3b-\
f323faa5e25e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"densoverlaps", "[", 
    RowBox[{"n_Integer", ",", "dmax_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "==", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", "}"}], "}"}], "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"monlist", "=", 
         RowBox[{"allmonomials", "[", 
          RowBox[{"n", ",", "dmax"}], "]"}]}], "}"}], ",", 
       RowBox[{"symOuter", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"fdenscoefs", "[", 
           RowBox[{"#1", "+", "#2"}], "]"}], "&"}], ",", "monlist"}], "]"}]}],
       "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.836894738864152*^9, 3.836894745140924*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"e0b10af7-f4c6-4b3d-a040-01116aed8ae7"],

Cell[TextData[{
 "Here is an example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f3d5617-5cca-4a0b-8e17-5711546fb729"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f2bb7f08-7f22-418e-8642-eb2e9fdb9698"],
 "."
}], "Text",
 CellChangeTimes->{{3.836885270604451*^9, 3.836885312950878*^9}, {
  3.836894686926239*^9, 
  3.836894688040764*^9}},ExpressionUUID->"8d81964e-61a7-4bb7-90f4-\
52907b3408f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"densoverlaps", "[", 
   RowBox[{"3", ",", "1"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8368946318362513`*^9, 3.8368946728995523`*^9}, {
  3.836894794502265*^9, 3.836894795261984*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"64956f72-4387-4bd9-ae9c-41dfb2f26d40"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"3.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "3.`", ",", 
        RowBox[{"-", "3.`"}], ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "0.`", ",", "3.`", ",", 
        RowBox[{"-", "2.0000000000000004`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"2.`", ",", "0.`", ",", "0.`", ",", "0.9999999999999998`"}], 
       "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "3.`", ",", 
        RowBox[{"-", "3.`"}], ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "3.`", ",", 
        RowBox[{"-", "4.`"}], ",", "1.5`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
        RowBox[{"-", "0.2500000000000001`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "2.`", ",", 
        RowBox[{"-", "1.5`"}], ",", "0.`", ",", "0.4999999999999999`"}], 
       "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1.`", ",", "0.`", ",", "3.`", ",", 
        RowBox[{"-", "2.0000000000000004`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
        RowBox[{"-", "0.2500000000000001`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "0.`", ",", "0.`", ",", "4.`", ",", 
        RowBox[{"-", "3.`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.75`", ",", "0.`", ",", "1.5`", ",", "0.`", ",", 
        RowBox[{"-", "0.2500000000000001`"}]}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2.`", ",", "0.`", ",", "0.`", ",", "0.9999999999999998`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "2.`", ",", 
        RowBox[{"-", "1.5`"}], ",", "0.`", ",", "0.4999999999999999`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{"0.75`", ",", "0.`", ",", "1.5`", ",", "0.`", ",", 
        RowBox[{"-", "0.2500000000000001`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.5`"}], 
       "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.836894635016095*^9, 3.836894673497285*^9}, 
   3.8368947511089478`*^9, 3.8368947958699512`*^9, 3.836896545882577*^9, 
   3.837060794460863*^9},
 CellLabel->
  "Out[175]//MatrixForm=",ExpressionUUID->"6b742efc-a9b5-4d35-88c9-\
7fbe2322ae25"]
}, Open  ]],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2bcbaf59-8b4e-4268-8218-b5134b650d23"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "73c1c17c-11f1-4178-b019-6a28257ee77b"],
 "."
}], "Text",
 CellChangeTimes->{{3.83688538205641*^9, 
  3.836885412157634*^9}},ExpressionUUID->"cedb9b87-aee1-4ce1-bbcd-\
ce937bf4bb35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"densoverlaps", "[", 
    RowBox[{"10", ",", "3"}], "]"}], ";"}], "//", "AbsoluteTiming"}]], "Input",\

 CellChangeTimes->{{3.8368854246715183`*^9, 3.836885448099195*^9}, 
   3.8368866125805683`*^9, 3.836892368698834*^9, {3.836892557669964*^9, 
   3.836892559948064*^9}, {3.836894706716299*^9, 3.836894707794387*^9}, {
   3.83689631964188*^9, 3.8368963197667093`*^9}, {3.836896398184536*^9, 
   3.836896401739208*^9}, {3.836896481190959*^9, 3.8368964815854816`*^9}},
 CellLabel->
  "In[1230]:=",ExpressionUUID->"a1abf1f0-87bb-4817-88f6-7d9433cd3001"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.44628`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.83688661639824*^9, 3.8368866356975327`*^9}, {
   3.836892376665914*^9, 3.8368924026181173`*^9}, {3.83689256093336*^9, 
   3.8368925922884607`*^9}, {3.8368947195217333`*^9, 3.83689477898918*^9}, 
   3.836896262326293*^9, {3.8368963027863626`*^9, 3.836896340760201*^9}, {
   3.836896384476025*^9, 3.836896428547127*^9}, {3.836896483021419*^9, 
   3.836896525820106*^9}},
 CellLabel->
  "Out[1230]=",ExpressionUUID->"39820887-d29f-4659-bec9-ccab87f860eb"]
}, Open  ]],

Cell["\<\
We can convert these coefficients back to polynomials using the function \
below.\
\>", "Text",
 CellChangeTimes->{{3.836891784672113*^9, 3.836891812556869*^9}, {
  3.836892482140154*^9, 3.836892514417144*^9}, {3.836894869937314*^9, 
  3.8368948712137003`*^9}, {3.836900722424286*^9, 
  3.836900741927635*^9}},ExpressionUUID->"09374b96-db2d-4e21-a302-\
a666b61fab21"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"poly", "[", 
    RowBox[{
     RowBox[{"coefs_", "?", "VectorQ"}], ",", "x_"}], "]"}], ":=", 
   RowBox[{"coefs", ".", 
    RowBox[{"x", "^", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Length", "@", "coefs"}], "-", "1"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"poly", "[", 
    RowBox[{
     RowBox[{"coefs_", "?", "VectorQ"}], ",", "0"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"coefs", "!=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"coefs", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"poly", "[", 
    RowBox[{
     RowBox[{"table_", "/;", 
      RowBox[{"MatrixQ", "[", 
       RowBox[{"table", ",", "VectorQ"}], "]"}]}], ",", "x_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"poly", "[", 
       RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", "table", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836900352713779*^9, 3.836900373882008*^9}, {
  3.8369004045859613`*^9, 3.836900411703336*^9}, {3.8369005176436987`*^9, 
  3.836900534176497*^9}, {3.8369008475647182`*^9, 3.836900877573984*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"0bf42695-15cb-47c2-93aa-32c3ff21c570"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"poly", "[", 
   RowBox[{
    RowBox[{"densoverlaps", "[", 
     RowBox[{"3", ",", "1"}], "]"}], ",", "x"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.836900886134009*^9, 3.8369008945360394`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"e3fd9831-a3a4-4754-b09f-2cc70590bd01"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.`", " ", "x"}], "-", 
       RowBox[{"3.`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["x", "3"]}]}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.`", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"2.0000000000000004`", " ", 
        SuperscriptBox["x", "3"]}]}], 
      RowBox[{"2.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.9999999999999998`", " ", 
        SuperscriptBox["x", "3"]}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.`", " ", "x"}], "-", 
       RowBox[{"3.`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["x", "3"]}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.`", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"4.`", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"1.5`", " ", 
        SuperscriptBox["x", "4"]}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.`", " ", "x"}], "-", 
       RowBox[{"0.2500000000000001`", " ", 
        SuperscriptBox["x", "4"]}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.`", " ", "x"}], "-", 
       RowBox[{"1.5`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["x", "4"]}]}]},
     {
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.`", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"2.0000000000000004`", " ", 
        SuperscriptBox["x", "3"]}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.`", " ", "x"}], "-", 
       RowBox[{"0.2500000000000001`", " ", 
        SuperscriptBox["x", "4"]}]}], 
      RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox["x", "3"]}], "-", 
       RowBox[{"3.`", " ", 
        SuperscriptBox["x", "4"]}]}], 
      RowBox[{"0.75`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5`", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"0.2500000000000001`", " ", 
        SuperscriptBox["x", "4"]}]}]},
     {
      RowBox[{"2.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.9999999999999998`", " ", 
        SuperscriptBox["x", "3"]}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.`", " ", "x"}], "-", 
       RowBox[{"1.5`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["x", "4"]}]}], 
      RowBox[{"0.75`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5`", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"0.2500000000000001`", " ", 
        SuperscriptBox["x", "4"]}]}], 
      RowBox[{"1.5`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5`", " ", 
        SuperscriptBox["x", "4"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.83690089519324*^9, 3.837060801922697*^9},
 CellLabel->
  "Out[176]//MatrixForm=",ExpressionUUID->"eecd32ee-3ec5-4b49-86b7-\
24050946740d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Field operator", "Section",
 CellChangeTimes->{{3.836888820813587*^9, 3.836888822757608*^9}, {
  3.836891965268283*^9, 3.836891966942079*^9}, {3.836892677069395*^9, 
  3.836892678226654*^9}, {3.836896624133544*^9, 3.8368966288366747`*^9}, {
  3.836896659375601*^9, 
  3.83689666176623*^9}},ExpressionUUID->"4fcf7749-d8ea-4165-98be-\
1c91f75d9be4"],

Cell[TextData[{
 "To calculate the single-particle correlations and the discontinuity, we \
store the field operator in the local basis.  As derived in Eq. (S21) of the \
supplement, the matrix elements are polynomials in x.  Below is a routine to \
calculate these polynomial coefficients between two monomials of size ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9675b06f-beb9-41c4-a231-dfb07ed394b8"],
 " and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "52e5218e-19fa-43da-ba8c-782e9518b5d3"],
 "."
}], "Text",
 CellChangeTimes->{{3.836892766850086*^9, 3.836892823851519*^9}, {
  3.8368929104988422`*^9, 3.8368929671826344`*^9}, {3.836893287792245*^9, 
  3.836893336138455*^9}, {3.836893433452733*^9, 3.83689347324585*^9}, {
  3.836896674701008*^9, 3.836896731621203*^9}, {3.8368967627884912`*^9, 
  3.836896783366096*^9}, {3.836940354761683*^9, 
  3.836940357730979*^9}},ExpressionUUID->"331b567b-0eaf-413a-88d3-\
3caa1f691d4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"psicoefs", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"smallmon", ",", "_Integer", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bigmon", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"smallermon", " ", "has", " ", "size", " ", "n"}], "-", "1"}], 
      ",", " ", 
      RowBox[{"biggermon", " ", "has", " ", "size", " ", "n"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"suml", "=", 
         RowBox[{"smallmon", "+", 
          RowBox[{"Most", "[", "bigmon", "]"}]}]}], ",", 
        RowBox[{"sumr", "=", 
         RowBox[{"smallmon", "+", 
          RowBox[{"Rest", "[", "bigmon", "]"}]}]}], ",", 
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "bigmon", "]"}]}], ",", "powers", ",", 
        "coefs", ",", "phases", ",", "leftint", ",", "rightint", ",", 
        "middleint", ",", 
        RowBox[{"partialsums", "=", 
         RowBox[{"{", 
          RowBox[{"-", "1."}], "}"}]}], ",", "result", ",", "scale"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"powers", "=", 
        RowBox[{"Accumulate", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"bigmon", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
           RowBox[{"sumr", "+", "1"}]}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "powers", " ", "of", " ", "x", " ", "with", " ", "nonzero", " ", 
         "coefficients"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0.", ",", 
          RowBox[{"1", "+", 
           RowBox[{"powers", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "list", " ", "of", " ", "coefficients", " ", "to", " ", "be", " ", 
         "updated"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"phases", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1."}], ")"}], "^", 
         RowBox[{"Range", "[", "n", "]"}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "signs", " ", "originating", " ", "from", " ", "the", " ", "definite",
          " ", 
         RowBox[{"integrals", " ", "--"}], " ", "see", " ", 
         RowBox[{"Eq", ".", 
          RowBox[{"(", "S23", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"leftint", "=", 
        RowBox[{"phases", "*", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "1.", "}"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"monint", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"suml", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], ";", 
       " ", 
       RowBox[{"(*", 
        RowBox[{
        "integrating", " ", "over", " ", "all", " ", "particles", " ", "to", 
         " ", "the", " ", 
         RowBox[{"left", " ", "--"}], " ", 
         SubscriptBox["\[ScriptCapitalI]", "l"], " ", "in", " ", 
         RowBox[{"Eq", ".", 
          RowBox[{"(", "S21", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"rightint", "=", 
        RowBox[{"phases", "*", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"monint", "@", 
              RowBox[{"Drop", "[", 
               RowBox[{"sumr", ",", "j"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "0", ",", 
               RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "1.", "}"}]}], "]"}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"x", "-", 
         RowBox[{"independent", " ", "part", " ", "of", " ", 
          SubscriptBox["\[ScriptCapitalI]", "r"], " ", "in", " ", 
          RowBox[{"Eq", ".", 
           RowBox[{
            RowBox[{"(", "S21", ")"}], " ", "--"}]}], " ", "see", " ", 
          RowBox[{"Eq", ".", 
           RowBox[{"(", "S23", ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"partialsums", ",", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"leftint", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "*", 
                RowBox[{"monint", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"sumr", ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", "i", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "j"}], "}"}]}], "]"}], "+", 
             RowBox[{"leftint", "[", 
              RowBox[{"[", 
               RowBox[{"j", "+", "1"}], "]"}], "]"}]}]}], "]"}], ";"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "nonzero", " ", "coefficients", " ", "of", " ", "different", " ", 
           "powers", " ", "of", " ", "x", " ", "originating", " ", "from", 
           " ", 
           SubscriptBox["\[ScriptCapitalI]", "r"], " ", "in", " ", 
           RowBox[{"Eq", ".", 
            RowBox[{
             RowBox[{"(", "S21", ")"}], " ", "--"}]}], " ", "see", " ", 
           RowBox[{"Eq", ".", 
            RowBox[{"(", "S23", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"coefs", "=", 
        RowBox[{"partialsums", "*", "rightint"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"multiply", " ", "by", " ", "the", " ", "x"}], "-", 
         RowBox[{"independent", " ", "part"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"scale", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"N", "@", "n"}], "]"}], "*", 
         RowBox[{"Gamma", "[", 
          RowBox[{"N", "@", "n"}], "]"}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"symmetrization", " ", "factor"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"1", "+", 
             RowBox[{"powers", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], "=", 
          RowBox[{"scale", "*", 
           RowBox[{"coefs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"update", " ", "the", " ", "nonzero", " ", "coefficients"}], 
        "*)"}], "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
     "]"}], ",", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}], ",", 
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8368968479714947`*^9, 3.8368970055879927`*^9}, {
  3.836987136719558*^9, 3.8369871418153687`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"8a02fc08-d98b-4fe7-a8fc-17cc64090733"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"smallmon", ",", "bigmon"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"suml", "=", 
                    RowBox[{"smallmon", "+", 
                    RowBox[{"Most", "[", "bigmon", "]"}]}]}], ",", 
                    RowBox[{"sumr", "=", 
                    RowBox[{"smallmon", "+", 
                    RowBox[{"Rest", "[", "bigmon", "]"}]}]}], ",", 
                    RowBox[{"n", "=", 
                    RowBox[{"Length", "[", "bigmon", "]"}]}], ",", "powers", 
                    ",", "coefs", ",", "phases", ",", "leftint", ",", 
                    "rightint", ",", "middleint", ",", 
                    RowBox[{"partialsums", "=", 
                    RowBox[{"{", 
                    RowBox[{"-", "1.`"}], "}"}]}], ",", "result", ",", 
                    "scale"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"powers", "=", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"bigmon", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"sumr", "+", "1"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"result", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0.`", ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"powers", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"phases", "=", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1.`"}], ")"}], 
                    RowBox[{"Range", "[", "n", "]"}]]}], ";", 
                    RowBox[{"leftint", "=", 
                    RowBox[{"phases", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1.`", "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"monint", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"suml", ",", "i"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
                    ";", 
                    RowBox[{"rightint", "=", 
                    RowBox[{"phases", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"monint", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"sumr", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", 
                    RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "1.`", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"partialsums", ",", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "i", "j"], 
                    RowBox[{
                    
                    RowBox[{"leftint", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"monint", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"sumr", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "i", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}]}], "+", 
                    RowBox[{"leftint", "\[LeftDoubleBracket]", 
                    RowBox[{"j", "+", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    "]"}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ";", 
                    RowBox[{"coefs", "=", 
                    RowBox[{"partialsums", " ", "rightint"}]}], ";", 
                    RowBox[{"scale", "=", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"N", "[", "n", "]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"N", "[", "n", "]"}], "]"}]}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"result", "\[LeftDoubleBracket]", 
                    RowBox[{"1", "+", 
                    
                    RowBox[{"powers", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"scale", " ", 
                    
                    RowBox[{"coefs", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", 
                    "result"}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Integer], 1}, {
     Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 1}, {3, 1, 
   6}}, {{0, {2, 0, 1}}, {{-1.}, {3, 1, 5}}, {{1.}, {3, 1, 9}}, {-1., {3, 0, 
     1}}, {-2, {2, 0, 10}}, {-1, {2, 0, 0}}, {1, {2, 0, 2}}, {3, {2, 0, 8}}, {
    0., {3, 0, 0}}}, {0, 12, 8, 0, 
   15}, {{42, "Drop", 2, 1, 1, 2, 0, 1, 2, 0, 0, 2, 1, 7}, {44, 0, 7, 8}, {
    42, "Drop", 2, 1, 1, 2, 0, 1, 2, 0, 2, 2, 1, 7}, {44, 0, 7, 2}, {33, 1, 
    3}, {42, "CopyTensor", 3, 1, 5, 3, 1, 7}, {38, 1, 0, 2, 0, 6}, {34, 1, 1, 
    6, 2, 4}, {41, 257, 2, 0, 2, 2, 1, 2, 2, 1, 3}, {
    42, "Join", 2, 1, 4, 2, 1, 3, 2, 1, 6}, {
    42, "Accumulate", 2, 1, 6, 2, 0, 1, 2, 1, 4}, {38, 4, 0, 0, 0, 6}, {12, 2,
     6, 4}, {47, ConstantArray, 3, 0, 0, 2, 0, 4, 3, 1, 6}, {6, 3, 4}, {6, 1, 
    6}, {35, 4, 2, 3}, {6, 1, 5}, {3, 2}, {36, 6, 5, 2, 3}, {4, 5, 4, -1}, {
    41, 263, 3, 0, 1, 2, 1, 3, 3, 1, 10}, {12, 3, 0, 5}, {6, 1, 7}, {35, 5, 3,
     3}, {6, 1, 9}, {3, 4}, {
    42, "Take", 2, 1, 8, 2, 0, 1, 2, 0, 9, 2, 1, 11}, {
    47, $CellContext`monint, 2, 1, 11, 3, 0, 4}, {36, 7, 4, 3, 3}, {4, 9, 
    5, -3}, {42, "Join", 3, 1, 9, 3, 1, 3, 3, 1, 11}, {45, 10, 11, 3}, {12, 3,
     10, 7}, {6, 1, 5}, {41, 258, 2, 0, 7, 2, 0, 0, 2, 0, 9}, {35, 9, 3, 
    11}, {6, 0, 6}, {3, 4}, {
    42, "Drop", 2, 1, 2, 2, 0, 1, 2, 0, 6, 2, 1, 12}, {
    47, $CellContext`monint, 2, 1, 12, 3, 0, 2}, {36, 5, 2, 3, 11}, {4, 6, 
    7, -3}, {42, "Join", 3, 1, 11, 3, 1, 9, 3, 1, 12}, {45, 10, 12, 11}, {12, 
    3, 0, 9}, {6, 1, 7}, {3, 20}, {7, 0, 6}, {6, 7, 6}, {6, 1, 11}, {3, 8}, {
    38, 3, 0, 11, 0, 5}, {34, 1, 3, 7, 11, 0, 2, 13}, {
    42, "Take", 2, 1, 2, 2, 0, 2, 2, 1, 13, 2, 1, 12}, {
    47, $CellContext`monint, 2, 1, 12, 3, 0, 7}, {16, 5, 7, 5}, {13, 6, 5, 
    7}, {7, 7, 6}, {4, 11, 6, -7}, {12, 7, 2, 6}, {38, 3, 0, 6, 0, 4}, {13, 6,
     4, 6}, {34, 1, 1, 0, 2, 12}, {34, 1, 1, 12, 0, 13}, {
    42, "Insert", 3, 1, 7, -3, 0, 6, 2, 2, 13, 3, 1, 14}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 7}, {4, 7, 9, -19}, {45, 7, 11, 14}, {
    10, 3, 6}, {40, 57, 3, 0, 6, 3, 0, 4}, {10, 3, 6}, {40, 76, 3, 0, 6, 3, 0,
     3}, {16, 4, 3, 4}, {6, 3, 4}, {6, 1, 5}, {3, 6}, {38, 4, 0, 5, 0, 9}, {
    12, 2, 9, 7}, {38, 14, 0, 5, 0, 3}, {16, 4, 3, 6}, {39, 6, 0, 7, 0, 6}, {
    4, 5, 4, -5}, {1}}, 
   Function[{$CellContext`smallmon, $CellContext`bigmon}, 
    Block[{$CellContext`suml = $CellContext`smallmon + 
       Most[$CellContext`bigmon], $CellContext`sumr = $CellContext`smallmon + 
       Rest[$CellContext`bigmon], $CellContext`n = 
      Length[$CellContext`bigmon], $CellContext`powers, $CellContext`coefs, \
$CellContext`phases, $CellContext`leftint, $CellContext`rightint, \
$CellContext`middleint, $CellContext`partialsums = {-1.}, \
$CellContext`result, $CellContext`scale}, $CellContext`powers = Accumulate[
        Join[{
          Part[$CellContext`bigmon, 1]}, $CellContext`sumr + 
         1]]; $CellContext`result = 
      ConstantArray[
       0., 1 + Part[$CellContext`powers, -1]]; $CellContext`phases = (-1.)^
       Range[$CellContext`n]; $CellContext`leftint = $CellContext`phases 
       Join[{1.}, 
         Table[
          $CellContext`monint[
           
           Take[$CellContext`suml, $CellContext`i]], {$CellContext`i, \
$CellContext`n - 1}]]; $CellContext`rightint = $CellContext`phases Join[
         Table[
          $CellContext`monint[
           Drop[$CellContext`sumr, $CellContext`j]], {$CellContext`j, 
           0, $CellContext`n - 2}], {1.}]; 
     Do[AppendTo[$CellContext`partialsums, 
         Sum[Part[$CellContext`leftint, $CellContext`i] $CellContext`monint[
             
             Take[$CellContext`sumr, {$CellContext`j, $CellContext`i, -1}]], \
{$CellContext`i, $CellContext`j}] + 
         Part[$CellContext`leftint, $CellContext`j + 1]]; 
       Null, {$CellContext`j, $CellContext`n - 
        1}]; $CellContext`coefs = $CellContext`partialsums \
$CellContext`rightint; $CellContext`scale = Sqrt[
         N[$CellContext`n]] Gamma[
         N[$CellContext`n]]; 
     Do[Part[$CellContext`result, 1 + 
         Part[$CellContext`powers, $CellContext`i]] = $CellContext`scale 
        Part[$CellContext`coefs, $CellContext`i], {$CellContext`i, \
$CellContext`n}]; $CellContext`result]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction2.dylib", 
    "compiledFunction2", {{Integer, 1, "Constant"}, {
     Integer, 1, "Constant"}}, {Real, 1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.836897010536254*^9, 3.836987144833712*^9, 
  3.837059948656705*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"852afe4f-692c-43db-9988-7a04f0c00658"]
}, Open  ]],

Cell[TextData[{
 "Here is an integral between a flat 21-particle state {0,0,...,0} and a \
linear 22-particle state {1,1,...,1}, for which the result should be  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", 
    RowBox[{
     RowBox[{"Sqrt", "[", "n", "]"}], "/", 
     SuperscriptBox["2", 
      RowBox[{"n", "-", "1"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6015678d-3cb0-4e4b-a34d-7454200983fb"],
 "."
}], "Text",
 CellChangeTimes->{{3.792832689742922*^9, 3.792832708712143*^9}, {
  3.7928438423840857`*^9, 3.7928438502112103`*^9}, {3.836882639305966*^9, 
  3.836882661608306*^9}, {3.836882781196698*^9, 3.836882876297154*^9}, {
  3.8368944295038*^9, 3.8368944765645037`*^9}, {3.836897325348003*^9, 
  3.836897399995809*^9}},ExpressionUUID->"649a5812-ccd4-434d-ba4c-\
ffbb149815a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", "22", "]"}], "/", 
    RowBox[{"2", "^", "21."}]}], ",", 
   RowBox[{
    RowBox[{"psicoefs", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", "21"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"1", ",", 
        RowBox[{"{", "22", "}"}]}], "]"}]}], "]"}], "//", 
    "AbsoluteTiming"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8368974139137173`*^9, 3.8368974250591288`*^9}},
 CellLabel->
  "In[2893]:=",ExpressionUUID->"9ef9d160-736a-4617-9cd8-f25109ed6d51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.2365645217053555`*^-6", ",", 
   RowBox[{"{", 
    RowBox[{"0.000177`", ",", 
     RowBox[{"{", 
      RowBox[{
      "0.`", ",", "2.236564521705355`*^-6", ",", "0.`", ",", "0.`", ",", 
       "0.`", ",", "0.`", ",", "0.`", ",", "4.953755428973786`*^-19", ",", 
       "0.`", ",", "2.2291899430382036`*^-18", ",", "0.`", ",", 
       "9.474057257912365`*^-18", ",", "0.`", ",", 
       RowBox[{"-", "1.894811451582473`*^-17"}], ",", "0.`", ",", 
       "7.105542943434274`*^-17", ",", "0.`", ",", "4.600839055873692`*^-15", 
       ",", "0.`", ",", "3.637149794170419`*^-15", ",", "0.`", ",", 
       "3.81900728387894`*^-14", ",", "0.`", ",", "3.7508107252382444`*^-15", 
       ",", "0.`", ",", 
       RowBox[{"-", "1.3440405098770376`*^-13"}], ",", "0.`", ",", 
       "4.7544456263273837`*^-14", ",", "0.`", ",", "4.761771428525116`*^-16",
        ",", "0.`", ",", "1.1522113269118704`*^-14", ",", "0.`", ",", 
       RowBox[{"-", "2.0486205216146902`*^-14"}], ",", "0.`", ",", 
       RowBox[{"-", "4.398164107529339`*^-15"}], ",", "0.`", ",", 
       RowBox[{"-", "3.9366103997889357`*^-14"}], ",", "0.`", ",", 
       "6.513266485297605`*^-16", ",", "0.`", ",", 
       RowBox[{"-", "1.263821499812232`*^-16"}], ",", "0.`", ",", 
       RowBox[{"-", "3.6080202943194203`*^-17"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.836897430408824*^9, 3.8368974430455923`*^9}, {
  3.836987093802126*^9, 3.836987095959937*^9}, {3.836987147474019*^9, 
  3.836987156787764*^9}},
 CellLabel->
  "Out[2893]=",ExpressionUUID->"608443cc-2917-4275-b04e-1ece4892e25d"]
}, Open  ]],

Cell[TextData[{
 "Below is a routine for generating the full matrix between monomials of size \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "48548627-61dc-4545-b659-6b1a8c6284a4"],
 " and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8f637d5c-174f-4313-aab7-fd49138db2e0"],
 ". "
}], "Text",
 CellChangeTimes->{{3.836891784672113*^9, 3.836891812556869*^9}, {
   3.836892482140154*^9, 3.836892514417144*^9}, {3.836894869937314*^9, 
   3.8368948712137003`*^9}, {3.8368974931337547`*^9, 3.836897512199895*^9}, {
   3.836897546473979*^9, 3.836897554256534*^9}, {3.836898123409967*^9, 
   3.836898140624954*^9}, 
   3.836918315854755*^9},ExpressionUUID->"ed91de80-47d9-4b26-b69f-\
25c3fcc28df3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"psioverlaps", "[", 
    RowBox[{"n_Integer", ",", "dmaxSmall_Integer", ",", "dmaxBig_Integer"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"smallmons", "=", 
        RowBox[{"allmonomials", "[", 
         RowBox[{
          RowBox[{"n", "-", "1"}], ",", "dmaxSmall"}], "]"}]}], ",", 
       RowBox[{"bigmons", "=", 
        RowBox[{"allmonomials", "[", 
         RowBox[{"n", ",", "dmaxBig"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"Outer", "[", 
      RowBox[{"psicoefs", ",", "smallmons", ",", "bigmons", ",", "1"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.836897584154874*^9, 3.836897605156002*^9}, {
   3.8368977204931507`*^9, 3.8368977498512993`*^9}, 3.836897799280922*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"7ac81f7f-5308-49a8-bf59-5dde7d3cf89f"],

Cell[TextData[{
 "Here is an example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a18f864e-4303-4ce4-91a5-ae0b80e3f977"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "48ad2f2c-1c32-432a-b765-3b88b21f6d93"],
 "."
}], "Text",
 CellChangeTimes->{{3.836885270604451*^9, 3.836885312950878*^9}, {
  3.836894686926239*^9, 
  3.836894688040764*^9}},ExpressionUUID->"e708b7a7-9360-43ec-9cac-\
6c0d2ffda456"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"psioverlaps", "[", 
   RowBox[{"3", ",", "1", ",", "1"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8368946318362513`*^9, 3.8368946728995523`*^9}, {
  3.836894794502265*^9, 3.836894795261984*^9}, {3.83689762380811*^9, 
  3.8368976245759497`*^9}, {3.836897806210697*^9, 3.836897916731266*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"74e6344f-7169-4bb0-92ad-420c0b6cb668"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"1.7320508075688772`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.7320508075688772`", ",", 
        RowBox[{"-", "1.7320508075688772`"}], ",", "0.5773502691896257`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.5773502691896257`", ",", "0.`", ",", "1.7320508075688772`", ",", 
        RowBox[{"-", "1.1547005383792517`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "1.1547005383792515`", ",", "0.`", ",", "0.`", ",", 
        "0.5773502691896256`"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.5773502691896257`", ",", "0.`", ",", "0.`", ",", 
        RowBox[{"-", "9.614813431917819`*^-17"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.5773502691896257`", ",", "0.`", ",", 
        RowBox[{"-", "0.5773502691896258`"}], ",", "0.28867513459481287`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.28867513459481287`", ",", "0.`", ",", "0.`", ",", 
        "0.5773502691896258`", ",", 
        RowBox[{"-", "0.4330127018922193`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.4330127018922193`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
        "0.1443375672974064`"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1.1547005383792515`", ",", "0.`", ",", "0.`", ",", 
        RowBox[{"-", "1.9229626863835638`*^-16"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.1547005383792515`", ",", 
        RowBox[{"-", "0.8660254037844386`"}], ",", "0.`", ",", 
        "0.1443375672974064`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.4330127018922193`", ",", "0.`", ",", "0.8660254037844386`", ",", 
        "0.`", ",", 
        RowBox[{"-", "0.4330127018922193`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.8660254037844386`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
        "0.2886751345948128`"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.836894635016095*^9, 3.836894673497285*^9}, 
   3.8368947511089478`*^9, 3.8368947958699512`*^9, 3.836896545882577*^9, 
   3.836897625294134*^9, {3.836897813945219*^9, 3.836897917352438*^9}, 
   3.836898028715354*^9, 3.8369871787920837`*^9, 3.837059956728148*^9},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"a8e3026a-f8ed-4ff6-9e3c-\
adf1465199f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"psioverlaps", "[", 
    RowBox[{"10", ",", "3", ",", "3"}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.836897975269844*^9, 3.836897975550262*^9}},
 CellLabel->
  "In[2896]:=",ExpressionUUID->"f04f7a26-2932-4f74-aad6-c6bee4b8dcc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.251335`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.836897978980983*^9, 3.8368980048270197`*^9}, 
   3.836898035815456*^9, {3.836987111185313*^9, 3.8369871311117163`*^9}, {
   3.83698716525554*^9, 3.836987174350095*^9}},
 CellLabel->
  "Out[2896]=",ExpressionUUID->"d1807eba-6974-4a23-9d6f-1d5996d77881"]
}, Open  ]],

Cell[TextData[{
 "The field operators at the left and right boundaries can be found by \
converting these coefficients to polynomials in x and setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "31c03de7-b24f-4ede-855f-07a941d9f070"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f48a2638-0ea1-43d0-93bd-92871b737eeb"],
 ", respectively."
}], "Text",
 CellChangeTimes->{{3.836891784672113*^9, 3.836891812556869*^9}, {
  3.836892482140154*^9, 3.836892514417144*^9}, {3.836894869937314*^9, 
  3.8368948712137003`*^9}, {3.836900722424286*^9, 3.836900741927635*^9}, {
  3.836901015103698*^9, 3.836901068086308*^9}, {3.836901149985601*^9, 
  3.836901159014167*^9}},ExpressionUUID->"65bb4366-04a4-48e3-9354-\
d75b46de86e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "@", 
    RowBox[{"poly", "[", 
     RowBox[{
      RowBox[{"psioverlaps", "[", 
       RowBox[{"3", ",", "1", ",", "1"}], "]"}], ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836901081865986*^9, 3.836901127198163*^9}, {
  3.836901198337365*^9, 3.83690120491626*^9}},
 CellLabel->
  "In[1389]:=",ExpressionUUID->"8744031b-62d2-454c-bc87-14de8af4a3b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.7320508075688772`", "0.`", "0.5773502691896257`", 
        "1.1547005383792515`"},
       {"0.5773502691896257`", "0.`", "0.28867513459481287`", 
        "0.4330127018922193`"},
       {"1.1547005383792515`", "0.`", "0.4330127018922193`", 
        "0.8660254037844386`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.7320508075688772`", "0.5773502691896257`", "1.1547005383792512`", 
        "1.7320508075688772`"},
       {"0.5773502691896256`", "0.28867513459481275`", "0.4330127018922194`", 
        "0.5773502691896257`"},
       {"1.1547005383792512`", "0.4330127018922193`", "0.8660254037844387`", 
        "1.1547005383792515`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8369010854160433`*^9, 3.836901127852043*^9}, 
   3.83690116113449*^9, {3.836901201798172*^9, 3.8369012055746927`*^9}},
 CellLabel->
  "Out[1389]=",ExpressionUUID->"f1eea88d-9480-43e5-b38f-4cd585f6a229"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Potential energy", "Section",
 CellChangeTimes->{{3.8369203894248047`*^9, 
  3.836920391370571*^9}},ExpressionUUID->"6823d716-217c-4edc-a579-\
2d5f8923e2cb"],

Cell[TextData[{
 "The matrix elements of the potential energy can be found by integrating the \
elements of the density times the potential V(x) over ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dab43452-d695-434e-8d7c-dd7421e2fdfd"],
 "  As the density is a polynomial in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ","}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ace82c53-c121-4bec-ba5a-1947306db25a"],
 " we calculate the integer moments of V(x) over different segments.  As \
shown in Eq. (S30) of the supplement, for  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"V", "(", "x", ")"}], "=", 
     RowBox[{
      SubscriptBox["V", "0"], 
      RowBox[{
       SuperscriptBox["cos", "2"], "(", 
       RowBox[{"k", " ", "x"}], ")"}]}]}], ","}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a023e25d-7ce8-4079-8b09-9cca2cc8a824"],
 " these are given by incomplete gamma functions."
}], "Text",
 CellChangeTimes->{{3.836940449717572*^9, 3.836940483442027*^9}, {
  3.836940515608924*^9, 3.836940626927544*^9}, {3.836940696807667*^9, 
  3.8369407550269203`*^9}, {3.8369482319645367`*^9, 3.836948232794971*^9}, {
  3.8369848793087873`*^9, 3.8369848915091457`*^9}, {3.836984946606278*^9, 
  3.836984993795022*^9}},ExpressionUUID->"aeec8bf1-4bb0-4c65-8cc3-\
8d849a0f08a1"],

Cell[TextData[{
 "We use a series expansion to calculate the lower incomplete gamma function, \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Gamma]", "(", 
     RowBox[{"p", ",", "z"}], ")"}], ":=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "z"], 
      RowBox[{"dt", " ", 
       SuperscriptBox["t", 
        RowBox[{"p", "-", "1"}]], 
       SuperscriptBox["e", 
        RowBox[{"-", "t"}]]}]}], "=", 
     RowBox[{
      SuperscriptBox["e", 
       RowBox[{"-", "z"}]], 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"k", "=", "0"}], "\[Infinity]"], 
       RowBox[{
        SuperscriptBox["z", 
         RowBox[{"p", "+", "k"}]], "/", 
        SubscriptBox[
         RowBox[{"(", "p", ")"}], 
         RowBox[{"k", "+", "1"}]]}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b1a6b490-263b-47d9-a3a3-186d644a8719"],
 ",  where  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", "p", ")"}], 
     RowBox[{"k", "+", "1"}]], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "(", 
       RowBox[{"p", "+", "1"}], ")"}], "..."}], 
     RowBox[{"(", 
      RowBox[{"p", "+", "k"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "25a61405-cb49-4a5b-82c7-74babfb636f1"],
 "."
}], "Text",
 CellChangeTimes->{{3.8369476957911367`*^9, 3.836947717773498*^9}, {
  3.836947765476981*^9, 3.836947765613311*^9}, {3.836947800566567*^9, 
  3.8369480607899857`*^9}},ExpressionUUID->"b18706a1-0b72-44a6-b886-\
41fa9233f032"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"incgamma", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", "_Integer"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "_Complex"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "also", " ", "valid", " ", "for", " ", "complex", " ", "p", " ", "with",
        " ", "Re", 
       RowBox[{"(", "p", ")"}]}], ">", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sum", "=", 
         RowBox[{"1.", "+", 
          RowBox[{"0.", "*", "I"}]}]}], ",", "residue", ",", 
        RowBox[{"k", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"residue", "=", "sum"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"residue", "/", "sum"}], "]"}], ">", 
          RowBox[{"10", "^", 
           RowBox[{"-", "15."}]}]}], ",", " ", 
         RowBox[{"(*", 
          RowBox[{
          "stop", " ", "when", " ", "this", " ", "precision", " ", "is", " ", 
           "reached"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"residue", "*=", 
           RowBox[{"z", "/", 
            RowBox[{"(", 
             RowBox[{"p", "+", "k"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sum", "+=", "residue"}], ";", "\[IndentingNewLine]", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", "z"}], "]"}], "*", 
        RowBox[{"z", "^", "p"}], "*", 
        RowBox[{"sum", "/", "p"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}], ",", 
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.836947621108801*^9, 3.836947633489911*^9}, {
  3.836948086314988*^9, 3.836948121786016*^9}, {3.836948194017112*^9, 
  3.836948208600672*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"debeb458-8656-4677-a37d-21f919a067f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Complex"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Complex"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"p", ",", "z"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"sum", "=", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], ",", "residue",
                     ",", 
                    RowBox[{"k", "=", "1.`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"residue", "=", "sum"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    FractionBox["residue", "sum"], "]"}], ">", "1.`*^-15"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"residue", "*=", 
                    FractionBox["z", 
                    RowBox[{"p", "+", "k"}]]}], ";", 
                    RowBox[{"sum", "+=", "residue"}], ";", 
                    RowBox[{"k", "++"}]}]}], "]"}], ";", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "z"}], "]"}], " ", 
                    SuperscriptBox["z", "p"], " ", "sum"}], "p"]}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {
    Blank[Integer], 
    Blank[Complex]}, {{2, 0, 0}, {4, 0, 0}, {4, 0, 4}}, {{1., {3, 0, 0}}, {
     Complex[1., 0.], {4, 0, 1}}, {1.*^-15, {3, 0, 2}}, {1, {2, 0, 1}}, {
    0., {3, 0, 3}}}, {1, 2, 7, 9, 
   0}, {{8, 1, 3}, {7, 0, 4}, {8, 3, 5}, {40, 60, 4, 0, 3, 4, 0, 4}, {17, 5, 
    4, 6}, {40, 38, 4, 0, 6, 3, 0, 1}, {27, 7, 3, 1, 2, 0}, {2, 0, 15}, {10, 
    0, 1}, {13, 1, 4, 1}, {40, 60, 3, 0, 1, 3, 0, 5}, {11, 5, 3, 6}, {17, 0, 
    6, 4}, {17, 5, 4, 6}, {8, 6, 5}, {14, 3, 5, 6}, {8, 6, 3}, {7, 4, 5}, {10,
     1, 1}, {13, 5, 1, 6}, {7, 6, 4}, {3, -18}, {20, 0, 6}, {40, 32, 4, 0, 6, 
    4, 0, 4}, {41, 263, 4, 0, 0, 2, 0, 0, 4, 0, 6}, {10, 0, 5}, {40, 60, 3, 0,
     5, 3, 0, 6}, {11, 6, 3, 7}, {17, 3, 7, 8}, {17, 4, 6, 8, 4}, {1}}, 
   Function[{$CellContext`p, $CellContext`z}, 
    Block[{$CellContext`sum = 
      Complex[1., 0.], $CellContext`residue, $CellContext`k = 
      1.}, $CellContext`residue = $CellContext`sum; 
     While[Abs[$CellContext`residue/$CellContext`sum] > 1.*^-15, 
       TimesBy[$CellContext`residue, $CellContext`z/($CellContext`p + \
$CellContext`k)]; AddTo[$CellContext`sum, $CellContext`residue]; 
       Increment[$CellContext`k]]; (
       Exp[-$CellContext`z] $CellContext`z^$CellContext`p) \
($CellContext`sum/$CellContext`p)]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction8.dylib", 
    "compiledFunction8", {{Integer, 0, "Constant"}, {Complex, 0, "Constant"}},
     Complex]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.836948138569941*^9, 3.8369481411899157`*^9}, 
   3.836948212024088*^9, 3.8369492305590057`*^9, 3.837065843882493*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"69b0d2f4-9b33-42ca-8958-2580e1e894d1"]
}, Open  ]],

Cell["Mathematica\[CloseCurlyQuote]s built-in function does not compile.", \
"Text",
 CellChangeTimes->{{3.836949410493209*^9, 
  3.836949423037125*^9}},ExpressionUUID->"31caa4e6-e316-4e0a-80a5-\
70930c56c439"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"incgamma", "[", 
     RowBox[{"20", ",", 
      RowBox[{
       RowBox[{"-", "1.5"}], "*", "I"}]}], "]"}], "//", "AbsoluteTiming"}], 
   ",", 
   RowBox[{
    RowBox[{"Gamma", "[", 
     RowBox[{"20", ",", "0", ",", 
      RowBox[{
       RowBox[{"-", "1.5"}], "*", "I"}]}], "]"}], "//", "AbsoluteTiming"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.836949312792532*^9, 3.8369493923932247`*^9}},
 CellLabel->
  "In[2651]:=",ExpressionUUID->"2e762f91-a50e-4900-a5fa-b379af9f677a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.000014`", ",", 
     RowBox[{"23.497611835396228`", "\[VeryThinSpace]", "+", 
      RowBox[{"164.20558588765977`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.000047`", ",", 
     RowBox[{"23.497611835396302`", "\[VeryThinSpace]", "+", 
      RowBox[{"164.20558588765988`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.836949326226048*^9, 3.8369493389011*^9}, {
  3.836949375052906*^9, 3.836949399054467*^9}},
 CellLabel->
  "Out[2651]=",ExpressionUUID->"63d91cda-7cc5-4300-8f79-90ce6de8d1d2"]
}, Open  ]],

Cell[TextData[{
 "For density = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sum]", "p"], 
    RowBox[{
     SubscriptBox["c", "p"], 
     SuperscriptBox["x", "p"]}]}], TraditionalForm]],ExpressionUUID->
  "67d590dd-3ee5-44ab-8353-3d36d035a23d"],
 ",  we calculate the potential energy PE = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sum]", "p"], 
     RowBox[{"2", 
      SubscriptBox["c", 
       RowBox[{"p", "-", "1"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "1"], 
       RowBox[{"dx", " ", 
        SuperscriptBox["x", 
         RowBox[{"p", "-", "1"}]], 
        RowBox[{
         SuperscriptBox["cos", "2"], "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "x"}], "+", "b"}], ")"}], "/", "2"}], 
         "]"}]}]}]}]}], " ", "="}], TraditionalForm]],ExpressionUUID->
  "3b5712c5-8ad2-4fc1-8666-b4d38c348f8d"],
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sum]", "p"], 
    RowBox[{
     SubscriptBox["c", 
      RowBox[{"p", "-", "1"}]], "(", 
     RowBox[{
      RowBox[{"1", "/", "p"}], "+", 
      RowBox[{
       SuperscriptBox["a", 
        RowBox[{"-", "p"}]], 
       RowBox[{"Re", "[", 
        RowBox[{
         SuperscriptBox["i", "k"], 
         SuperscriptBox["e", 
          RowBox[{"i", " ", "b"}]], 
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"p", ",", 
           RowBox[{
            RowBox[{"-", "i"}], " ", "a"}]}], ")"}]}], "]"}]}]}], ")"}]}], 
   TraditionalForm]],ExpressionUUID->"c90b96b6-580c-4f0b-8816-1477a5d5b09c"],
 " -- see Eq. (S30)."
}], "Text",
 CellChangeTimes->{{3.836948638062051*^9, 3.836948694421483*^9}, {
  3.836948738042255*^9, 3.836948790984269*^9}, {3.836948821177228*^9, 
  3.83694887671246*^9}, {3.836948906907886*^9, 
  3.836949104452799*^9}},ExpressionUUID->"95f2b771-5853-4ecf-b376-\
e0ce496ab9af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PE", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ncoefs", ",", "_Real", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "_Real"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "ncoefs", "]"}]}], ",", 
        RowBox[{"res", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ncoefs", "[", 
             RowBox[{"[", "p", "]"}], "]"}], "!=", "0"}], ",", 
           RowBox[{"res", "+=", 
            RowBox[{
             RowBox[{"ncoefs", "[", 
              RowBox[{"[", "p", "]"}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1.", "/", "p"}], "+", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{
                  RowBox[{"I", "^", "p"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{"I", "*", "b"}], "]"}], "*", 
                  RowBox[{"incgamma", "[", 
                   RowBox[{"p", ",", 
                    RowBox[{
                    RowBox[{"-", "I"}], "*", "a"}]}], "]"}]}], "]"}], "/", 
                RowBox[{"a", "^", "p"}]}]}], ")"}]}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"p", ",", "len"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "res"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RuntimeOptions\>\"", "\[Rule]", "\"\<Speed\>\""}], ",", 
    RowBox[{"\"\<CompilationTarget\>\"", "\[Rule]", "\"\<C\>\""}]}], "]"}]}]],
  "Input",
 CellChangeTimes->{{3.836937853463629*^9, 3.836937890762504*^9}, {
  3.83693795027343*^9, 3.836937970135683*^9}, {3.836938006560193*^9, 
  3.836938009791149*^9}, {3.836938383542862*^9, 3.836938408087412*^9}, {
  3.836938542416831*^9, 3.836938554806283*^9}, {3.8369386034750443`*^9, 
  3.836938619942157*^9}, {3.836947420753294*^9, 3.836947422598138*^9}, {
  3.836949194397593*^9, 3.8369492250165777`*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"c75f0f20-87bb-45a0-863f-3ab8fb05f758"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                    "_Real"}], "}"}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                    "_Real"}], "}"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"ncoefs", ",", "a", ",", "b"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"len", "=", 
                    RowBox[{"Length", "[", "ncoefs", "]"}]}], ",", 
                    RowBox[{"res", "=", "0.`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ncoefs", "\[LeftDoubleBracket]", "p", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "0"}], ",", 
                    RowBox[{"res", "+=", 
                    RowBox[{
                    
                    RowBox[{"ncoefs", "\[LeftDoubleBracket]", "p", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1.`", "p"], "+", 
                    FractionBox[
                    RowBox[{"Re", "[", 
                    RowBox[{
                    SuperscriptBox["\[ImaginaryI]", "p"], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[ImaginaryI]", " ", "b"}], "]"}], " ", 
                    RowBox[{"incgamma", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "a"}]}], "]"}]}], 
                    "]"}], 
                    SuperscriptBox["a", "p"]]}], ")"}]}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "len"}], "}"}]}], "]"}], ";", "res"}]}],
                     "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.3, 5464}, {{
     Blank[Real], 1}, 
    Blank[Real], 
    Blank[Real]}, {{3, 1, 0}, {3, 0, 0}, {3, 0, 1}, {3, 0, 
   3}}, {{0, {2, 0, 2}}, {1., {3, 0, 5}}, {
     Complex[0., 1.], {4, 0, 0}}, {
     Complex[0., -1.], {4, 0, 4}}, {0., {3, 0, 2}}}, {1, 5, 10, 6, 
   1}, {{33, 0, 0}, {7, 2, 3}, {6, 0, 1}, {6, 2, 4}, {3, 26}, {38, 0, 0, 4, 0,
     4}, {10, 2, 6}, {27, 8, 2, 4, 6, 0}, {2, 0, 22}, {38, 0, 0, 4, 0, 4}, {
    10, 4, 6}, {40, 60, 3, 0, 6, 3, 0, 7}, {16, 5, 7, 6}, {41, 263, 4, 0, 0, 
    2, 0, 4, 4, 0, 1}, {11, 1, 2, 2}, {17, 0, 2, 3}, {40, 32, 4, 0, 3, 4, 0, 
    2}, {11, 0, 2, 3}, {17, 4, 3, 5}, {
    47, $CellContext`incgamma, 2, 0, 4, 4, 0, 5, 4, 0, 3}, {17, 1, 2, 3, 1}, {
    40, 42, 4, 0, 1, 3, 0, 7}, {41, 263, 3, 0, 0, 2, 0, 4, 3, 0, 8}, {40, 60, 
    3, 0, 8, 3, 0, 9}, {16, 7, 9, 7}, {13, 6, 7, 6}, {16, 4, 6, 4}, {13, 3, 4,
     6}, {7, 6, 3}, {3, 1}, {4, 4, 1, -25}, {1}}, 
   Function[{$CellContext`ncoefs, $CellContext`a, $CellContext`b}, 
    Block[{$CellContext`len = Length[$CellContext`ncoefs], $CellContext`res = 
      0.}, Do[
       If[Part[$CellContext`ncoefs, $CellContext`p] != 0, 
        AddTo[$CellContext`res, 
         Part[$CellContext`ncoefs, $CellContext`p] (1./$CellContext`p + 
          Re[(Complex[0, 1]^$CellContext`p 
              Exp[Complex[
                 0, 1] $CellContext`b]) $CellContext`incgamma[$CellContext`p, 
               Complex[
                0, -1] $CellContext`a]]/$CellContext`a^$CellContext`p)]], \
{$CellContext`p, $CellContext`len}]; $CellContext`res]], Evaluate, 
   LibraryFunction[
   "/Users/Shovan/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/Shovans-MacBook-Pro-4-639/compiledFunction9.dylib", 
    "compiledFunction9", {{Real, 1, "Constant"}, {Real, 0, "Constant"}, {
     Real, 0, "Constant"}}, Real]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8369380117384777`*^9, {3.836938385223715*^9, 3.836938409554676*^9}, 
   3.8369385122490883`*^9, {3.83693854469066*^9, 3.836938556062171*^9}, {
   3.83693860566469*^9, 3.836938621460491*^9}, 3.836938672875053*^9, 
   3.8369474271145067`*^9, 3.836949470409384*^9, 3.837065848150128*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"7daa9829-4f30-43a3-b8e2-a4c839a24822"]
}, Open  ]],

Cell["\<\
We need to calculate PE for a symmetric matrix of density coefficients.  \
Below is a routine for that.  Note that {a,b} will vary with the segment.\
\>", "Text",
 CellChangeTimes->{{3.836949533617996*^9, 3.8369496574563923`*^9}, {
   3.83694972586755*^9, 3.836949726437365*^9}, 
   3.836950148357583*^9},ExpressionUUID->"01d1660d-76c9-4e52-bac7-\
20e78afe26fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"symPE", "[", 
   RowBox[{"matncoefs_", ",", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"makesym", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"PE", "[", 
      RowBox[{
       RowBox[{"matncoefs", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "a", ",", "b"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "matncoefs", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836938071543622*^9, 3.836938102150112*^9}, {
  3.836949840292541*^9, 3.8369498438843937`*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"835bf338-3837-4016-9c81-2160d27c7681"],

Cell[TextData[{
 "Here is an example for monomials with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "4859f44a-243d-4408-8e47-03c74d2a76a7"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "2."}], TraditionalForm]],ExpressionUUID->
  "d5ae92cd-0968-4be0-b179-fff215ad51a2"]
}], "Text",
 CellChangeTimes->{{3.836949730223678*^9, 3.8369497724377813`*^9}, {
  3.8369499302616987`*^9, 
  3.836949939864121*^9}},ExpressionUUID->"867b8b18-1319-4f8c-b00e-\
51d5da42a0d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"symPE", "[", 
   RowBox[{
    RowBox[{"densoverlaps", "[", 
     RowBox[{"3", ",", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.3"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.83694966648538*^9, 3.83694970641679*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"3bf4f9ad-1ad8-428c-b633-0aeb0ede0573"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5.8169440694193275`", "1.451704080623459`", "2.905043872987593`", 
      "4.360097848251509`", "0.5799915072256724`", "1.7416326968141778`", 
      "3.486671296031433`", "0.870267367260783`", "1.1608345151735462`", 
      "2.3230358673637364`"},
     {"1.451704080623459`", "0.5799915072256724`", "0.870267367260783`", 
      "1.1608345151735462`", "0.2897452870574596`", "0.5798142970682705`", 
      "0.9670448441540662`", "0.38640868040648574`", "0.48315649444693354`", 
      "0.7249754331108084`"},
     {"2.905043872987593`", "0.870267367260783`", "1.7416326968141778`", 
      "2.3230358673637364`", "0.38640868040648574`", "1.1604168606934482`", 
      "1.935263668504864`", "0.5798142970682705`", "0.7249754331108084`", 
      "1.4508939806463763`"},
     {"4.360097848251509`", "1.1608345151735462`", "2.3230358673637364`", 
      "3.486671296031433`", "0.48315649444693354`", "1.4508939806463763`", 
      "2.904715292874627`", "0.7249754331108084`", "0.9670448441540662`", 
      "1.935263668504864`"},
     {"0.5799915072256724`", "0.2897452870574596`", "0.38640868040648574`", 
      "0.48315649444693354`", "0.16546006396457646`", "0.27586974383144747`", 
      "0.41402432120093857`", "0.20685615748516242`", "0.24828425690293635`", 
      "0.33111725829446687`"},
     {"1.7416326968141778`", "0.5798142970682705`", "1.1604168606934482`", 
      "1.4508939806463763`", "0.27586974383144747`", "0.828506081700823`", 
      "1.2433215785420269`", "0.41395627278944214`", "0.4968523541921067`", 
      "0.9943956097236364`"},
     {"3.486671296031433`", "0.9670448441540662`", "1.935263668504864`", 
      "2.904715292874627`", "0.41402432120093857`", "1.2433215785420269`", 
      "2.48921000474587`", "0.6212474951091039`", "0.8286903744710367`", 
      "1.658409618120106`"},
     {"0.870267367260783`", "0.38640868040648574`", "0.5798142970682705`", 
      "0.7249754331108084`", "0.20685615748516242`", "0.41395627278944214`", 
      "0.6212474951091039`", "0.27586974383144747`", "0.33111725829446687`", 
      "0.4968523541921067`"},
     {"1.1608345151735462`", "0.48315649444693354`", "0.7249754331108084`", 
      "0.9670448441540662`", "0.24828425690293635`", "0.4968523541921067`", 
      "0.8286903744710367`", "0.33111725829446687`", "0.41402432120093857`", 
      "0.6212474951091039`"},
     {"2.3230358673637364`", "0.7249754331108084`", "1.4508939806463763`", 
      "1.935263668504864`", "0.33111725829446687`", "0.9943956097236364`", 
      "1.658409618120106`", "0.4968523541921067`", "0.6212474951091039`", 
      "1.2433215785420269`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.836949671805957*^9, 3.836949721834313*^9}, 
   3.83694977539307*^9, 3.836949848140634*^9, 3.8370658523557997`*^9},
 CellLabel->
  "Out[326]//MatrixForm=",ExpressionUUID->"30395c18-dc47-4011-bb26-\
db8b499a7a6e"]
}, Open  ]],

Cell[TextData[{
 "Sample computation time for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0cc82abd-495c-4421-983b-f09873f5f7d3"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], "=", "3."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e99f0f68-03d4-4638-af2b-b659e11f1627"]
}], "Text",
 CellChangeTimes->{{3.836949730223678*^9, 3.8369497724377813`*^9}, {
  3.836949922159371*^9, 
  3.8369499483695097`*^9}},ExpressionUUID->"278a51c9-3787-4a1d-b284-\
7dc96dca6a8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fdenscoefs", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdenscoefs", "[", "sum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fdenscoefs", "[", "sum", "]"}], "=", 
   RowBox[{"denscoefs", "[", "sum", "]"}]}]}]}], "Input",
 CellLabel->
  "In[2676]:=",ExpressionUUID->"697bfd66-e0af-48e1-ba8c-2a4c5f1c661e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ncoeftest", "=", 
    RowBox[{"densoverlaps", "[", 
     RowBox[{"10", ",", "3"}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.836917138418294*^9, 3.836917143638587*^9}, {
   3.836917620727213*^9, 3.83691762227588*^9}, 3.836917749419908*^9, {
   3.836917814499198*^9, 3.836917816059844*^9}, {3.83691786278872*^9, 
   3.836917863358811*^9}},
 CellLabel->
  "In[2678]:=",ExpressionUUID->"7fd0d48c-d59f-4f0c-aa53-af7c831ef970"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.482959`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8369171465443907`*^9, 3.8369171677367992`*^9}, 
   3.836917623385326*^9, {3.836917703413465*^9, 3.836917869211164*^9}, {
   3.836949956879558*^9, 3.8369499736034393`*^9}},
 CellLabel->
  "Out[2678]=",ExpressionUUID->"7745fd83-3892-47de-bbf7-c69c9fe0d5fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"symPE", "[", 
    RowBox[{"ncoeftest", ",", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.3"}], "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.836938160260315*^9, 3.836938230856193*^9}},
 CellLabel->
  "In[2681]:=",ExpressionUUID->"6967d06c-95e7-4ded-b8c7-b8bb7b238f5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.321018`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.836938172506761*^9, 3.836938234616117*^9}, {
  3.836938354387835*^9, 3.8369384176414127`*^9}, {3.836938514650889*^9, 
  3.8369386796079693`*^9}, {3.836947438885426*^9, 3.836947458611464*^9}, {
  3.836949987048607*^9, 3.836949998547883*^9}},
 CellLabel->
  "Out[2681]=",ExpressionUUID->"1860baca-4aed-44e2-bc29-857cb45134bf"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Matrices in the local basis", "Chapter",
 CellChangeTimes->{{3.836981368877069*^9, 3.83698137821935*^9}, {
  3.836982338581072*^9, 3.836982344722497*^9}, {3.836996420998844*^9, 
  3.836996421753212*^9}},ExpressionUUID->"ccb0819a-83d5-4c09-8209-\
3bddf5faeb88"],

Cell[CellGroupData[{

Cell["Routine for combining blocks", "Section",
 CellChangeTimes->{{3.8369820675506887`*^9, 
  3.8369820960479183`*^9}},ExpressionUUID->"e5b6eba1-5429-436a-b3b1-\
b0e59573d1b5"],

Cell[TextData[{
 "All the local operators discussed above conserve particle number, except \
the field operator which reduces ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f2c09729-0646-4330-ba5e-f8524e172f95"],
 " by 1.  Hence, their matrices consist of blocks.  We combine these blocks \
to generate a sparse array for each operator."
}], "Text",
 CellChangeTimes->{{3.836981390007498*^9, 
  3.836981643532626*^9}},ExpressionUUID->"0383b66e-3031-4461-95a5-\
b2f064444d8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Join", " ", 
    RowBox[{"(", 
     RowBox[{"n", ",", "n"}], ")"}], " ", "blocks"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"blockmatrix", "[", "blocks_", "]"}], ":=", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Band", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", "blocks"}], "}"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Join", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", "n"}], ")"}], " ", "blocks"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sblockmatrix", "[", "blocks_", "]"}], ":=", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Band", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "blocks"}], 
        "}"}], ",", 
       RowBox[{"1", "+", 
        RowBox[{"Plus", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"Dimensions", "[", "#", "]"}], "]"}], "&"}], "/@", 
           "blocks"}], ")"}]}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.836981716360506*^9, 3.836981753562807*^9}, {
  3.836981789716812*^9, 3.836981802599243*^9}, {3.8369818603356953`*^9, 
  3.836981890521068*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"a77a6f63-0e49-4e92-b22e-186fd2a41ea1"],

Cell["Here is an example of how the structure looks like.", "Text",
 CellChangeTimes->{{3.836949730223678*^9, 3.8369497724377813`*^9}, {
  3.836949922159371*^9, 3.8369499483695097`*^9}, {3.836982109169771*^9, 
  3.836982137853945*^9}},ExpressionUUID->"02d78bb8-35a9-4902-bd91-\
442d64338dac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"blockmatrix", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"a", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"Array", "[", 
      RowBox[{"b", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"Array", "[", 
      RowBox[{"c", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.836981826134527*^9, 3.836981833153286*^9}, {
  3.8369819035560827`*^9, 3.836981963099162*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"bfff436c-bbfd-43c6-b2c2-5b2b4b98be55"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"b", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"b", "[", 
       RowBox[{"1", ",", "2"}], "]"}], 
      RowBox[{"b", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "0", "0"},
     {"0", 
      RowBox[{"b", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      RowBox[{"b", "[", 
       RowBox[{"2", ",", "2"}], "]"}], 
      RowBox[{"b", "[", 
       RowBox[{"2", ",", "3"}], "]"}], "0", "0"},
     {"0", 
      RowBox[{"b", "[", 
       RowBox[{"3", ",", "1"}], "]"}], 
      RowBox[{"b", "[", 
       RowBox[{"3", ",", "2"}], "]"}], 
      RowBox[{"b", "[", 
       RowBox[{"3", ",", "3"}], "]"}], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"c", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"c", "[", 
       RowBox[{"1", ",", "2"}], "]"}]},
     {"0", "0", "0", "0", 
      RowBox[{"c", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      RowBox[{"c", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {6, 6}, 0, {
     1, {{0, 1, 4, 7, 10, 12, 14}, {{1}, {2}, {4}, {3}, {4}, {2}, {3}, {2}, {
       4}, {3}, {6}, {5}, {5}, {6}}}, {$CellContext`a[1, 1], $CellContext`b[
       1, 1], $CellContext`b[1, 3], $CellContext`b[1, 2], $CellContext`b[
       2, 3], $CellContext`b[2, 1], $CellContext`b[2, 2], $CellContext`b[
       3, 1], $CellContext`b[3, 3], $CellContext`b[3, 2], $CellContext`c[
       1, 2], $CellContext`c[1, 1], $CellContext`c[2, 1], $CellContext`c[
       2, 2]}}]]]]], "Output",
 CellChangeTimes->{
  3.836981833612358*^9, {3.836981916048306*^9, 3.836981919096655*^9}, 
   3.836981963577258*^9, 3.8370599779764757`*^9},
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"d798e5e2-6812-48f2-ab37-\
8e7d32a70f6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sblockmatrix", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"d", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"Array", "[", 
      RowBox[{"e", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.836981968910448*^9, 3.836981998938463*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"7c7ed626-e404-4867-9723-d7c7ac4ae33d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"d", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"d", "[", 
       RowBox[{"1", ",", "2"}], "]"}], 
      RowBox[{"d", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"e", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"e", "[", 
       RowBox[{"1", ",", "2"}], "]"}]},
     {"0", "0", "0", "0", 
      RowBox[{"e", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      RowBox[{"e", "[", 
       RowBox[{"2", ",", "2"}], "]"}]},
     {"0", "0", "0", "0", 
      RowBox[{"e", "[", 
       RowBox[{"3", ",", "1"}], "]"}], 
      RowBox[{"e", "[", 
       RowBox[{"3", ",", "2"}], "]"}]},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {6, 6}, 0, {
     1, {{0, 3, 5, 7, 9, 9, 9}, {{4}, {3}, {2}, {5}, {6}, {6}, {5}, {5}, {
       6}}}, {$CellContext`d[1, 3], $CellContext`d[1, 2], $CellContext`d[
       1, 1], $CellContext`e[1, 1], $CellContext`e[1, 2], $CellContext`e[
       2, 2], $CellContext`e[2, 1], $CellContext`e[3, 1], $CellContext`e[
       3, 2]}}]]]]], "Output",
 CellChangeTimes->{{3.836981995967091*^9, 3.836981999366188*^9}, 
   3.8370599790800753`*^9},
 CellLabel->
  "Out[28]//MatrixForm=",ExpressionUUID->"2522b183-699d-426a-83ee-\
8fd9e853f0ed"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Transforming from monomials to the actual basis", "Section",
 CellChangeTimes->{{3.8369820675506887`*^9, 3.8369820960479183`*^9}, {
  3.836982377545546*^9, 
  3.836982389757103*^9}},ExpressionUUID->"b3fae4b7-df6b-4b13-881e-\
f1c3b27b46f7"],

Cell[TextData[{
 "The local basis is specified by the maximum monomial degree, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "max"], ","}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "afcbb3f4-c7cb-4de0-b769-0409ca4150e4"],
 " and maximum number of basis functions kept, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "basis"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "68da68e4-77a1-434c-984a-ea0b692b2027"],
 ", for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "n"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "796f9097-1fb2-44a9-884e-3e8a7ae3a268"],
 ".  These are given as list inputs.\nHere is an example -- Basis A in Table \
SIII of the supplement."
}], "Text",
 CellChangeTimes->{{3.836981390007498*^9, 3.836981643532626*^9}, {
  3.83698243353722*^9, 3.836982476221146*^9}, {3.8369825126737423`*^9, 
  3.836982536807459*^9}, {3.836982609637951*^9, 3.836982739002515*^9}, {
  3.836982857121419*^9, 3.836982866438529*^9}, {3.836983624853519*^9, 
  3.836983630833275*^9}},ExpressionUUID->"16fe0eb0-8cbc-412c-8183-\
b0ffb009d64f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dmaxlist", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"3", ",", "10"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"n", "=", "0"}], ",", "1", ",", "2", ",", "...", ",", "9"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"keeps", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "4", ",", "10", ",", "20", ",", "35", ",", "50", ",", "30", ",",
      "15", ",", "5", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nmax", "=", 
  RowBox[{
   RowBox[{"Length", "[", "keeps", "]"}], "-", "1"}]}]}], "Input",
 CellChangeTimes->{{3.836982882437052*^9, 3.836982955105661*^9}, {
  3.836983593488883*^9, 3.8369836072525797`*^9}, {3.836983645638433*^9, 
  3.836983648524119*^9}, {3.836983686306288*^9, 3.836983692386751*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"56a17f37-a5e1-4e92-b3d4-d8612bfba74c"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.83698369303445*^9, 3.837059992606778*^9, 
  3.837060532318591*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"87d31325-62b4-41a0-b325-ac9fd6d52b30"]
}, Open  ]],

Cell[TextData[{
 "As explained in Sec. SII C of the supplement, the rescaled interaction \
strength  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ae0c6548-4ee3-4c19-9b29-52fc6dbd44b3"],
 " for calculating the basis with cusps is given by  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{
     RowBox[{"g", " ", "\[Delta]x"}], " ", "=", " ", 
     RowBox[{"\[Gamma]", " ", "N", " ", "\[Delta]x"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4ea3cffd-96b7-4db8-86b0-20f73cfe0f53"],
 ",  where \[Gamma] is the dimensionless contact interaction, N is the \
particle number, and \[Delta]x is the segment width (called ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6d654d44-9eb7-40c4-b5e7-d6b24490e715"],
 " in the supplement). Note we set the system size  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2ab82b47-6168-4aeb-aba0-a1ead74b7a52"],
 ".  We consider segments of equal width.\nLet\[CloseCurlyQuote]s take ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Gamma]", "=", "10"}], ",", 
    RowBox[{"N", "=", "10"}], ",", 
    RowBox[{"\[Delta]x", "=", "0.05"}], ","}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "96fa4fbd-b2c3-4f52-94b4-88f2cdbcb547"],
 " i.e., 20 segments."
}], "Text",
 CellChangeTimes->{{3.8369838207660627`*^9, 3.836983850034778*^9}, {
  3.836983916372817*^9, 3.8369841930804033`*^9}, {3.836985111821925*^9, 
  3.83698517236617*^9}, {3.8369856880235653`*^9, 3.836985704917245*^9}, {
  3.837003269676669*^9, 
  3.837003276603409*^9}},ExpressionUUID->"432a7c79-cb71-4485-83f0-\
59c62f387817"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gamma", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"particles", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]x", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"gamma", "*", "particles"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"g", "*", "\[Delta]x"}]}]}], "Input",
 CellChangeTimes->{{3.836984210164536*^9, 3.836984220189823*^9}, {
  3.8369855341259823`*^9, 3.836985557369357*^9}, {3.836986049885936*^9, 
  3.8369860876385117`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"86db81e1-1015-4917-8ffd-4d1fbc4d5b1d"],

Cell[BoxData["5.`"], "Output",
 CellChangeTimes->{
  3.8369842211299763`*^9, 3.836985562605966*^9, {3.836986056888434*^9, 
   3.836986088481608*^9}, 3.837060404179174*^9, {3.837060509783618*^9, 
   3.8370605341603003`*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"028b539a-91f6-41c3-b5e0-fd7bc32d4b2f"]
}, Open  ]],

Cell[TextData[{
 "Construct the basis states for all  ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "74d56279-0a0e-410b-9852-4ba64f1e9f0b"],
 "."
}], "Text",
 CellChangeTimes->{{3.836984276149531*^9, 
  3.8369842976008863`*^9}},ExpressionUUID->"ea2df0fa-45b7-4d24-9a15-\
0cf3e93c747b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fmonint", "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "stored", " ", "values", " ", "to", " ", "get", " ", "a", 
    " ", "more", " ", "accurate", " ", "estimate", " ", "of", " ", "the", " ",
     "time"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmonint", "[", "mon_", "]"}], ":=", 
   RowBox[{
    RowBox[{"fmonint", "[", "mon", "]"}], "=", 
    RowBox[{"monint", "[", "mon", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "flegendreIE", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flegendreIE", "[", "sum_", "]"}], ":=", 
   RowBox[{
    RowBox[{"flegendreIE", "[", "sum", "]"}], "=", 
    RowBox[{"legendreIE", "[", "sum", "]"}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[126]:=",ExpressionUUID->"364b1fb4-ac64-4bde-8a83-0ca48ca06ba4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bases", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"legendrebasis", "[", 
       RowBox[{
        RowBox[{"#", "-", "1"}], ",", 
        RowBox[{"dmaxlist", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", "c", ",", 
        RowBox[{"keeps", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"nmax", "+", "1"}], "]"}]}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.8369832387011013`*^9, 3.836983244686347*^9}, {
  3.836983296017745*^9, 3.836983298109782*^9}, {3.8369836548013678`*^9, 
  3.8369836548773127`*^9}, {3.836984330324787*^9, 3.836984331849612*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"f17e89d9-5787-46b6-ae6f-7c338b0beabc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.684495`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8369843390823097`*^9, {3.836984387666719*^9, 3.836984416265738*^9}, {
   3.837060516399069*^9, 3.8370605388939247`*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"0f7e1dea-e0b9-4732-b8c9-42086c2f0222"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "bases"}]], "Input",
 CellChangeTimes->{{3.8369844256330223`*^9, 3.8369844319936867`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"83e6c32c-eb2b-4dc5-a8bf-602afd2363d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "84"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "165"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "220"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.836984428272111*^9, 3.8369844326800537`*^9}, 
   3.837060541828916*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"5ed68c23-cba7-4d28-b85f-093a2a46930f"]
}, Open  ]],

Cell["\<\
Combine these blocks to have the full transformation from the monomials to \
the basis states.\
\>", "Text",
 CellChangeTimes->{{3.836984489138444*^9, 
  3.83698451604823*^9}},ExpressionUUID->"9943d913-5b6f-419b-8335-\
7aaa5814f15e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"txmat", "=", 
   RowBox[{"blockmatrix", "[", "bases", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836984524882992*^9, 3.836984532819639*^9}, {
  3.836984593853078*^9, 3.836984625896201*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"6e45781f-bc5b-419c-98dd-b52c80e00fee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.013912`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJzt22dQVFnaB3AEw0hQcTCAgiNKUBkMREl/aBhlENFWFJEwAyookpSgiAIG
zDLo6OiQJEiQICAIKNkEiHbf2w0NCgINTWyaRlAWAXHnrXc/zKet3a1aq8e9
t+pU3fp9ev7nPnVvnVPnLnX12bZPQkxMTPGPofTH+L97gyPFzlHKDMRoJebr
jdahJ3FpBz29D5T/c9coLHjCkCKwPEk5aCuNhCQhiLs9qxeOHH/pgkEmbAXS
xiNuTXhhXlmQL96PwOpNvtIFBDiWKSqXgl5hRcnIKGekG75v73DWTtbB+MpT
Bc5IJ2gtNvdl9YRYtqdIME2/Hb8N5QlOLOqD/5QXXiFxQhTdymwwVSegZHd2
sx+HgJj9RF1raw9mc4IT7DNfYfZmz8uLODF4tUm5OUW3GYsSq6/qXiNBG5KQ
aBx+DvNKd03xK13IpvdaLHNoRYuTotjpsh6ctm8ZDTwuRIuR2vG85wT0vh0a
MzNLhsvy55Ldem3YW6AVaLWTAK29N+bw1BbkML08CiP68dOcjgevhgmcj6pN
10quxaMRN3n7q92IClWlyV5hI+1JXV5+eTYe8RkMCesOJEZbjOvqkHD5XT73
9uJ21E5qz5x4I8DnAb3uTXosaGd8c7J19mM46o/6553oRM8Hu3Wb2wgQ+1Kg
sP4liLVD89xyu8ETDnc8LOTic1NTeBqnF6rfhqyovikUuT75d10stZPvVMXA
WR29S47mDRDS365drMKHt/YDgzBFFtYccOoLYz/Gwntr6AvTOrFXq0i/qYQD
j05x8zTvLuwodCqtoAmx2j9vtDuNhUU5TubjvAwsvual12HRjtFsnkNAPAnt
j9MyX0R1YONz6eq6YwOYI1xIi5MnEOLCUZph24xG09UZltr96FE44dk4lw2e
4QrbbMVC+LuL53LleBiLDgkebCQhfdH48Jy9PMyK36IwlTkAh1qfiHduTLgL
gkw3XmUh5GRk5cvbvdilcF3RzJVE0dGg1iWlf9RhNHRfUWkAnyrGz+zxYIG+
ie6y73IFlp93SSte0Qmf934aV2kEdEf1m1qPvEWR8K0f/VA/NCyD2U8CCTi6
q588Zs+EVIDv5wbnHpF7jpT/vxs+OyG/uITEWDBH3vZTB2Ras+5I3RlAsuWg
2AkGC5qrYqedWlmMeN4t0/XhPJy8mDBst4jE+4ZiHe8KLui/6h7wzBdArPBs
htUFAj+Hp/kJfVpRWKGXW/ymH92uK2YWu7KxUyLQZ9LvHlxVG9PXze7ABmfZ
TTnRBLZ7+7rKDLfCQHDJVW2kX+Tmh/K/lsfsnj6rSZsJzW8Scs/VNCLobmh3
fiAfA6X2JnbzSLyct3VBc8oL5J+TWGa4uxveEzRuhlUduhUXHct63gnC7dq5
n9YJEbvywfXOABK33rdLMNJTkdN16rs7I20w7ffc0fGIhXzOkvKX20uQzPtw
3SeZB7Gl96aUW7egjPNZZiygBzVzQrfsDfjrf+8o/8/8nLqGz4I4Aplk3WzD
1QzouaXZ6Cr1oFVmE1ulhsB8X+WM+z0vEeMTfdSvoRu3A8NCc7UIbDifvqZF
5i12bnmzWNWhHx/TFLZOTyfgFew6HqPRhrK5QZfDpQQil5fyr9t/UwmWwo8M
pOjRTw/fq4N8kOaLyIt9WK1uJzu3mQBvMHHj+5Y2jB5MOaK4UwDfpUYR3jlM
bFvqZNN18g2a9ljSXrH4ELNta5BmkPD9NW6dtOYzTOYuMslY2SVyeSn/ut3Z
82G1YAYLBu+yvBSOPIHJKay/XNuJEkdDY9kaEprHKtrDVvGgvJ7LcSgcgNmG
FMeDuxjoG+jLmCysh3pn8BovVh9CH3mYa14i4CFX25ZcxkDzWY+rVsbUeofy
L+sDbqkJCa4skO15OZXmnTjoOM0tWkWI74Q7Vn0b8gxi/7jk8mu4v9qw8bjS
eFxOmoeQ0IlFsfP5+F4he954gRApZnMnY10JlIUcc7F2bIFuZHPx/ARqXUb5
l/VNQzcneiVI/G106feDnlws5AoPhV0VIFYoXqWmwMRC98gmF49GeEvJ9jFc
+ajIfKAxpEZCwdFS3E7Axbno8wt1qgQIDuyeaSbBxoX+sLbDy7KgTM82Mk1t
F7m8lIumy+0w42UYEYjU2J0x/QKB2MTwffSyHuzMS7sio0qg7uPvT1MymyFx
N8GZ3NCPW+LVnnliLPyiHH2z8h0Pv47cJTZKCtHqEBh1vYuFdZWpAfNKH+Ku
VvXsBCeeyOWl/Ov2wsK82KguBuyF4+rRZ9iQzH4aQ5vZhxw5Z1Z7yGsYrzqx
fZZGN2JeK8fr7xDC+sS8Oa1aJAaP1PfTy2tAOiatnKXejf2eQ2LxESyEu9j5
rhoug8xlNxXNAaqfKf+y3smcpa3fS+LwL4focnE8RPjIL7DsHsCcnK4V5veZ
sFr8WOr1eAL64nVkTnu04PreWz6r7boQstaDG0Xvx53t4gvu1wsRv7gqbLMk
gbM78tZo3E1EWW289/X6FpHLS/nX7W4behVKV7NQ9/Opnrb16VD9ZcR7tIKL
YP5mi+FIEowrVrPP7elAl+w8x8I9A4jh7HcOCa1H8EX52HD5LtSFSl70MxAi
NYpTLZVC4mmvtqyP03PEmfR/OuBJ7bNR/mX9Wdj2wLk7SNzRj1dWjWiH35nd
VUckB0AjPikdsyDw7Ki6umFgEsbKe5aZ2raiYO/GVHpiG9z6dGezzXohK3WM
a3FBiOVpDiq1m1kon/6DKm1fJYzWGLk+2tUpcnkp/7pd0t3dyaWOiZcbL2i+
qCThEcXY3fpDL/hSr5fbtDFQM1d/umFMA+qKjGfe1+Mj/aPCeCmDgEzQTyoB
2W3QOHW7AjQBpjW+f16ylYStQYGlO68aK9QcgmNHqfcz5V/W4/3iA3/8jYnd
SVvUipe/wQHtk4b0cj4+3LT16rpH4l11nL0ZowOePrU0h8gB1PdFPMk0YkPX
+fTE+qR8HPdYOqFMdECA/Y9u+TBwdq1/mLFbHWKOJ22VOSh6eSn/ul2hRCX7
hT8TYp7zw52zXuPG9U9tu1P4eFfv0Kk3SKAgQeNwhSoX7fvv6Kj4C9D4YanW
2CECI4qxt57VtKCoWSNnvLAfSinzthSPsyAtNSXK4ngRtomd128xoPY3KP/v
eOmMovQSezYyTcr9D/bdxxwdA/Kn+A7cmqEYOZnMxkBOlntYVCcsZaOr5mgK
cfL2uZcvNjMxftzq6F7l1+A43d5jdYEPE03bhMpSBuR+zrKQYbHRV3v3IHtl
HwQ/m32jvZoJj4StzA9jLDTKTvpEveoVuXmg/OvwkLkLx8oJEham4mEy/DSo
LjEYvmLPxQ/vXOzoh5rQIDWz8kluN5aQ3+yiuVLnJCkXbafVnd84ncGC4hR5
IemeCcepmZesvdpR+S7JNobdiI3bLJUWT3bho2lhTulWqp8pF22XrDRYHZDK
xHEJPbWR+Sxs21fvWuPRC+e5Kv6PJhiQ/yAbdmZKI2xn3Mhvs+aLXP2UU/5n
Hzx9Nes78waoKv5uknWtCx8sNbjmG4QIaVbRLNZnQ4t/xGi4NQvbrBcIj3Kp
8z+Ui7anJxmuHawgcOno6W0WIW0IiVxyJ/N7AWx6d1Wpe5IYC7cJ9ZWrRkfz
DffLtdS+MeWi4ZFDiQ8fnGQhLcEkktydAccLJZW6Cu1gPn649rVOIzJ25fbW
sLugkZpmEmstxI+qb+9dNGYgaOKylN6uejw5pem0r0z0clH+v+mv71m5xksR
4FyVeWIz2ATjlcXtXkv6ofZ01TpfJwKG904/fi5NgJG8/tqR89R/H5SLtpvt
2T9h2E6Cm9Vp+vH6U0z/WEsLndmFlWHLl1v7kIiaRk+J4rcj+YzamYi1AyJX
P+WU/9ndTt1wEvNjYAg68UXzOTgVtyrOqKsP2oHsHy7eYGCFjbrQWqkO47oT
B1o3iV79lFP+Zw/cwym7feWPvq31iLgZwIHCoWNV346JXp2UU/6v+JntU1uS
0hio0jQ7/raegwmJR1N1Z1H7yZT/Nf3vOF3MIQ==
                "], {{0, 0}, {30, 
                29}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> 
               False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10124", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "715"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
sFr8WOr1eAL64nVkTnu04PreWz6r7boQstaDG0Xvx53t4gvu1wsRv7gqbLMk
gbM78tZo3E1EWW289/X6FpHLS/nX7W4behVKV7NQ9/Opnrb16VD9ZcR7tIKL
YP5mi+FIEowrVrPP7elAl+w8x8I9A4jh7HcOCa1H8EX52HD5LtSFSl70MxAi
NYpTLZVC4mmvtqyP03PEmfR/OuBJ7bNR/mX9Wdj2wLk7SNzRj1dWjWiH35nd
VUckB0AjPikdsyDw7Ki6umFgEsbKe5aZ2raiYO/GVHpiG9z6dGezzXohK3WM
a3FBiOVpDiq1m1kon/6DKm1fJYzWGLk+2tUpcnkp/7pd0t3dyaWOiZcbL2i+
qCThEcXY3fpDL/hSr5fbtDFQM1d/umFMA+qKjGfe1+Mj/aPCeCmDgEzQTyoB
2W3QOHW7AjQBpjW+f16ylYStQYGlO68aK9QcgmNHqfcz5V/W4/3iA3/8jYnd
SVvUipe/wQHtk4b0cj4+3LT16rpH4l11nL0ZowOePrU0h8gB1PdFPMk0YkPX
+fTE+qR8HPdYOqFMdECA/Y9u+TBwdq1/mLFbHWKOJ22VOSh6eSn/ul2hRCX7
hT8TYp7zw52zXuPG9U9tu1P4eFfv0Kk3SKAgQeNwhSoX7fvv6Kj4C9D4YanW
2CECI4qxt57VtKCoWSNnvLAfSinzthSPsyAtNSXK4ngRtomd128xoPY3KP/v
eOmMovQSezYyTcr9D/bdxxwdA/Kn+A7cmqEYOZnMxkBOlntYVCcsZaOr5mgK
cfL2uZcvNjMxftzq6F7l1+A43d5jdYEPE03bhMpSBuR+zrKQYbHRV3v3IHtl
HwQ/m32jvZoJj4StzA9jLDTKTvpEveoVuXmg/OvwkLkLx8oJEham4mEy/DSo
LjEYvmLPxQ/vXOzoh5rQIDWz8kluN5aQ3+yiuVLnJCkXbafVnd84ncGC4hR5
IemeCcepmZesvdpR+S7JNobdiI3bLJUWT3bho2lhTulWqp8pF22XrDRYHZDK
xHEJPbWR+Sxs21fvWuPRC+e5Kv6PJhiQ/yAbdmZKI2xn3Mhvs+aLXP2UU/5n
Hzx9Nes78waoKv5uknWtCx8sNbjmG4QIaVbRLNZnQ4t/xGi4NQvbrBcIj3Kp
8z+Ui7anJxmuHawgcOno6W0WIW0IiVxyJ/N7AWx6d1Wpe5IYC7cJ9ZWrRkfz
DffLtdS+MeWi4ZFDiQ8fnGQhLcEkktydAccLJZW6Cu1gPn649rVOIzJ25fbW
sLugkZpmEmstxI+qb+9dNGYgaOKylN6uejw5pem0r0z0clH+v+mv71m5xksR
4FyVeWIz2ATjlcXtXkv6ofZ01TpfJwKG904/fi5NgJG8/tqR89R/H5SLtpvt
2T9h2E6Cm9Vp+vH6U0z/WEsLndmFlWHLl1v7kIiaRk+J4rcj+YzamYi1AyJX
P+WU/9ndTt1wEvNjYAg68UXzOTgVtyrOqKsP2oHsHy7eYGCFjbrQWqkO47oT
B1o3iV79lFP+Zw/cwym7feWPvq31iLgZwIHCoWNV346JXp2UU/6v+JntU1uS
0hio0jQ7/raegwmJR1N1Z1H7yZT/Nf3vOF3MIQ==
                "], {{0, 0}, {30, 
                29}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> 
               False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10124", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "715"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.08232232883395674`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.7320508075688772`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2.808921481813647`*^-14", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {172, 715}, 0, {1, {CompressedData["
1:eJwl0j9IlHEYB/Anz7S68srL/nhq2aUOBUEHDUko3FAoGHSGQ1BxLkFU0EEE
jYcOGhE0BB3YIFRw9PeGBqEhIQjHwkGnkBaNGhwkDqxP9MIHXnjh9/0+v/fp
Lt66cHNLRLyM/8+/9waa2EELBzjCcU4xyBCjXOYat5nkCa/4yCKrbNLq4F5O
M0KRO0wxwzs+scRPGpTo4RzXecBbvrJBeyLiDFcp84zP/CDVGHGSi9ylwge+
0bg1oo8hbvCQGov8psPgAxSZ4AULJJoj+ilRZYXMtogC08xTJ7ddX2ZZJu0S
hykzxzrHkhHjVPhCcmdEnnvUWCO7K+ISj1gg4Uf0U6LKCpmUfKaZp05ut3xm
WSa9Rz5l5ki1yuY9yXTEFWo075XHaxJtEWNU+UNhX8Rz6pzf72w2GLYYT1nn
7EHz8It8e8Rj1hjImIFkhw7UKXX6xniXjhQOmZH8YR3Jdcsma+kqDGYjvjN1
NOJEjx3gTW/E/b6Iv1f0Xho=
       "], CompressedData["
1:eJxdnXe0ldXV9fc1VuwKdhTpRaoUAem9Sy/SpAlIk44UG4IKCBYU6b0Jiih2
sCBYsaVbojExiXmjSUz1Td7kW/PLb479mD/mOJd7z9l7rTnnWrs8ZwwuHzG5
16TjUkpLq6RUkv6D48AJgeMD3wPHF35/HP8+gb+dHjgxcGbglMAZgZMCJwdK
BU4NnMa/zyz87nTeeyKfO4n3+b2n8t7T+ZvHPpPP+P1nFN7vv53O+0uBkwvv
P6UQ86mFMYux+b0e6ww+d3IhntN4/ym8z/md8V/jnsS//b5ShXEcvz9fjLEU
nzdX/vwZ/LvUf/HquC8MnB24NHBe4JJAucBlgYsDZwXOCVweKB84N1AmUCFw
QeD8QOlA2cBFjFeez5XlPWX43MXMcz5zlWacy/is57mEmMrx3kv4u2MpzbgV
GLMs417GuMVYL2ScMox5Ie+7gLEqMPbFfLYc85VmvnMZ62zGPZ+5yjBvOca5
sMDBBXy2NO+9mDHPLeRbnjHOK4zrOS5lrDKM4TjL876Lea/nsV6XEMd5zHUR
45xTmPcS5jiroIe5uYjxz2Xe85jDHJbn32czXrnCWJcUdHV+FxXmKM245xS4
uzBlz5zD58sWcjIXFzDOZQVOzmaOCsztnP3zxYxRlvddyHgXpOzB0um73iuT
suYVCpxc8l96li28x3qcV9CkWC+XMXcZ4jFvHsOclmascxjrLMYzf5czhjU0
b/aWa+AC3lshZX+Zq4tS9tO5hdjOJybXVxl+X5rfX8z7nZPndx2dzfwViOGs
9F0v2Iv2eunCvM6zfIGfMsThfMoW8nQ9XcZnKxT4viDl+nUtus7OLnBsr9h3
5Qo8VWDc8sxTusCH83YPMNeXFfR0bZ6Xsj/OKehmHcxDuZR7pHvmpcx3bkGT
8vzNmtkbl/D5c1Pul9bBnnEtux84tstS9qz7ZdEjF6fcj8sRi2vHnm4QqBto
F6gdqBGoHGgcaBqI7UKqHqgfaBaoFGgbqBloEqgYaBSoE6gXaB1oHmgZuCJw
daBWoGqgRaB9oFqgTeCqQMNAq8CVfK4Of2tZGL8FsTQmhrq8vwHjV2WcWsTX
jnmqEGdbYruCWJ1nK2KoT9zVia0y87Tl7+2YqwZzVSa+9oXx6jCO87ia2Gsy
9hXEUIn8mpBPC+KoTvwNibspsdTl57qFHFsSXw3Ga8Ln6zCnc6hCDq3J4Srm
uqKgRX1yaE4e9YivJrk2/i+uGxBPK/7dnvfWYs5qzNeG+NoxprVrwnhtyak6
cbUkrkrk0Zz4GxFHReJrSOz1C5+xn6rw3vrMY+4rp+zDeszdmDlaMV6jlL3V
kLgrEduVBX7bk1dT4qkIJ5WY276+mr+35O/tmLcGc19BXO2JoQ7zNCGWWsRe
kbjqE3uxJh1rNXKoSU5XFf5dlXEbFviqThytCznbN02Zy9xXIs7aBQ5dD+3J
qQ2xNU/Z13XIqznz1+DzzZirDmPVT7mXWMsqxN+QeFozVl3mrUdejZjLPLYl
3tpw0IZc25F7C36umHK9V0m5lmoznuu4LfM3YL6rU/Z4zZRrrx65NCKHhin3
wLoFfR1Te1CPeVsQS82U67Yx47VL2VN1iKcZY1rP1sRei1jrE6NrrS6xVyL3
tin3zOYp9whz0Thlj7seG6bcN1oVOK5KLu2I1/xcSX4NUu7lNYnNfqtFXM3J
332nTmGeaszTnvc24fNeZxoxl/tideZsRixVyaVhQU9zWpFcq6RcX7XJ+YqU
a6cZ8VRknJopr4/VUl77riA+81E55T7p/t6aeFoSZxvyqUQM7nvmtxFx+99V
+Gwbfl+H8WoRp3t145TXT/uhHfM3TXktsmebF/hyvO61rj33+ibEUJM4WhBX
c2KpnvKa5ZqpnfJa04rYm6Xv9pKGKfeFq4ivGrFWJDavpV6XqvNv96Ur+UzV
lH3j+Lz2ulc1Jb4aKddeW+ZqRTytU/Zw7ZR7jn3chJi9N6pJPFUKczROea1t
wWeuJj5rW5e43M+9HtQg5nbE5F5UnXgbEVutlNeK4vpbm1i8BjZknmp8pi2x
2bt1Ul73WqS8NzT/zQp5ed/WOmU/m5tGKfc0+7R6yj52/3O/qkwM/11jVYmh
Gvm4r7YjPmvqOFwH9lkV8rLW9p7XYfcP12Kxxxf1qknsXr+8r2ma8r61KvG4
1tsTk/d0LcnlCjgwV835fRviqEV87gMesxmfs08bEZfjsA7tC3pdnfJaWoe8
rHWr9N2ace5N+bv3RxWJzXuk2gXdGhKT9TIv3ie1THn/3zrlddU9tm7K3nCd
une4xmszrjn1mtWSGKqn7+7zzLf3IM3Ir1FBT+d0FXF4L90g5X1TPX6uxhyN
mMdnjBoFTdoU9GyRcu9vyfi1U967NUl5PbL2VQv5+ezgvc6V5NKYv3m9s5fc
dyunXFPei7YkRu8dvHZ7/mrk0zrlfXXFQr41Uz4DOXb3Mu8jzF/dlM9gfq/3
o42JpzYxeF/l3lnsZz6veB9xNXG0TLmfu084X69nDRnLPbw+MXrdb5TyHsz7
1KtSPv80IfbWKa9fLcnripT94PNhDWKsTFw+Q3mP1pC/2yNXM24NYrOXzHVz
8vGZzhx7X9w05X7dIuW+3zLlc3vrlL3vXH3G8VnEfvPZ1Wtq9ZT3tN4T+KzW
kJjtT58hvE/0XqkmsV5F3C1TPud5XXLf877S+bckxsqMeXVBpytTPtc3SflM
5XOy9+HNiKkFebqHeZ/s/a73HV673Serp1zLV6XsC/eQdimf59sQW+WCfrWY
3+u3+0DFlM+o9lZTfu97DK+v9VPeB9djTq9DDVJee9un3MO8X2qZvrvueJ33
Htv7dO87imuhe3Nz5mpYyMFrlO9JvPevSIxVUvZ68Rzo/ZO18VnSPdtaXUHe
7VK+a/C5yncFvktw//Iex2cy79m9v/f9jvtkk8J8LVM+8/gMWSfl/lOJvLsH
5gfGBDoHRgfmBiYG+gT6BgYFugQGB/oFrgvMDvQMTAiMC0wPjAyMCPQK3BiY
EegamBdYEOgQmBSYGbgh0DEwMDA+0C0wNHBTYE5gQGBKYHKgf2BIoEfgmkCn
wLWBWYGxgeGBqYHrA8MC0wKjAr2Jayz5deR3PRlzHnN1IdY+5DqfWHsR2wLy
mcg8fYltLnlMIM/hxGl+RhPjCPLuTtw9yK8TsQ4m9nFw0I08RsL3THi5hrwm
o9VA/r6An3vyvlHMO464RjPftczZDR7mkdM15DCUfK8nt77Ebo4nk9sc+JwP
p8PguTu8dYaH2fDaHy6nkUsXeBwMr1Pgpwca3EDug/jdOMaaQvwDiH8uOXcj
tuuJeTTzm9tZxN+PWGeS0wS46l/I51pi6EgcM1L29TxiH09sQ8m7F/nY413J
qzOc2NPmehI8DuR3PcmxF7/rzN+HMV8n8uvI+NPIqSuxDiX3meTi+OzRvsQ3
v6DTCPKfDVeT4ORGOBlJ/qPhrRtc2ocz4NQ+WoBWY+DQNewcR/L7Gcxnz3cr
6DqLmMYTs+u3OzmPI5+hxD0CfjoS91TmnEQ8XeFkDnEPgkd7bDgcXwf3/eB3
LBrMJyd7pCf5jYaDeby3H/HfQK7z+fsc3juJObvxmb7ENpKcFsBJ78IcrpGh
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
PWfPIIYuKd+3+L7OdTaRuLvC05yU7zOmErPPivPJrzMcuS95zffzLHtibspr
ynS49f31POKYwbwdUr5L87PCEfAwm5h8Rz6swPt8eOmV8lnJ91re23jvObig
h+O29927fF4bD5few/gcMQg9hpJfJ3ToD199GMv3td5b+Tw3nLymkIvrzRq5
X45P+XmF17gJKZ8R/IzEe7y+KT+b8fOiofDYDQ58D+PnVoNTPo/Ogks/WyjW
jc+dnQu6jCLGcYw3lDzdQ7ql3KuLzxymwNHUlPeTnVO+1xxGXO7704nBa94N
KXt4AHlfl3JtuI6uIae5cNgTTqbBd9eUnwPat167/PtBKa8jPuv0ZZwx5NiH
mOcxn+9wx8OL1zavMwtSXt99bzQ05eePM1K+S7uG/McV+PL51feK3u+PhgOf
6X0+8PN6r/c+8/VJee30Htxj+V7Xfdi+nU08PkfNI5cbUz7Hew/v/Y6fI8xI
+fm979cHw6PvPjqkvM+fQA5+LuJ7ePcH35cPIr+hKfdkP4ecyTi+q/D96zzm
Mm/uD35maP/6ewWzmXMYsQwkt5Ep17337H6uMYcYvff1HfB0eB9Mbn6+OA5t
fDYaQn5jUz4/+T60V8r7DvvQ9+VeJyfzGa8BE1I+Y7luR6Z8Nr6R3H3f7Wc5
1xO316DhxD8o5Xud0cTts95g4rc/fVfgu8kOcNkp5X45Cr283ndKeU3zvndS
ys+wBxOfn1VOhAffCS9g7GnE6OeGPhv6jHQtsfhObiqcdE3fPf9PTtlLfk41
MuVnyzNS3t94f+a10ved81I+33tv6Wf5M1K+k+6d8r61VyEX76GHMpb785SU
7y69J/Iz/YGFHL2m+R5iQspn7Tkp7+VHkKd1nZSy173ndn15H++72utT3iv6
XvW6lNc631l0JO9exOY7tDEp7xcmMf6ElPt5b/L3Hrw7XA1P+T53YMr3D+NT
3iN4LZic8j7H6+mIlJ9J+Pzq87XvX3wm8T3znJTPpO4tvvP3c8prC+OZe6+3
Pid6b3pTys92OjCvn717r+l7TJ8PfCc7iTzdqzrDbxc4975mHHn6XDoSjfy9
ix7E4O9meT9hnor7w/kp97eJKX/X5JqUn71el/Ld7MiU7wl7wpPPzl3Jx89O
usFhp5TPnn4G7DOEz2p+VuPvIHQmtxnw6O8fdSG3CXzG943TiWNeyt8Z8Hc0
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
U/qatJC3auKJE/DkpdTAhXjiJLz4DT7uiIfFnTRsg27V0ex31FcV6uWHePTX
1Iv83gEfV8CbH6Otaurkklx/0rAcHlGdyYfypnwmf8p/LdBP/u+Mx1V/qjtp
qnqqiyflscrkVZP8xa19/0/qoh4e7YBnNe6pcN8cDqugeRt4/h+0akrMV+HJ
y+DJ5wXFIn4+wmfyj3Q2943goSw8/xwO5Ye2cPpLPFMb7s7GT2fAzRdw8ytq
zDz/KeW9z3l47wp0c4/zGehbPPkz6so97iw0+IreJq5VJy3xtXwgnT+jhqSZ
PH8CvpY+f6MW5dfLqYtmBY+pflQ38oq8Jy+o/lRb0lQePBlvXoKm8r3qshqx
/566+Jgc/kkfaoX+n8DxH+DzX3hZOvwGrU7HS5Wph9Z4TfF+Rd9pSdzS8jR8
8yX1VR4fnImHOpbk/OWLEnI6Hw+Io//Dt6eg38/xWiM4rQmP0kvayRvSUV4+
Gx9WgJ/fprzflVcuwu/Srw56Vy/J55B28Ow7AnlEPpPm3ud8mvKdzPF4tj6+
lB6/pm58jroEz8tj8p3q4yO07YRnVVeqr9J4X3UkH6uu6uFbeeALfCIuvkTj
FuhZCX3KEbfPARrP9xjitAKaKa9vqbua+FpzNCMH+eNS+E14onlJ7m3SSxyV
ITefP+SFz6iLK9He+0HfMXTCx9LvNDSpj3fkrRPJ+2N61z/w11f4tAM+lo5l
qQF74hd4piH6ylPe+8tz5+Jr+VE1IS9K8zZoI+1VE/L8n6mNz9FEXpIuZ+Dl
U/GRfKB6+Zp+8xf8/xE9oDq18Cm95FfUpPQ8Gf2Pw58XEuvfmOcqdD+fOTTe
h/S8P+LNj1NeOy8kLuWnOcoT39fo9k96nu9xxYdi+Dn+/ZQa+wjuv4effCaX
jv+DvqXg7Uy8JU6kwS/xqzwprSqjsTzXEg92KvD0FT6WxvJMc3Q7Dk/47NoI
/n0X8mPqwXcb8kZt9JPPGsJtVbitjz9+Q2+U9+Q3n9Wr4yV5WTWlGquHXvL6
J/Sm09Hde1D5R7q7P5ajThKeU/3Jp5/hbXHRuiTfwZfmcx8SfzXmuLwkr+dX
wmOjkrx2Fu/a/gmHyucqvPwN/j2e+MSL1zRxpfjboMUf8YX3q2fBWXn0+gm8
yw//Sz1Li1Il2cd10UK81sAv4kdcyH+n4tXP8HZnvF4PjqS5vCddpX1LfNq8
JO+BpIs8I/1qUSdfpbxvkx/k42/hWnq1Q6+z8Y08ej56NsCj8oZqqyN+Vq38
FN18ZyEfqhbkE9XOL+gJqhnVneriMsYqz5ziymffxnjpODxyPvldiq+l08/w
46mMJ11/zTw10PBD/Psl/m8Hf9Lz38TSHH9dhS//Tl1/D49/RS1Kqx+gh7it
hWaN0Fw6f0Kdeg92EZ78mppRzmXhSB6VL73OS4t/0UvkqQYleX8kr5fC566r
M/GwfPkjPH0ynqhHHcjvn6d8BpKnTsHvZ6Od9PH92h9TfpZxHnr/kvr0fa/q
UP5TLbbCP19Q9ydSA9Jbnv5lYKzGC7wXWB14PnAwMCwwMrA2sCnwWOCewKTA
U+IwMDRwSPwG3gq8GrghMDqwIzA78Gjg9kAv+TBwd+Bw4O3A/MCGwA8DDwQW
BQYG7goMli7yWaBLYFRgYmCu/BT4ILA+MC/wReClwPjAa+JYnAdWBlYENgb6
BB4ObAncF3gu8EhgeWBBYHNgZmBOYFCgu/QLPB04EtgbeDHwM2keuCbwW3EZ
uD+wK/BOYF/gpsAzgU8C0wLLAr0DSwM9Ax8Frg88Hrg3sDAwIvB64InAbYF3
A18Grg0cC1wX+EHgaOCWwJOBHoH+gXGB7YH9gd8HJgReCOwO/DrQN9A1MCbw
ceBA4ObAg4GpgemBnYHfBX4e+CrwfmBN4JXAQ4EBgRmBPYHPA/0Czwa6BdYF
hgTuCNwZmBzYFngjsDgwK7A18Gbgw8CSwJTAqsCNgeGBWwMvl/zHk+J+Ne8X
x2vJ+VdwpfwOon8/9J1DLm+h4yz0lefkA3lmBTG+RGziX16ZiB5r0GcL8cvb
m+BMecgnN5BDLzQfRC6K/Sm0kCd/Qs7y6dvoKT/ch+bysfwyGE6l/2H4EJ/j
4UWe6ANn8sNYdJaG8pW8KQ9+gfby7HL0VB3JT/LGKDSSH+Qd1bLqSl5Wnan+
5TPVjWpUtay6lZ/lgUVopDqVr+Rv+VEekJfmo6fqRfWgmpZP1ANUA+olqiH1
DNWhvCaPqqZU86pH+VE+l//kNXlQ/Uj+VV2r98if6i/ys+pI3lS9qY/Io6oH
1YxqQ35XzakHyZeqHflVtS6PyveqY/U/1bV6mvqeepdqUD2vN+/X7+W7N5hz
O3x/Bo93MedLxK04HieuT4hXY8rTq9FvGtpKF3mgF/pKZ/liBfyIc/e5Z0ty
n3yEuEei+YdwJZ/Ks/LivWjwOfp9jV6qHdWJ/CKvq27kv3vQUX6U526EA/E+
Ck7WoJ903F2S+5o88BP4lpbypWpZflKtLEQr8ftTuD+CNqpL1YPqS3WjOvkh
2qgnqB5U6/KGesIh9JJv5FPVsLwl38hXqhHV2DNoLq+oh6ge5RN5Qb5WX1B/
Ua2pjuVf9Rn1DPUU9Rn5SV5SLahfqN+oX6g3qE5UB6or1ar6jmpJvpVn1Rfk
V3lfnpOHVX+qS/UO9Qz5UD1HdaO6VQ2o36i+1QtUk6pN9xH1uS+YX7ltJ94P
0WshOom/ruh/A2NIZ/lA3vwEbuXvh9DAuf4CzaRRLzj6CVodhOeBcLGb2KT1
Z3AhX8oTS8hHnvg9sSs3eVfelJeWwpt8t5ocVU+qq3HoMAKNl8Hf1/AuP6lm
5LetaL4X/uU7eUL+VY38Fr6fRkvVleqxD5pJB3lQHpE/5S15Ql78HG1Us/Ki
PKJalM/kLdWs6lJ9Qn5UTalGVPOqbdWOangCWqtHqF/IR/KUvKFaV3+RN1VL
qlH5Uj6Vp+VV1YA8Z/+r1uUpeVs1qnqRj+RF9SD1ENW1ak5+U+2r38iTqn/V
n3zqdUO1oZ6l/qHaUb2pJ6jW1bPUl+RH+VIeVr9Rz5PPF6LrerR+H363wL/e
15PP9SeeVcwtrh4lFvlH3p1KfFPgVp7fSL6H0K8rse1HZ+Ukr/wMLh5Dc9XK
anS5GV7ke/lnIrp/iHZz0WMI2ssf8oRqQv6XV+W/pXB2DD5+i/6qDXniRriS
h+Uf1ZBqRL5yrfVDm/Ho/iLaSR/Vm3wg38g/qgnVnmpKtaOaV22r/t5DA2kt
v6gmVNOqb9W5/C6/yV+q2+vQTv1AHlXdTkNj1ZF8pbpTXauWVKfyhPyrnqMe
IW+oxuR91azqyvs0+VVekifVa9RL5CPVgupa/Ug+Uw3Lz6o91YHqTh6Th1Xn
8qDqTHWiGlc9qCeph6ge1Q/U/1Tz6muqEdW8akN9a+RxcY4MnByoEzgn0DWw
MFA1MCrQIXAgMCNwZuCtQLPAP+Pzg+K1Z2Ba4JHAysC6QItA+cC8wF2BP4vP
eP2r/BGvdwQ6BaYHKgaODzwZuCKwLDA00CUwLHA0cFFgceBv4iNeWwX2BWoG
WgZuC1QJ1A9cExgd+KM4iNddgdMDcwNPByoHVgXWHKdDepzZA00DmwNzAtcG
bg50D5wQmB2YEOgTeCCwNXB54NnAcYF/yKfxen5gfODf0i9eBwfaB9YGOgbe
CDQKjA08F9gUmB9oE3giMDCwLXAkcDBwZ+DsQK9A6cDuwHWBw4EbAxsD1QIj
Am0DSwOHApcE1gcuCPwlYqkQrw8HTgvsCdwTKAmUCTQJjAssCuwPbAhMDvwh
PndSvP49XlvH662BUwILAv+rPhCvjwWuCrQLNA68GHgmMCXwJ9VgvH6rOovX
UoF6gd6BLYHrAxMDQwIvBMoFrg7sDdwU+Fd87ox4bRh4PLAkcGXgtcAtge2B
+wO1AncHVgdeCXwTn1sRr5UC3QINApcGXg4MCDwY6BGYFKgR2BGoG3gzcG7g
0cBLgbKBqYHmgdcD/QPVA2cFTgycF6gd+L+Y79R4vSzwvcB9gecDwwMzA8sD
TwXGBC4+7j/+lW+kyQpiUMzz0VFe28U84lveXkY88rPmkYdUQ2uJXzxWRAtp
dgNzS8Pn4Fo5Xo4O8pLqRP5sBidNyXEofHclH/m7Dxw3QfOn4VY1pZpTH5B/
xYP8q7peiU/kbflMPlR9qe5VC6ojeXcBvEhP1ZtqSz5VL5D3xJv8sw5vqA7V
k1QX8rJqRTUh/zyDH9TD1GfkxyFoIQ/Ix/Kp6vV8PCK/q/eof6lfqceoF6ov
zsMXqg35RfWmHiKfnoDOqmn1PfWLpXhC3lV9qp7Uz1Q76jnqNeoTql95XH1V
flGdyt+qA9WLalk9Qj5UT1bvVU3L36ot9WH1GdWx+oR6qHqk+qzqS7Wgvqg6
U59TD1KvVJ9W31Qfkc/VK9SnVb/qeVoHVG/qn+qbqletAVoL1D9UN+r3qkP1
Y/UY9Vn1UdW7fK6aV42qNtXzVavqr6oX9W31Da0DqiHVlnq8+qV6jupMNa86
Vd2q3tQT1avUK9XjVU9af9Sn1R9V16pb9TCtFapZ1aTWKfXN/wf8HKuz
       
       "]}, CompressedData["
1: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
k6/y53+v0oPP3L9t1m+3xxf7hg7fjXJAK+VVBCde+7ac8IKbK/e8p/ig7Xik
yYrF6tBysGz+s6Muji3yWUXhYcR+OH7iwWEDCNwl8Yrzgjksdrj1pP6UO9zd
9uB8fEAQ3N9csZLCB2BZpza1jwPN2cZPhi6hzqtj6xN6up1x5T0XoXOh4njt
ouR5ChdkJn0+5fjTAquivtkE+lvDnzB+6efJGvjqxYO9Oct18YytPbvyLk0Q
FKtY8fIGG/wVSvzqXaaG40mbCD686ldhRPUBvj1u7ueyJplsX57tOlhjAkfv
/ydA9YESo4iJh+fc4X1viOvqox6wQjxqu3OpOxSORRAfMF5iTHKbrwaUb31Q
QOkBjhIi/VG99pi/6et2yke4Jcfq9/Y39f2UcVnRQVUHZevs3ag6qLrwNMkJ
NZ+6niZrbHB676bdlZMO8NP4Tn6lgDIofZ96byGvBfEsW3YPXnAA9Uu5Zhaa
unYWNZPOFE5GTfRxbipveDd8G/O1hwisW+mhRNWH+MLrW9Z6OqJyuRupg1Ws
/+Ip3WDza7G3tqwWsG7z+0bKV+YPdSWDYJs524iNYV2U/qjZEd+RHeCHGibq
Jyl/cOuBZpJruONWXfj0NAMUan6/pPzCnfqCCp1FjnhqrYTc2iBTPB9m50vx
gzINH3VpvufMMN7JNxR/UBxtW3JLZAX1/9dz5KR8AApcyiE5AI4Fb9oqcx1h
++NBGWo/WEvy2lK+4Zv+l0Zgq4Jyv07uovhiQ1qNC+UXmshmi/L0msFONRNy
RcP54rc7T7gCT27+OOUL/sxM7NKIC23OWbXwNJUD6N4/dnQlpz1e4DDwonSF
w4kxkdT8wMye72QfmpS97b3J4oflsyeGKX3RJ9rvTJWwIqietH4nl6WNG8J2
9sjIGGODTMKBoRkzbD2Z8CzjhxpG/2K6SOUYYsCCU1GBh81Q7KtafWarOJ6/
5rVhQ6gpNLw9IdpmrA6bO8+QKwb8V0/2QdYTUNm6iA3vRZ7lLVxvCGlfah3s
+CVxX/HXUt1hfawsUHjSlskHq/gntilsMwY7Zef1e/bwgE4Ke8jC1/ogZz78
ouk7PyiC/6VEP2quu/l0ZKz4cO2RcV+lzeaQ0sEpeqToKKMiOrTj0HozSP89
/5p5apx5Z5HC7dXsivi9MZHwgPjPt8h6fLc3mPSFc3IvCQ+IfeHYEu+iAFxj
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
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.836984533639002*^9, 3.836984556294664*^9}, {
  3.836984594843602*^9, 3.836984636610033*^9}, {3.8370605450689907`*^9, 
  3.8370605743591223`*^9}},
 CellLabel->
  "Out[148]=",ExpressionUUID->"54044ea8-7586-4efc-bee9-98de31dc4ab1"]
}, Open  ]],

Cell["\<\
Number of basis states and number of monomials for different particle numbers.\
\>", "Text",
 CellChangeTimes->{{3.836989303599121*^9, 3.836989336342876*^9}, {
  3.836990311046479*^9, 
  3.836990319150071*^9}},ExpressionUUID->"988da110-be49-443b-baf0-\
ba17bf6db3c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"basisdims", ",", "monomialdims"}], "}"}], "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Dimensions", "/@", "bases"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.836989268469417*^9, 3.836989278450988*^9}, {
  3.8369902928639107`*^9, 3.836990305682572*^9}, {3.837060589215797*^9, 
  3.837060590003832*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"17de93dc-c91d-4d27-9e99-cd91db336c09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "4", ",", "10", ",", "20", ",", "35", ",", "50", ",", "30", ",",
      "15", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "4", ",", "10", ",", "20", ",", "35", ",", "56", ",", "84", ",",
      "120", ",", "165", ",", "220"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.836989272748919*^9, 3.836989281916552*^9}, 
   3.836990306818591*^9, 3.8370605917321987`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"fe069cc1-2140-49ad-b22c-e0c03f9ebbfd"]
}, Open  ]],

Cell["Quantum number associated with each basis state.", "Text",
 CellChangeTimes->{{3.836989303599121*^9, 3.836989336342876*^9}, {
  3.8369893677827044`*^9, 
  3.8369893961970997`*^9}},ExpressionUUID->"eb155478-41cf-4929-9632-\
955d7352d5e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"localqn", "=", 
  RowBox[{"Flatten", "@", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"#2", "-", "1"}], ",", "#1"}], "]"}], "&"}], ",", 
     "basisdims"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836989351752527*^9, 3.8369893524469223`*^9}, {
  3.8369894014062567`*^9, 3.836989402510829*^9}, {3.83706059480865*^9, 
  3.837060595512616*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"765cade3-6a70-480e-88b7-f6b668dee2b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "4", ",", "4", ",", "4", 
   ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
   "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", 
   ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
   "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", 
   ",", "4", ",", "4", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
   "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", 
   ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
   "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", 
   ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
   "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", 
   ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
   "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
   "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
   "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", 
   ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
   "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "9", ",", "9"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8369893529511633`*^9, 3.8369894035337553`*^9, 
  3.837060596584695*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"0b2d9bef-1ae5-42f9-87d3-19df475a8b5a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kinetic energy", "Section",
 CellChangeTimes->{{3.836985283696055*^9, 
  3.836985285258136*^9}},ExpressionUUID->"b6d0a765-7e32-4226-8ed6-\
573283e8d749"],

Cell["Find kinetic energy blocks in the space of monomials.", "Text",
 CellChangeTimes->{{3.836985397070799*^9, 3.836985409533478*^9}, {
  3.8370006940776978`*^9, 
  3.837000699773423*^9}},ExpressionUUID->"356518b9-3222-4306-863c-\
0564f0c84fce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kinblocks", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"kinoverlaps", "[", 
       RowBox[{
        RowBox[{"#", "-", "1"}], ",", 
        RowBox[{"dmaxlist", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"nmax", "+", "1"}], "]"}]}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.8369853771077137`*^9, 3.8369853855949917`*^9}, {
  3.836985419522872*^9, 3.836985423042471*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"23dd80c6-404a-4d4b-9b11-97fb634aeb02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.172957`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8369854249272823`*^9, 3.8369854474907627`*^9}, 
   3.837064939858472*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"63c2b85d-b71c-4f8c-a04e-906aff6c52ff"]
}, Open  ]],

Cell["Combine the blocks.", "Text",
 CellChangeTimes->{{3.836985397070799*^9, 3.836985409533478*^9}, {
  3.836985577892466*^9, 3.836985616347699*^9}, {3.8369857294116383`*^9, 
  3.836985764433362*^9}, {3.836985968461011*^9, 
  3.836985970163053*^9}},ExpressionUUID->"b0783d20-2891-4922-9a52-\
8570b63ee58f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"kinmonomial", "=", 
   RowBox[{"blockmatrix", "[", "kinblocks", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836985829546921*^9, 3.836985830526668*^9}, {
  3.836985867824678*^9, 3.836985917973763*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"e515da87-3a1e-41bb-94b2-44fcc9ed21a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.161037`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJztmXs0VPvDxpUUjlBJRUWhu9yKinqQokgqiqgcody6KZSjE0nqdEoXuqAL
UkQ5kiRCRLrM7I0YtzFmzNDcdjeXLvh513r/eN8/Zq3f+r1nvcfv/OaPWWvW
Z9baa/aznnnmeb57htfejT6yMjIy0//79V/vl4U+3X5tJg1JJil5Zn116EqZ
wdmQyYeU/z34OMsYv6aNBOaui/P/JGhF16jCh5dPCXEvKCTSeEwNYsPXqHTJ
c2FycmRqzwQKH7QSj+/MZSPKz/mu7jY+xi+9ZcVNo3DZnbd0fzGJX0sqCyaM
7EDpk7uT5NPFyE4c/WLSNgKxWb+qiRYxkVRS9K7pihD8Frv84mM82I2uP8bb
JYSsin4as4FCukvLnDffmxC496TO8gudeHZol6fBDgpH3c+5Hp5LYP65kTfl
X7Rg5w25Yr69EMdHOhRG/1QD35rAmY6TuejT4BzapUHhyW+Gq57kdYFhe+f+
LwkiVLsGDezopoad/lL+53LFxvmH1GUIXCtd1DjuejPSMqaqmCsL4bSEu+Kw
GokAoem3T3faERbvpmKQKQLVXUQUlzSAuBA1QjOPByPFFW4xayjM066qOjGB
QG6By4H4OS2opzEqjecLkbu4uSzdoh7afiPYKx14SNJWW+oLCpPDzt5VEJFQ
2n8t5sG9DhxNT/3RJxRj/B9KrF+ihq6jnnF8P9rQZTftzGVCCNV540KizhCI
EiXmMGPacOvCqd9Ptgnxpj02VjmlFVc15k4ytOuCS2iGg2gfhSKjy5GnVWrw
6euFN6mzuFjYvc3VV1vq5787Vzme7LhzFh0FtBDTr/EMzO2veCAMEOC17jSl
jt0kPvS1Ta6sY8OH0f5lxBwx5JPNPao0Cbjn5c8I2tmCFOGScZFmQozy7GKd
TSJQN3bvC3xtQ2lgn15wrxD9FzYsi91CYITffQ/7sUzosl7+dD5OiLENH0MX
qBBQzNhZkaDQgoU1+V6PdYXQY6aP3RlPQN7o4j2dyjY8NGM3PhcKsfpRKsfl
PInCH9sjed4cPLMxd1/rLcYaN4/lsXFDv0eLrlGnU9vQEDhqXwxXiFULbM4H
6xGYYJlvv+3u0PVfnG4SrBIOO/2l/M/lRzl971f70KGrGylSC2lE++/N/FfX
BAiftcHtcDYJHPH3XFDNgcmVu1PNz4pxotOt+Nt3Eq+EEV5iVgfm+6mvWiFL
YZ+v8sRrHiRmZiut+36XjfuGu7g5E8V4FXjQxKWTjg6eVt7pVc0Y9/VI+OPv
AvBH5SkmkyQMj4Uu7V7TgTU+Ns8nV4gRLP8IsdVNuDJlw+Ky6E6MCl9UxdxG
SfR5Y2TZ5NCjBK5WeRhUzmxD7p6UjCuvhNA6636dpteM+vMjp0cldyK3YjDH
zlOaz393Hq/1Zcri5QR0P0X0Zm1oRUyt0s/OfkLMVaPVOdmSSDWuStHexsa+
iUR1T7cIMS5eB00WtUNTNaZ4Utx7TM5yy+DFUagOTqwVaZFYueLQ9hfE0Ofv
bMZbPxWhY0CjzsOLwHic+By+lYnyRu/ERzeFcLX9sNgogAulE5vj+2sE8Hl/
OMStmoLOokEy5R2J4jvJnLWuHfgVJWmTXokl5rmk3nLf8lR4UQAPTM7WmFse
QqiUXtr0ol7q5787L+2MXeO0lg7fL2/VByc2otfPqig3RoAxtBzTd/cImDj1
n1E2YSE/7NwxM2UR9lj7qhjqkig5yQj91NaO9vuhqollInh15F03VafjQ+WW
bBcPBry1BuqZOwSwqd20x/QzCf0nkx7klHUgpf21tn6PGNMW+iZ6+RKYc5a0
nR3KRN/Dtoi8dCEsXis+96To6F8cKG/q1Qzb2u5t+SMk95Zl/e4OaePrkb86
pnPAkoe7ZHiXwwpK4g4dbvpL+Z/LV7xe7vxLEw2+XicGI042IOtbUKm7iQCW
V8OS40aSeG6YGjRjdzt8iMX3Is6J4Mr8JdmyjsCz8rkjJ5ezMJ1/ZF3IWhEK
dkd9Tmsi4Lz1wPy2RhZMj7Vb928SodbaXt96Oh0K6mkjRhxm4NrXsCetPgLE
2TgpdWmSKFBfn7f3eTt436oNVj4SISPereWGJ4nsOuNep8dsdCiyqx5oiiX2
c0k7lDhtNCK0jIRip9DLT7UDPRd1vo3OEg87/aX8z+XzArZe0jMZ6htnDb71
KbSCqvKPc9kqRPbVpYvLlpPYt7XNT9mcjTD5OYn5nSLwV9X+rGjJQsTU+5mT
x75H6jK3dO1oSqLPJeW5pN7iUKDc86WXxIoXWwqu1HSg+2yiF/rFsHoTo/NW
i0CwrGzI5GMtYFQ+/PzrciFCi5e7P41vgO++MWPq7/Kw/Olt+SA7yeeKw01/
Kf9zOXtcxoTDJB1euZPS03qbYN11sy9QIICpxoEgizG1SNNf8vr9Xi4qw3sy
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
5VL+P/k/AOOfQKA=
                "], {{0, 0}, {30, 30}}, {0, 1}], AspectRatio -> 
               1, Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["52383", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"715", ",", "715"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJztmXs0VPvDxpUUjlBJRUWhu9yKinqQokgqiqgcody6KZSjE0nqdEoXuqAL
UkQ5kiRCRLrM7I0YtzFmzNDcdjeXLvh513r/eN8/Zq3f+r1nvcfv/OaPWWvW
Z9baa/aznnnmeb57htfejT6yMjIy0//79V/vl4U+3X5tJg1JJil5Zn116EqZ
wdmQyYeU/z34OMsYv6aNBOaui/P/JGhF16jCh5dPCXEvKCTSeEwNYsPXqHTJ
c2FycmRqzwQKH7QSj+/MZSPKz/mu7jY+xi+9ZcVNo3DZnbd0fzGJX0sqCyaM
7EDpk7uT5NPFyE4c/WLSNgKxWb+qiRYxkVRS9K7pihD8Frv84mM82I2uP8bb
JYSsin4as4FCukvLnDffmxC496TO8gudeHZol6fBDgpH3c+5Hp5LYP65kTfl
X7Rg5w25Yr69EMdHOhRG/1QD35rAmY6TuejT4BzapUHhyW+Gq57kdYFhe+f+
LwkiVLsGDezopoad/lL+53LFxvmH1GUIXCtd1DjuejPSMqaqmCsL4bSEu+Kw
GokAoem3T3faERbvpmKQKQLVXUQUlzSAuBA1QjOPByPFFW4xayjM066qOjGB
QG6By4H4OS2opzEqjecLkbu4uSzdoh7afiPYKx14SNJWW+oLCpPDzt5VEJFQ
2n8t5sG9DhxNT/3RJxRj/B9KrF+ihq6jnnF8P9rQZTftzGVCCNV540KizhCI
EiXmMGPacOvCqd9Ptgnxpj02VjmlFVc15k4ytOuCS2iGg2gfhSKjy5GnVWrw
6euFN6mzuFjYvc3VV1vq5787Vzme7LhzFh0FtBDTr/EMzO2veCAMEOC17jSl
jt0kPvS1Ta6sY8OH0f5lxBwx5JPNPao0Cbjn5c8I2tmCFOGScZFmQozy7GKd
TSJQN3bvC3xtQ2lgn15wrxD9FzYsi91CYITffQ/7sUzosl7+dD5OiLENH0MX
qBBQzNhZkaDQgoU1+V6PdYXQY6aP3RlPQN7o4j2dyjY8NGM3PhcKsfpRKsfl
PInCH9sjed4cPLMxd1/rLcYaN4/lsXFDv0eLrlGnU9vQEDhqXwxXiFULbM4H
6xGYYJlvv+3u0PVfnG4SrBIOO/2l/M/lRzl971f70KGrGylSC2lE++/N/FfX
BAiftcHtcDYJHPH3XFDNgcmVu1PNz4pxotOt+Nt3Eq+EEV5iVgfm+6mvWiFL
YZ+v8sRrHiRmZiut+36XjfuGu7g5E8V4FXjQxKWTjg6eVt7pVc0Y9/VI+OPv
AvBH5SkmkyQMj4Uu7V7TgTU+Ns8nV4gRLP8IsdVNuDJlw+Ky6E6MCl9UxdxG
SfR5Y2TZ5NCjBK5WeRhUzmxD7p6UjCuvhNA6636dpteM+vMjp0cldyK3YjDH
zlOaz393Hq/1Zcri5QR0P0X0Zm1oRUyt0s/OfkLMVaPVOdmSSDWuStHexsa+
iUR1T7cIMS5eB00WtUNTNaZ4Utx7TM5yy+DFUagOTqwVaZFYueLQ9hfE0Ofv
bMZbPxWhY0CjzsOLwHic+By+lYnyRu/ERzeFcLX9sNgogAulE5vj+2sE8Hl/
OMStmoLOokEy5R2J4jvJnLWuHfgVJWmTXokl5rmk3nLf8lR4UQAPTM7WmFse
QqiUXtr0ol7q5787L+2MXeO0lg7fL2/VByc2otfPqig3RoAxtBzTd/cImDj1
n1E2YSE/7NwxM2UR9lj7qhjqkig5yQj91NaO9vuhqollInh15F03VafjQ+WW
bBcPBry1BuqZOwSwqd20x/QzCf0nkx7klHUgpf21tn6PGNMW+iZ6+RKYc5a0
nR3KRN/Dtoi8dCEsXis+96To6F8cKG/q1Qzb2u5t+SMk95Zl/e4OaePrkb86
pnPAkoe7ZHiXwwpK4g4dbvpL+Z/LV7xe7vxLEw2+XicGI042IOtbUKm7iQCW
V8OS40aSeG6YGjRjdzt8iMX3Is6J4Mr8JdmyjsCz8rkjJ5ezMJ1/ZF3IWhEK
dkd9Tmsi4Lz1wPy2RhZMj7Vb928SodbaXt96Oh0K6mkjRhxm4NrXsCetPgLE
2TgpdWmSKFBfn7f3eTt436oNVj4SISPereWGJ4nsOuNep8dsdCiyqx5oiiX2
c0k7lDhtNCK0jIRip9DLT7UDPRd1vo3OEg87/aX8z+XzArZe0jMZ6htnDb71
KbSCqvKPc9kqRPbVpYvLlpPYt7XNT9mcjTD5OYn5nSLwV9X+rGjJQsTU+5mT
x75H6jK3dO1oSqLPJeW5pN7iUKDc86WXxIoXWwqu1HSg+2yiF/rFsHoTo/NW
i0CwrGzI5GMtYFQ+/PzrciFCi5e7P41vgO++MWPq7/Kw/Olt+SA7yeeKw01/
Kf9zOXtcxoTDJB1euZPS03qbYN11sy9QIICpxoEgizG1SNNf8vr9Xi4qw3sy
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
5VL+P/k/AOOfQKA=
                "], {{0, 0}, {30, 30}}, {0, 1}], AspectRatio -> 
               1, Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["52383", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"715", ",", "715"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.10246564624187002`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.5`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.5`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.5`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.5`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {715, 715}, 0, {1, {CompressedData["
1:eJxV1nt01nUdB/CPDBnwDBEYjFg6htBQwAVSU7A94pBVA5bO3IxwMNB5IcdF
AbWcOmXKFFFDRbyFGBcNSLkPeKTpUEYHjxgllUAcsXPQI4XFEaunV8f90855
/fE5Z+d5f6+f7y+/pu6qW8+IiL0d4v/+MuhEl3bd6U0u+VzAN/k2Sb7b7ip+
zA3M5E7u5+esYAM7eZv3+At/p4NB9GQAI7ii3dVMYzb3spgXWMsODvAZnY0/
n1FUUMMs7uFRVrGLg5wkywQHUUwlM3mI5TRzkC/o2zGiqN14pjKXJl5kI3s4
xOd0OTNiGFdyO0vZwRHOtKDnM4FZLGAZ63mLg/yHAZkR47iZRbzGAU5zbueI
y7mBhazlPf5JPxtVTA0LWMMf6NQ1YiQ1LGYnn9AvYc+Y2+5x1rKHY3TIksco
rmE2i1hDK6cY3C3iWhbSzCecc1bEROpZzxF6OkAl3MbL7OLPfEHvsyOGM4G7
WcdhevQwV+awgt/Rqae94EaWsocvGdorYjKLSHGC/GznkQY28BF9HOJS5rOa
gyT6RJTRRBuJHDVNtJHoq6aJNhJfU9NEG4l+appoI5H7lUIqmMcyUhwl8+sR
QyhnDk/RzCEyzrFONNBCxrlqGmghI09NAy1k9FfTQAsZLmcJDbSQMUBNLU2s
Yz+nyD3P3aWeFOn/1QPVpEiTHKQmRZrkN9SkSJMsUJMiTXKwmhRpkuerSZEm
qXHUkyJNcoiaFGmSQ9WkSJMcpiZF9oURN7GTXoXOADvoqRHVsp0ew90Nmjl7
RMT1bKP7RRHT2cpZI/UUttDtW+4Fm8nSzKayiURRxBQ20vXiiGo20OWSiOva
NbGFj+g5yliZwVJaOUn/0c41d7KS9znj0ogLqedd8r/jbtFCdrExs4lMjbWK
1Zym7LKIZ/mU4jH6GocZfnnEfexnYIm+Qys5Y60RW+l6hXvDdB5jJ8fpO06f
ZTYtZJfKZxOZGnoVqzlN2ffk8ynF35fPYYaXyWc/A8fLp5WcCfLZSteJEZN4
lX8zsVwf5wRjfqD3cJSRV0Y8wAEKPCbzeYd+FRG3sJ1uV1t/1hE/1GtZzknG
XhOxhGMUVUY8yAdcUOWe0fFavZcPKfuR/WPQJPmkmeHx+oBxkyNep/91EY9w
mtpq+8eYKfokuVP9Pv+gpiZiH5dOs170me4OcoLJ1+tTFHkUV9CjVp/jOFU3
6v2MuMl6kHVzxB0co+KWiDcYNiPiGTJ/on9yhIm3OuMMrjNfOsz8yiXMZCUf
0nuWd4sGtvE3Bs92nnmS39JxTsRoZrOaw4y9zZtJ1u1+j/e5eK79J+Y5R7zN
0PneFD6n6g77Q3+P/v38lfF3eQPI/qm95E9c9jPrQOe7rTfvMrI+4mn+xZR7
It5k8L0RD3OCgvvsOUvYS0aDd4lZrOIQJT40VpJ4IKKO/RQt0HtJM60xYjdD
HnR2OUnlQ9aRvIXWiI8pa3K26PWwqfJHko9EvETmIueQfVz0qDPFl1Qvdn8o
eExf4DMqHtdXyH3CXecopT6EXqH7Er2f3zP6SXtPxlPOGG0UPh3xBKeYtFT/
47xnIho5Tvky55OcZyPu4hAlz5k/iefNn/0UvWD+pGl8Ue4vjJm85f6XwpeM
kaSPs92Uv2xMVP/SWlC30hioX2Xuq60bOWuMl4JXrBNFrxofpb+yLlSuNR5q
11kH5q2XT+Ov5b8mn7zX5VPog3AzyY3yKd8kn+rN8qnbIp/6rfK3ySenWT4F
2+VTtEM+pT4s91GZkk/tG/KZt0s+jb+R3yKfvDflU/iWfJKt8infLZ9qH6gf
U/eOfOr3yG+TT85e+fwXDsktZw==
       "], CompressedData["
1:eJxcnXf8l+P7/q/LDhVJWkZC2tqptLe918cWHyMze3yNQkUIISSRvSIq7ciq
ND5KGSntnZXN7z4ePY/H+fL743o03vd9Xed5HMd5Xvt+1zj38uMu2yal9PTM
lHLx57ZF2b4o2/H37f6/f+vvOxalTFHKF6VcUXYpyq5F2bkoOxWlLP9XruSZ
XUve24X/L8vzu/Cun9+5pI4deaYMdZS2Waak7vIlz5bj/fIlde/K/5UpabMc
P/O75Uv+v2yJvaW+1SzKvkXZpyi7F2WvolQuyn5FqVqUvYtSkWeqFaUK7+zN
s/sXpUZRKhRlz6JU4v0q1KF69+CZ6jzv9/flmcrUVbXEjooltu1F3TWotwL1
VCupaw/qqY4NNXmmCu/Zlv35++7UY98r85x9rlJiw160tef/V4/bMkZ7UK/r
2ov6q1JPlRLMKpS8vyfvGCu3b//2oz5jYYyMX03eL+WrBn+vSf3VaNPtV+H9
PUpsq1TiVylmlVNoohRT4+d2Sm2rSJtVab9iCR5+f/cSn91uzZK2jK11sXeJ
XRVpv0rJO/uW+FqV9nanbvvp/6/Ou+Zqb9qoWNK2392Xd6vxfCXqq0I9xsn+
ORZsrzHzv6vz7B48tw/v7FdSv7VfrcT+fXimOnWZT3NciXd2L/GtGj45TuV/
56I0KErrorQoyqFFaViUTkWpX5TaRWlZlAOL0qUorYrSpihN+PthRWlHPV2L
ckhRmhblIOprVJS21NeeOuvwXDve1886FqVDUeoWpXFRmmFTLdrvip1daKst
dh6MzV35WT3eb0PbHWm3OfW35PkDsa8179mnBvjVmfrrY19tnu+KzU15rj3t
1OG5tvjemXfb4WuXEr/a4VdX3mlJna15tiM4dMCertjXHH8bUldbnu1SYseh
tF2P9zvRXtMSf9rSTmvsbk/9nfHTXDfBrkbYcVAJ1q3Aw9zUpj371plnmtBu
F9psTF3W2oHYYb21BKM2+HYYWDSnnga0cyDvty5ppz62GtM22NYC3GpTp7Hr
XIJdPZ7tXGJjR/A5DJua4l8nbDLX1lVr6upCm7XwuRG2teL5ttRjTXbkuVYl
7x9Mu11pt0WJbZ2wqz4Y1AObRvjcusSHw6i/ETZ24B3rqTSWOuFnKSYH40c7
bKmLrS14rhN1HUj95r0hdjQA9/pwdGhJm11ppw64tMJXa9b5oz5tmocG2FGL
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
ciG2et3oCjiyHs4t4cM5yWP4Y1L0c+4PrkoRvx7/nlVim9f5bkyx7nhaivm5
49w6sn1npBhLeK3kAmy4JkXs34Td7suvhDfZ7bGF/OuRYqzeM8W42WNr9y32
9Raw89zWawteG3Wf69zncf/lYOc857Vfc+wx/bUp+hxzcSlceyxwc4r1fa+N
n4atPVLkCvePjvVjStrwGpLH1GenmB/2SpG7nBvOS5GzvB/n9R/PQT12s09X
gOUR4HcVPh9OXe4vPYbxGOB8/HQf4P7kCDBx/R7nX4m9N2PHWXB5QYpx5g34
73X9q8HLMXFKijVr2Xl0ijmG16zlw3NFeakoDxRlRFHeL8rHRbmvKB8W5YWi
TCnKy0X5oCjTijK9KE8U5a6i3F+U54vyYlGmFuWjogwqyr1Fua0oI4vybFEm
F+UZ/v/TorxWlFeK8hA/G1yU26njDep8sCivF+Vh2n2yKG8W5ZOifFaUGUW5
uyijivIq9cvWmUWZVZS3qFs+vI39Y4oyBP/uKcojRRlblNlFuYM6R2Oj7HsX
e96nXWH0VFHewb5HizIHTOaCwyDeG4w9/XlmHHa8V5TxRRlGnfOwWXg/Rlt3
FuVx/JqFnW+C5WxwnoCtz4GbMJkEHuJ0AD4/hM+q+2mwnwnPn1LfUOwfhx1j
sEt2ToTnvtg+Fn+G8swMnpkLHm9hs7iXrvqBj+x7GS4fB8OB+PIw9ojv4fg2
CTytpY/x60Mwfh5un8W+l1NoU21Ln5PB4AHaHQEnwkwaeAa8rd3PwOdJbLkX
fwaD4wzqnEl9d8OL9TKVOuW/dTyKNsX17XAqf6Wfd3n3Eeodwf9Ph1trcizY
zsbnp2hvDrjfhx9jaOcd/JbexP092DMTvGbx3OMp9Cpc+1OP8H8MW+eAzTB8
VZ134tN4bJdd0ob0MA68XgSzp/FRHA3lnSHYOg77xe1EsBqdQsvzwHQAnD0G
Py/hX1/sno1vfs94SV8jU+j1I3i1Dvvh63tgbl2q3eHwNBH7ZmCrtGSNjwJP
6eRJ/HTeHMl7M2lX+D+BH3enyH334c9UsJ8G7q/DzV3YK75uS5H7HkiR54Tt
CPi5HWyegYMp+PY8/rwCPw+C5VjsnEr976bIbY4n2zkNH2XP2/g1m7aew8d3
aPMe2rqXtu8HE3N/B3Y+lSJvvoBvL+HvXPwfAYfCZzQYC/dHwOFl6ngCLqdi
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
Fu8++P2I9n0fwHnd5+CGptjznQLuXv95GqxHgcdU7PS4dHCKMa/PGs+Gowkp
zi35vsATcOo5xGPg+SYceM3DZ7sGw5vnb86RL6VYL+ufYlzhOfewEoyfo/7H
UvQFj6fYl/S6/gf46HGmx5JzU+hV+IxNsT/qsypPpJjv+J6Affa+sc8JDQWb
GSny66wU4wr3sSPw2339xynWD57BbufOu7DFe5el63Veo/X40OdzH6Jtjxes
R8+lvK7u8eV7KfZMvC7j9SCvJw1J0c8aL+8ReY90IpwMB5dB+D0nRb/+ZIq5
kdeQxmDPJynO3MuG23nfY+93Upzt9Jlw78tLT9LGU9juOHU+9XhpVIr7QLPB
9V7w9nmo6djseff4FOtmnu/7vIu4vCPFGVfheHeKOdRrYO/cfwe2zE1xR+n9
FPeNfIZ0Mlx6P8hj19dTnMObDiZjUsxHXk1xNuGtFPOgWeA7NUUengJevn/1
Cna/gX9PphhPPw0281LMD4TFgBR9zOgSTn2m2XPf27HD4+tp8Oz7DvPwyf5M
TLFHNTDFnaRHwMjzJdncL8WZbq8VSke+GzElxThddj0A/kOx3WcVpqdYSxBG
I1Noz2ND76uPStF/3J5ibW8GfIrn4eDxJnzMwQevQc8t4c1jbo9jXkpxBvz2
FOcf+2L3RNqW38PAYnCK/V2vsTyDb/djl9elp6SYfwtTjxGF050p9hO87+Y7
PI+lOON3L5yVzmW9JuC5yQz49fh+VIrxp+ci8uedFOs2n6Y4c+Y5krXk+1He
J5sMFr6/MxD+5Ec//B+J7cNS7Em9Bx4+m+A1PN9fEH4PpJgHzU6xjjoLTsaD
j88bTIKTu+HzLTD12VGfzfDdNu9buT6v5U3Gvn4pxiFzUoxTvEb4CW1MT7EH
8GGKs6bCejRc+uzHyyn2reVjX3iZlyLve9zhc4tj8en5FHcvXknRX02Et6fB
bjy8TUlxDsd7AV6DGJJCI1779ZzXfbfvU84Fq4/BRj6NSDEGejVFH/gcfE7A
3w/xaSz43JliL3pAirPWzht3pLifY5y8DjwIXrxn6dzm9Sr56LG5z/Z6vdux
MTjFPdSXwc1+eU3Ze9EP0K7P0Pme3X0p5po+9/s2to9I0Zf57Lv30D9Icd9v
Crh5/WBgij2D/inWhPvBge9neB/S57+9zzO6hOuHU9wP9fqwx3nOnc5Jc/DB
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
Yt9DH58T63docaXPjLWZVY5ptZgccyxg9ooYnCp5zk9oCB8m51eI8dMl1/wm
i8O4ku878PxmyVoLXui8q/HC40G5Id/vk58pcjFBPmMvA7oYKafwg3ejue1i
ONv7PmasR/x78ul68VtXct/hMMc7yTE945hOG9PTjuWEmE6U09BCKzljHoAv
rilZ/46JGbzF/ttY748zFMA8zmM5LG7xPWOCMeGlc0q+Q80v2dsNr+3k+g65
gE88DQ3tKZlzMU9rUnIfyA5xjfklmugpXg3822P+LfffUNK/HxEDcJrrmO4V
3+hdph6eMhZiekXOoo4NEaPYJz9O7EK/5MLbJb2W2OL7JbiMlkt4air2E+U5
9mTEPDb2yMBvLzlGz4fEIr6n1JMPvAMtoYklJfeuwf3Gkn0hD4sf+d2q5Dp3
+HrU/bHiA77UoDjr5n7HG/uBxold9FOBdxefDybN5GS1HMPRQvGJPruD4s14
Ooj/UPnaWtLrHhJrOOwuvsSFRt8UyzHGDf/zSq69HpYrMKJGowc0MFN864j1
RjECf7weP1ohF/vE67iYRd8K3K73Xnc47onGd3PJvVz83RzvfdR7Eg+63u74
GPM28ZjlGJ8r2U87QF7QJnX1BbkLvsc5xtfkJXrbiIM8oTZMF5PoTYy9No/J
8S45o4aTG8wTIgdel/9G8nG/XMJb9HRRE8M/ow+vjtyDLbX4NnmG37klezVi
L8oUMeho7OC313/fqmRd3e2Yif9Uyf2BeHmslz0s9nVL1rI4r+iWkn1X++QA
HKLnm/jwmtDREfloYzydxOVOMYt+7PvkLuopekBPC+UDDMlp5grRKwTf1LQF
Jb8DL5GzZ+UWbaCfO+QZPQwU3+CR575nLOQJNRBfP3DO34LbSePuWrKn77mS
+zcfE++2Jfcm4Yex3kve9jG+2Jv1ghjD26qS5za9ITcrxBGu8DNqwkjjxiPI
g+vEMvZ5Ru8E2M8uuZ8yeujgAb1ED9q5e0GfLulXcEDePFzy/QIMp5WcP2+S
s67GzpjR5Bz/Lfc8ty7Gnkh4x2PwwBNiWMcxHhHP0yXPF6SurTOW1uIQdWRL
yTnv8479mOPfL2dwE3t13pHzqMVg0bekz5D36HRPye+mzxpzzA96iMtt4n1v
ybMdDokjulkvRsxP8JFxJfsRqeNoZI0cR89I9BMPK3mW1VzHHftpxzvOY47j
ae+D/8T+igZisk5ulpQ8W4e40FO3kn2+xHGgZM0mzugHmCJH4PCiMRIzmqUe
4HfUAuo0PrlA/oiX3Botb0flNHrUwfEJuYx9kFtK7j+OfXnwh8/FXD7WZZmD
xBrwgJJ7weD5sHHx78c4zgniF31nZ8QyegKi13RFyT04d5b8phm6Wig3S8W2
oeOfZCy3lfSk8LX7Svpl7E2h3neXl3lielIOd4lf7JOMeRq1Y7UYgtFBuQKT
/uK8XnxblsxrtNVFnurI51rxjrV45i6xl2mG933DMYXXggW5QZ0jz0OHO0qu
gaC1WK/G32P/EtzgWadK9hk1F8+YH4Iheo8eRPz6ReNdXLLWvC0ejB3/vEWc
T5c8jw6OmFPEt8u7xJXagYe3L3kWA3UD7d4txrF+SF2Mb+fUE3RIbcRPnpJX
6hteG9/ruc9kxzNHbLjnSP9t9Ck+KtaLxOqEWL3js+5zXGiUeoNWVpQ8L2mQ
8c2UY/I3+hJedvxg2k0M4Gal3MSeR/RzXC6my3cf419mPGA3VpxjX+9yY0aL
6CP2bOK5D5asTeD7rni9J/bUi1flFw9BS+RLCzl6QWzmiVXsoTxScs/qLrGK
b0XRpzXf+7UVO8a/xXHBQfTEgs86ObpXTHeUPCs25h2PO/ZbxWOm428uZy8a
C15CHcF78Hs8spM4RP2IfQhwdrhk/99pMYT/JvIQ7yzgMVi+14vNYvl4q+Qc
Ms4WeUfe0dUG/y72JUYvDbxH//UjJfdDvSK+u/x78v3tkt+JuH9Tx3SsZB1c
I9Zg0E1cY19jI3FdIhZwh/cuFwewG3IO19NL9t+Fb8IzNaSfmIE5Wtordm3E
74C4wBn6WSVfUT/AGh1RC9BIfGOcLefRU4pOon7eV3Jv21DH9W7JdcfoB2XM
zzh+6k2c67BCrqOPGZzIY7SK7zUTn7nif9LxMK4bjGWnWL0gX7OMs7WYPyon
cBT7odrLV+xtjP1p8LK1pD7A482S58rdI15LxX+qeIEjtQ//nSZ26KdhyT0R
G8X1oLyiubfED1/dXXL/6wOOEb+PtaQ54kCc1IO64s9zTonFSyW/h592PG1K
7o8nHrR5R8lzMxhr7BUk7oFyE3XsKePG3xaU3JcPDntL9uPOl+dHjS80cIvY
w/2TYoUHbhKDHfIF39ETB9aNS64nz5J3cntJye+N0ac8Q/w2i0/Us0cdA/d8
Whx5ZteSPUKvONbXxDrOr6AevSsGjH1QybMRVpfcS0CuPlOylznWmU8Z6wPG
BT+TxWinmKJ/8nKlMb5Xcl9OrGvWl6MnxBEPoY6hG7wpzg2IPpLgek7JM8Hh
Dl3gm9QvNEGeoZfmJc9gmVHyfNp14vRsyXW6Nd4HrsnR8OPoQdzis9vLAffv
6XNPlqwzt4rB/SXPp94mV9Sbt8SnhzhH3+h6OQtfi29yj4nfayXXbIlrsBwQ
X1/xwBPQBhqOd/BrxW6PHMY+GXigzkVfwTsl994/KbfwsLjkusvbcnRzyf6C
d8TngLEwfvxlgs8jr+qJBfF0NpYG3hf88bZV8vG0sYQfHRLfuWKPJqk9+PXz
YgIe8b3/FXHYKMbz5P5asYp3gH7ySA1qWvIs953yNVNs0MoaOeglJtEz1Kbk
ufNgSP4eK3nGQ+zXf12Op8rJPMcx1ufe4L/dUbKXpLWxkNfRD31tyf1u6Aid
b3Wsrzu+m8UTDTeTs+gPeKjkuTlRn6LHeYZj7mCs4NDFuObIFTHHd77oT10q
1rvk6KSYRB/Vq+IzUSz6y9c0uYPT6XIGnuikZ8nzpqOnCa7JEfIz1mZjnWVh
yTkteo11Eu5FnSFH8f76Jft/Yl9ER2M7KX9R56gjy0v2CRx1TPHdAPw6ie8b
8tFHvuCWOhZ7Rq8TL/iM/QexnoQ3rZSTwLazXFA78dsRYjq75HmldcUPv4ye
gVkl9/PEN+bYDwRP1J3TjntTye9Pzxr7HY4lvn3x/Ov9m/hueVSMdng/+Ngi
TuuNK2JYZFwPyll8I+kpPsR+uGRPS/RJxntiX3mGw3XiHOuz0Q+5RixivkMe
xX6cxWICN/jxWjkEv+iJju/PaPzc7wbgjK6ih+Rl8caXp/u3sRb2kn/7gPeK
NXvG87C4xl7NN8Qwci76GDuV/E6613FGX/VC8Yi9kK1KnmPZXh5uKXm+Frzj
aWignxx0EQ+wGiLWc8U95vS9xHuWfOEpS8QITXeT0/klz9IAk41ysU6u4YLc
QT9o53n5ivV09BXfqrnfPP+uv3G0MV5ibejf7nasS33+DY4XzGc6BnAYY5yT
fH5rYw+NDBRrYn5CHE6L83PGAXdr5fU18T8p53BJTh+WQ3xmRcnfR4G3+Aa6
VSynihW84mXrS34TBudd4o7P9Cz5Ww9wiYeHZjrIZbwPxL6f2Dc/wuftLbmG
yL3G+/zJYsL4Xyn5OydtjC366GNv2JPywbPjm9JJn7/bMeNJ6HeaY55f0je7
ljxvr23Jfb7hh3C8v+RZuytK7sXpI/549oMlzxiE4/D1d0qe0RIco328EF9E
G4vE73jJb/ngjg7QE5qeXvLMhr0l98nFXojox7i35D7zLSXPUG0idoxrhzET
e4+SvbhLHEtnuYo9Z8R/q7yFP88Rmy5iDGb3l+z/xnf6GvdgeSKu2B+Mp5Mz
a+Sxrny9I7bRTwlXMcc7Ki5vihv4oA/0EusPYN6upA+jG/LkFsfWq2Rv3ST/
+7nGttGYXyp5/gX4xh6y2IdIfNH7Hz0mnXxmN2PvZ2w7xb1uyV4XxhRr40Pk
9Jhx75OTu0ueDw6Hq+RsinGHV4bHwRcaD187Ik8zSp4TB87txSX22uDB+H6s
v+Ar74k7Hk4OxnrJkyV9fpuxgM9Uxzau5L6V8PNZ4hQ1KPbsvFCyl/1kyTXY
d419kePbKq7o5pmSdaRTyfx+07gXGyN+hA91L/nNHb7Q+P/vg8R0g/iRB/PE
G09/TW47i0nsowcrcn2SXK6Wk6gxYIin493xDRa8qR1DHfcgxxPrjStL7ql8
RnzIscGOq8U5nKEvvCx6HGMPArmNdvBB8vF6x/m0WKBtcgPNkH9bxPuk2MX3
LLCNd3A8ED3Fvk78ZYeYxjp/zCkni8+Kku8qcExOoN+YQ+OtB8Qcz8WfR4nv
oZL7bevLPd4T67Z4JpocYkyv+NwV/s1+Y9orH+ijgdgxjl4+r4WxDZLjlx1b
9FB2dYx9xJIxRQ8lY9np+OKbAdj2Kzl3HilXU0p+N4m9HcvlBY7Jk9jjETqo
J75g1ko+4TX2m4JZ7EdB1+3FKfYFwvcxublOvvE4fCzW1OI9OXouTjre5f7N
MmN4TwwedDyxPhvrsbHOO178Yp/LrpLvb4wXHUTfDvn2kuMiBxoa12NyCRfR
C71afJ4Qr4Ni1L3kuWbEiy+Rc0PFelHJ7+Xkz9KS3yCekTfwmSlfHcSyi1iS
q/gIXoAnbBUz/ArvQE9o5Fbj5b6jSp6pTo48aeyxRhi6jx6vQcZQXwy3yPtu
xxzfR8jVOeJ/b8nvoofFK2oPnPWQw+ly9paY7RG/1cb/njG8ahxvluyRB19y
/YQ4kvvrxAy9kCPtxB7fQB+D5Q//QEuxNzx6/KeVfEfdX3LP9vUl+/p4VqzD
kLczSq77xd9NdnxLSu5Hn+29j5U8P39kSa2CyWjH+awcrTH+OANguRzOFedD
cke+x1oRuRV5gybjvYUcfV08yPcj4vyOfIN/rOFHzwP+Ra6giYfF5xGxO11y
HfM9eYOf+nKMPvbKbwP5i3daxnW45FlCI0uenb3Z2J8zXvCbWnKNInq4p5Xc
A/qC4413hcmOYb3Pb+i4JpbcHx++A/ZvySt6Jpdal/ytgQ7y+ob49RGT7WIR
7wXwgybIR3LxNXEl11fII9iSh+gAr8BjxshdvCejpV3yih+gmy4l95CAEZoj
j2POzn3jPZR8RjdLjB+8X3WsG8WdsaGTJj6bOCeIO/kcZzXgD1N8NrkddeCY
mMFPvZLfJGJuSZ5FPxi5g476yh85u0As8YTYe/GsXEfNR9uj5bGnuKE5NIUW
yTdy/oQ44yWt5LWBvMATeYUPkAexXn3a/+16+V7m82Nv8PMl+/neK3lmb0Px
jW8fsWYWewzW+bzoD4w1vTh7YYvcTjX2JvLYpeRvT8V6N3GtMO5472ptLKvl
DezQzUn5Ca8H6+4lv5uBOXoLHfQseZbAu3I9Xeybyd8YOUAPaA6txRwUfaG1
GWLVyfGdLnl+3ZJz+Aa/0MAaY4p5zHq5ZBwTSv62YXxDRk9NHTdjqedYG4gF
WnxRvgeX1O0GsW8l7sH3XvFFu51L9hu9UrLOLJMbOOknF3PE9r1z8HhN/uAn
zuwAW7RxRDzBCx2j0SlyFvtoYv2jpeM7IX6Pe1/GMs+xwONB7xd9WWPEiHg6
iMfSkv3PW0v+Bt17Jc/Ejb6Z6JEDt31ysFr+on/0TbGMteOT8sr4b5DzhSV/
I/N1ee1inNFjhuYbljyPEh2gm9gDvKzkvB2c0c0ZOYOX9eId375eEufo1dpZ
8ncVN/rc+N79qmOcUXKP8Tox6WJcp4016icanCDuncW3Vcm+ajBEQ7F3+13x
XiNG8d58zLi7i01PsUAfq+Qw3jMmljzH61lxh69Ykwcn9EDuoRu03E0eXhST
9XI4VKwekQd4Rn/oY4EckEu9HMcRxx37rqf6vFP+bQ/Hde4egb0lf+9miBjE
N5N953DRoeTvMnYveQ5ZP+N/1bEPLVlTbih5/mV8a1oqJqPFcY24NTWmp+Xu
WfkDhwby214+54lpq5JnrKIb9LJTbPuL51b5e0Ysn5L30HwvOT1Tsq8CDd9R
8vsIz+PbC7k0q+TeMOJpUrKnIfZNPeHYyMFJYjNN7K8VJ/g5Uf73WRJ3ldxH
wZoB7/zRa9xCHCcY53HjuE1s+J7F3CJ6faL3mznOOGN/7Rx8wBaPin1s5CFa
4ZsZusHP8CB0cZ+8sPYQe3o3yQFzGzwLD+NbFtoZXnJvNNjSP4gnoK+oS/Tq
8c0PH2TuRe8d8zXWNdBlfDfk+x9zQeaH6BE9xTeDZ0vuJ7xDrCNfl5Y8sw2O
6hovfrWg5PfWW0r+ruNkMX5UDmaJT/RT3+O4F4tp9Cc8JYcL5Sf6sI+KFRyi
Kdab0MeD4gFH8+UPrQwyTjgkB16Uk+bGPVCMFsk/vKAlvBR93Fby91bQVxdx
HSvuh8Q6evrgqLd8wPkAuUIrsT8zeoDBO77BPCI/sWchejlivRENPy236IR8
IU+ZPw/3/39UHHrLVx1jPbf/5hpjA5M+jnuRccNL/ZK/wxL7kcGSd4JYKyPu
FeLzRMnfSUY35N40eYS3O8Qk3ttjrzBYPGfMo4xrXMn9NtGziV5fkdv35Bw9
DZGP2E93XBxiDygYoyvqJ/MFvPxlOYGP2XKEBmOPw5NyOVa+0Dg6Q8exD3WK
XAyQQzS2vOQZcWgT3R6V09g/h35jfzCev9JncZ81Jc8GukeM55Tcz/yUOA+R
m1tL/h5e7JlvLJ4TxTy859mSZxXCwXoxHip+aCLmVsTcVIxinRF9nHbcJ+QB
fF+TnzPifly+wWy+/ML79SX3DaDHESX71alV6A7/QD94Xl8xJSeeL9mHDHd4
xD55i/krmMe8Dm3vl284Iw9iL/ajcgR31OHoSYcncgXtx5ocNR3toEO0Qa1B
d6PE/RXHcUw+HhXHCSX36G3378C9vWMYU7K3a6qYw3HMq6jha0r+ltYd8soY
hskX2ol3cWKg1g4xziXi+4w8wU+cNwEW6C2+CcMJerlH7OMd5z5x6SGv6K+p
OJ8ueQ4V+J6SU7SGnpi3TJQH5iqbS+7LbSA3aGyVXETPb+eS++Gj9xxeos+G
/Iq9GugSfQyUrwFyh0aowaPlGM2j2VaOKeYqk431qBzw3BvEKvak93d8Q+Wg
hbGEbjbJZ8OS69CxF/Ok/KGF2G8Bpmgi5mkLjSH6rqkp6Obhkr8fHOsoh8QA
nI7JPfHOk68j4nWm5NkFA+VwphjBMXrAg9DV6pJ7KuAG/TwpZnjJiJLnr8ER
miUfyfkxJc8Wi++WW+QcLmJtgPkb2o11xNvklpxHi2gPTcXaQuwVQm+vl6zP
r4s3HoH/3FLytx4Zx83GPd14iPOFkr+JFPtOXnbMxLZEbuMbYXwTjfcocI7v
cpHfzcQSjkYZ+z3GAJ/UD/zrFTkBl8Ml5zrb5C56ueDpMfEEO/Q11/iZszKn
xe/uFlfwoU6jP3ylbclzLO4Q39grOazkeQ+x3wEeZ8oLeYa2Yv8c9ZpcJifi
W2ecdRHawDfIDXRH7cTT0P0b8jyr5J6b8SW/83bz3jPk6nb5IpaVxnCdsTcR
p9El+yrfLf/7/MctJfdFjDCON+QfrJcb+2S5govmJX9HepYYNZPbrnKGJzUy
vttKrgcOFvOY0xH36yX7e94p+Xs50bcwQA6ZS/WR73Ylfz97hdyjQXR0UMzB
kdxBs+jyGTmJ/Rsj5SP6HfAl9P5yyd9NQ5tRy8kb9LFa7tAxGiBPyMWYOwwp
eRbV7JLnZ56Ut05itUl+FotTV2M+YDyMs4dxvlbyt43f8rn7S+67gJtnxXmr
44x3tOPG0FPuh5b8rcwzJc+IXiPn4H+7vKGjsXKKJmLP3z1yCdab5eEdsYjv
ZW3l6lb5hO/Y33C9HKE3tIh2Y58FdYHahKbwu+jZbCo/6BWt7hVz8gl9MNdB
q2gLfaAb9B16jf1F8EvOxHrlWPEbLn4d5Gq3mBN3fB9sbAz7xauV95gjV3gB
NeE9cYn5Lc+cUHLd/hG5I+b4dtK25Dlhox0reTREXtqIAfihp8fE+1V5uEfO
Xih53un2kr/JDs/1xAatDJWTa8UsvrudkHc4oFbGnsnOYtpAvNHI2yV7AA/J
N9xT+8kragP6RX/RAxi6RMPoEY+hjpML5Ar14hV5myHPaIR8iZ7JLiXPuHrc
+8LbCsc7xnG8aNwvGONS7xvrBMPk79GSv6ER+4snyhUxHXZsz5U8N43x9hfz
4SXPdo+9bGdKrhcyN4r6/ZbxrTYm5j2PiC0+30guwHa/uIInmoy1IeZGaGqh
XKEb9POq/DIHw+/QJVpAg3hTm5K/g4B+0GB8c4N3dITe0eWN5/CMltFhrL3C
wRH5if08cIgG8RlyAC2hLXSGbtEyOYcX4+XUrMklzxQ+XvKs+YNySnzRN7XX
McJR9IXtkKun5CdwfKnk953T8kPtX1KyV574Fogneqgrpt3lBg7RJv68S84m
lfzdW/SzQg73GCN6Qpe3GDfY7RR/eMcb0Wf0IqCdqPlwvl0e4b2LmDOvQhfM
A/Ch2MeHxtEzeYl2Q+PkHbWUnKSmkE/UtlnyA9foHf3eUfIsa3RHfcRP0cnb
JX+fE9xeNf4nHVu80xMn3tfScdT1ngNLnptzvWOKNYLtcnpaPhqVPMcMjo+X
/F3N4XL9qDx3kpOlctC55Lsjese30M9zJX9//EaxbCxOaA+doB90dka8Yv8T
fFLr0DL6Q08j5e+oOG+TP/QcvfvgHftT4PdWee8rz+tLnl8V72hwi27I23vl
O/b84m3xnQrNonXy4Ba5JFfJKXQf+52JsZWctPFvFpT83aL2chM9yBvlZpTY
ML4JJb+t3SiPjUr2or9X8ntC+PEuMQTLp8VldMneaTCPc25ecbynxXxDyTPb
8TPqFBoJ34j1lSPyE+vah+T3oBztkHM4fUrcYi6zXAzRJ5pBO5PE8fWSv719
Qk7ge7j4knfoFN09X/I3RciPPXKP7tAheYLOqetDSv5uInmA5kM/6HmAfEd/
9DBxHCKOveXwxZI+dkLM1orLk/IR6yB3iOW4kt9FRjr+Z8QDfPARfC72DI4q
ef4qGA2SA7jvLxfxDhhxtC55/uaKkr/TGHPbyCV0/1zJXoDI51NiHWt7x0rO
ZfBhNPqWvDYUr3hn3iyHaAB9o02037PkmStojRr+wjm8oZOO8gon6JI5ANpD
J+gdPaMNNE4e4EPoGa2TO2iX/CKvo/9wtv/7CuNqW/IcVPh8Va4eK/k7udvF
CqzJiZWO7YSx3StuTeVqeMmzcKN/anTJdffogcYXlpU8f5K4e4sLXFB/8abo
a47vXGDfrOTaR6yxgT/1B73hsegn+rzekUOwQ7+Pyw1aGylncf4I2qb2oT1q
aHwjRxf47VHxx//RIZ5I/neXp3hvgU/mDmgj1vFiL2DMD8gXahJawvu2luzV
HyY/Z0r+jm9TY+/tOA+I4Y6SvQVb5Cn6KOqL2aaSZ47inWgi9rx1cyzXiEcL
Y4hzwoilR8l11rdL9nA1Mh50hZ4XiAf4o7kj4tSk5HeX4fIR/RtH5Rbc490O
zLfLAXpFB1PEF/2gWzSwUZzRJxqLHiS4Rne9Ss4t0TnabSD/M+SeehM93nAR
cy+0in7IGzQU/c9wj86oAf3k5GDJ30BaVPJ7SwsxWyEvrR1fzCe7Gkf0WMUZ
IP3l5h15G+ZYnyu55/eAmMa7YfQGvC7m8d18rTzFvOxNsQVjdIR2TsnXMjnH
b54SL7DYItbx3oHmusgzvLUVnzizJN4Ro+c0+gCukT9wPnevExpCI03lMHo4
8TH0ji7RHF4Z67jd5Kin/OLx0YdK3kyTf/R1u5xRx94o2VdzTEwWl/z9ujjv
5qAxNSi5XhLfveGZ3Eff0+Wjnnw9LLf75TD2aZ0o+Zsmz5bs6VlZck/HHjG6
sWTPVPT3R70CC7SG9jqL0wF5j++y6GlYyX0U+Ac6elGc0Tw5hwbI7fh+ErUM
f0IHsfZ+SP7w++hFQ1N4c6wJ3yr/aKqrHFN/om8G/b4mV/CH5tDFjJJnGJLj
6Dv6dNFBrLe/WbKvfW3Js4fb+fcHSvbixHpwzHPXy0v4YveS+3x2lvztEMa5
WtxCj8T0klzucJzRux79KGOMl/GukMNd4vJsyd/8RVfR39i3ZO3tIZYPyRc6
ebXkd6B5ct9fnMEf3U6UV/IcDZG378nbppK//4Ju0Q26JE8ayluHkns8Y4/h
XvlGr/EdYJv8oWN0iQbQCJ5CHk0t+fuQ6GWx/HUR773G07Pk74vCU+zRj76T
IyV/y7GDmM6Vr3iffFMcdsh5rMeMFiuwjf1KxBNrYPNKng0VvtlZzm80htfl
vWHJ9dCX5DjeTTbKWzNxifVcOFguXngBmkPP6Bw9bC+57jZMjsnhCfK0RIzh
IfpRos8tPDzWg2NPZugNDtFZ7LtEY7EvDS3H/j00To6gRXSORskPfAOdrys5
T3+65G+cRs/bFuNhHs08/gXvEe+4cbYXuMUe5QfFpE3J36SOvt55jv0+Y0VT
1zpOamecDRBryPGtbHfJ34QaLjbohNzcUfLsOfTEtzhygLpKbW4nLneKC1pl
fYhah1bQITqP71ixXzH6kHhPQQ+R72BHjSNfyCneTWIdOtZ0yAHWql6Wjyly
9Ki88B6BzsgXvgmSL2gN3eJx6JicQDd4IHkc7+LNjbFOyZ71lXI0oeRvSLWU
27vEjTy5Tn7Bp7vxPltynyMcRx8GOK8w5q5i95R8rxbDg2If34LfEVf0EN8n
3y35mxxoKvYczRX/B+VqttgfF1v4x3fQR3xrOSBOz4slukKjjUqeFwtXb8or
3jNPrNEmubVNnGPOid52i/Vzcj5H3uEVnUdPF/pHo2iDvEDzcd4NOkTD5Afa
J5/QHLnwuP8d+Xq45Ln2z8jNupLntsSeluiP6Smup40hzqth3IfEd4D4vS5X
d5Vce0Dva0uu/TJGas808b625JmVc0q+fz8kB63FFVzwyjpyfaZknzQ1Ct21
LHk+866S509NEM9lcoWG4ntF9NWj6T3y+2jJvi50jUbRaqeS+93QX6xjoVe0
+bIcxhpZ9A3BHbmCVtA++qHuoMcpcoVHolG0GL0LbfzPKSXP1SbmXt7jqP+2
n5hvEjPGfKpkbwQ8R98luHYTn/uNc6YxPCBHrYx9o9jFN0BqQHwbvEm+Y1/o
SyXPmLjNmB6Ri1Xy+JScoLHTJc9PjDV+uIs9Oe3F/TnxQ3voDJ2gGfQQPXfb
S9YLtB09QTvFG63hm2gaXaJdPA99rpGnIXJFjt9c8izJdfKC7tAcOkOnaA2v
XS63seYKdkN9Bjwxd2jouCP3z8gXuXW45Dki40v26oApulwrR2NL6vsmuQVb
8g9NLBXL6DlGO8PkPt4V8cvVJX/7BbyY59xfMleaGcsmeXpM7sD5zZIaPSoH
zUv2TsPhRrG6Vr7gHF3FN3pqDpp6uuT5cc+XPHsX7YRP7CzZ8x79d+gMvZ57
tktbeVkop7FXaavcotPoSULn5AeaQ68vlzyfFRzeKXlexOmSfaxRn8H5buMC
7wWOqXHJ89Cj3+QmMYGrveJBXm4Tg1vkkLHGOvCikud+HBOj58XwcTHoI7fg
hZ7qyslq43zb2OqX/G3bziXPFKQuLhNz+BgkhqvEDO2g6/juhOaoqw+K1zMl
z3ZHH9Qv9EB9R38DS54zfEBOovdriTyhUfwWT6VmxF5+aubT8o+2N5Xck4lW
Wpbsl9tT8vcUwapnyd9NDw+MvuO9JX9zGB5fLel/R0uenTZeTAbIP9jF95zj
8vRMyd+CmGN8UTPhOva0glUT4+gqJugk9os8byy7jb+OHKFH6gP6IVcXyB8a
R1forW/Jnt0JcoM+yJ3o0Ue31Eb0ga7xEnTyqFygATSEXtEMOXCm5H75OEMn
+nDRHDrsKJ9oC3+MHtB4d4fbOJsDvvG4+M58wni2eq+HSva+PiwfE+WDv9kg
ZwvFdKnxtCr5W7axNnNvybOYwSb6aRhTeFrHku8AaACN7CzZzwy/8W0XHPuV
PA++sTy8VLJXIvrgwa2peBAzOjgqRntLntGCjsaX/N0RtLRZ3uEx1uHAG+2h
AfSHh1OPyFG0gj7RW/QltpED9I720Sb6xctiDw716HG5JnfIcfKFOQKaRxfP
yjt5ix+tNd4J/vfRB0596+m44LN/yb1073rfRSV7naIX8YTjA+/YYz1R/IaV
7F1fWvK3mFuIf/QAop1dJc8Xih7oziXPIUIX6AHNbCjZwzyl5LnEnUr6Z3zv
AG/08boczJfL2DcP5+jupPgeLPkdDJ3eIMaxpxd9xToP2o796W/IQXgi2kNz
1N/mcsy8IXp+qMXkDzlCzY7vjuQBWu4oxzHH6eu9n5C72FfEv+lWsr8Bf4g1
1Re8z3PGyZjJnejPHSWPTeQXnuN79qvyNUisxsv/HY4v6jsaeUW+0A+1CI0s
E+d1JfduP1pyHzBcvyM2d5Y8Dx4so5cJPePHL5ecD6JHNHCv/FJLuoobWiPH
t8rhYyVrUuxdj7VwsEYb1FS8m5yMfcDwPbnk2emvyTM5RL7GHrPo98DH0Qua
r1PyzAbG09l7Rr/F6JJneLxT8hsL43pE3OFoic96Rq77GffRkvPjriXnD+Ax
w7ETfz35x0/alzwvBA2hmQnG1rbkO2kdMdhY8kzXA3IOR/HOCJ+xH/5UyfPB
e5U8Sy00HHvW0MoCeUVzg8QOXe2Vf/hFp7PlJ3oY4Qkd4WtoJOZE+ECsk8e6
ANpH72idOhA9KHg52kETk0qu55JP0auztOQZPc/K20THyH1fMp5HS/bB9hL7
N+TnBp/D8w87zpHytdHx9jHe7eK9RczinbCn44ke46ipW+Uo5qGt5eWIXBN3
fAfCd/qL0Qq5gOu35AbMoq8i9jOBIdroIs5vygecolF8NL6FoAm0gHeh0+i5
Qp9423rxnVnyN1vjGy6anyDH6OBluUPPsf4T+UYOoeln5Gx5yf19Z8R8gTx0
LvlbKoO9P/HHN8RuJc+4OCNe8X76hFiS0+TRiZL7j8nvWx0D2JFb+Er0FMyV
t3hHftF43jIeuO7nmEOvk8UE3bQ3RrDG7+4Vy80l95OhNXzqIXGHH7xisZyh
0Xj/oV5sLHmu0vXyBb975ROsYy955AK6b13yfB40Sc6RC7GPDE7QJ7pGt2i2
Tsl9vPCKVslbNIU28F90jiYm+pznxeaomI8qeeZks5J7mx/374htYcnf9H61
5Hlup+Vnstw+Jz6THEOPknO02EPwjjHEvORkyf105MtL8n1ETIaV/FYSc+0z
xttF7mIPRMylyIMT4k0uxl5X9Bn1B67JLXRBvt0pnu1K/r4HmptaslcQTaM/
9DSnZO5FHzeawofwILwAHW6U75Yl+zainwt9kG+xxkeOjJFfch0tk0MNSv5m
RZeS55r38jmr5ZX45pb8bbQhxtBSruA4eu97il3sV+kuH+RkPbmAo/bG9ITc
zTPW2K+z1liGldzTe1Tsycf4Vtit5O9ixXkd6BYtoS+8BO2gIfzk0ZLvcY+I
xZPyBv6Py+k6+Two1+gN3aGdIyW/U0+Sj+NiHO8T5BW6Ic/xitg3uEFO4Db6
2dAEeUVeoGHyBa2g/1g/blryN54ecpzMN9FVrJ12L7kfkjiZNzOvvk4MwKW+
2OH78T5PDOiOOoan4+HkKjUJXbAuNLPkb0BslpOFJdcMefe4tmRvUrzbxHkV
sddrtfyyXsR7BnPy6MeaXrIHGs2RH+gNPe0XZ7BHB6zPUf+og7GXiZqJDuN7
DXWwjTiia9bG0Fn0MaLBmG/Gt0O0GP1gaBxtk/Pxvse6FDUPnZGz5Nh8+Ys9
S+hxn1yuN4bo64me6UViFP3X6DHW+Rkjem4p38uMKeZ218olmKOJUY4NXcQ+
5Tgf5qmS86C5YvVuyf1b8B6e2kb+Yu8QfN9a8vzOuiXPqAGPB4wTPBeLy4sl
52Tt5G14yd85AbNDJX8fDa3Mlju0gBc9KZ/kJP6In62RL7RBLqMB9IBm+op1
9GnGfDr2Jt0lx9E/E+dHNJfjlfJIPqE1tNCt5NriHrmaIv5n5Lut+MNp7FuC
rw3G9rzjiRof+2palTyD8MGS546Oc6xdSu492y3WHUv+5hRYPiJn98nTcnlG
a71KrlHGvohFxt9P7N+Qq4Fy2lRswRFNNJLXTSXPh0ZjJ8SOGjBB3OD32ZLn
JcfZI+gNreAD8f0YbaPfh0ue7/+SXMT+GDhFK4vlPPZAUz/Q5bk9xfFN9dFz
MEL3eMxzYh/9PZH73HurGM0suac31omfKNmbslcs9pRcHwfnY3Ide5LGiHdr
Y4758X1izbhXiO8Rcd0gdtSXNiV7odqJIzz0lN9TJfUZ7wNDxRIcY+83mFMv
HpQz8EW7aGKEnFN30WZ3MUbDaA8NLhLP2G+JxvHsV0t+K0Dv+NoL8tO85Fk6
cIgP4kNoH+3dJU8n5RbNvF7y3Lr2JX/furs4U7Ni/Zcx9DW2RSW/z8d+MsZG
fYvenubef3nJ3zqCo8fEM87UYcxr5We3HOAFeEW3ku9WsV8KvqmX1D+000c8
wf9WcWpX8vc1wB59HSi5tjBcfMCcfMHb8cj64o8Xk7NoIdZibpdLdEme4T3o
E19Em3gkGsG30SO6Dc+Kb23RJx59OuTEQ/I/WV7QEnlK/Y+eLGrQPPl81Pij
dxpup8jF3JK/fRN9VafELfZj3C42se71tngcE/M2JX+3MXqqHih5LshjJed7
u8S4lZy9J0b9jHeC3MRcLHoF1ogv+MW3vFUlfwc0+lLRHbppUPK3KLqX7F14
RNz6yAFawxPRQGc5vrnkNzl46SUnYHydnI+Vj3YlfzsRPeFT6Cf2+qJB8gSN
PCsn5E7Mq6MnmzxAW2gavU3zGfvkbq3/dkPJd9qV8nVGjuBxa8k1+G6OqWHJ
fTqPyXszsQLPhXLytFzOLel31zm+3fKwSh5jDxOairORwACPel2Mx8h/fCdF
G4flvLVYg/9zYoZuppY8w7K//D9V8vsd+EyU19lyEftj8fgX5R3utss7XKOT
oXIGH9H7eLNcod3oS1st/tH78YCcHCi5pjK85DdreEPX8V55V8m1TDBGu4PP
iZOYmojXfXLzgLgwvnriCZ/kIHpHo8fEqK+xEeuekusjM0vujWsv9mvllLGt
LPk9NHpc4p3j6ZK/aQNfr4nvrWJLPpKz1xv7tSXPzorzXdAGGkMbC+QWjNDH
OnGeK7axnoIm0Omz4oi28bAp4jxLbNENOUNOkdvkAV6BFtE/Ph29C9SffiV7
auDxLblbLO/kFvne6RwuwCa8oq28oe+GcnrSe7xecj3i2ZJnv08t+TtU4D1U
7OMMAfIBTTcT832O62W5f6bk73RfW3LvSOzjnCafaAB9DRYfdBZ9xmC1VRx3
yN9S+W4pP7F/DT3eIGb3yHv0A+MJaIh8mC2mL4opGkY720u+m+yRo/vkJPrW
0SLaRiv3yvHBkmd+oo1Yw4ELcht9x3wZTtHtoZK/UX+i5DljsSeraUkvY8xP
G/Mq/66R8Q4vuS8RHZFbaA1tTZDPevJBbJ1L/t4EHBwTq26O6S5x7278YI0+
1ohnq5K5CO7zxKW5nMW7Cvi0KflNI+o8ukTL5Bd6mioP75Y873x6yT1UeAka
RKvN5BkdoOkj8tK/5F75V0quYaMjtBrruNfKNx4U/SKxBgzP5Ahan1Xy9+TJ
+fi2AIfoG+/AvwbJJdg8WfKbF3HXNUa47+h9lskVz79enOEVnYwS02eM95Cx
bpazeEfuI1eTSvYrgM0IOaPWzBej6KFER2iH/GohHwPFnfk27xr1S37nRivo
7g7x2C4m1G3qcsyH4Tk8ErzOyDu1hTob+0LRNjqKb9lvy8tbJfMi9rChuVvl
MeaP8IlWj5dcM2EesEWO8TlyYb8cUqt5ZyA/Y48RORV7bY+XPJtjk2Ndakyx
RnuH+Mdaeh/j2Ster4vJ7eK+p+R5zfvFfnPJPtrYZ04sDUp+85pgLOCPlk6U
PMf6jLhslD+461SyL7GfnMBl9IKhw6Ylz+5ZJUatxDx6/BaU/L0FtPq0uE6R
vzbij5binRa+d4on3MXa2xG53SZPaAaPQBdoPeohWiAP4xsA+UMeoQ/yAw3j
D+Q2OkYPc302vIwxdv5t9AJsl5/o637TcbXx79eX/C3jhfJBPsx0DG3lp7U4
dhOf6It8XW56GSPawafiDIJ9Jb0bDayVL7hHRzE/7CqvdUv2EsMt+iJ3hsoJ
GDaTK3QU/QurSn5fv65kz2R3MUObK8UY7baQ0z7yN6jkb9c8J76xxxMf7FDy
d8HgAR2hVfSMv6LRWIdAg2gdLaG72+WdfEC/jb1HrPEN8TngT/7dK8aTHMuC
kt8eZsgHnJJ/+Gf7kt/ejnt/+Dkknv0cb8eSa9E9Sq6VEcPDJb8jLZOPt+QC
vuKb1+tyRozXl9zH/GLJ3ymHe/yYPMNf0Ql+i7bWlPxt7zMle3zRx/qS59BH
jwtaRrNoA52gp9jLjb+hJ/SLRvBFNIMWRsk1esHX0AO1J9ZG0AQ5QE7gN9Hr
BEd4AfmILqgpaPtux8jfTi35G9+LjXFeyd/kAYsV8nO65Le0E/K8XxyIu5n3
jl6ZmN8dl094QPvx7Sz46CSmYH1Dyb7t6Esnx98Qj7dL/h7dayXffdbKA/F1
LHnuP/oJn9pSsp8cfyGnY88ReOIz6IUcQGt4yoKS53XANd7xhJyQr3vkA77Q
EDpD69EHj76Pyjl5R66gZ7QW34DgjtyIfdPkORolb87I5265qut9Bvr38NzP
+N82VvKOPGhQ8pw4xoCWyLl6JefdG+Ryodw97LjJg7klfzcKDNBAfDN7peTv
5ER/2qvyAV9oZIXcninZI7FLLt6St3Hy0bTkvnwwI5ej3wOu0A1abC+/sa8W
vTxT8ncr9pacL6G/6NmKPerb5HenHIE9nhXfdcE+1uaiNqC3xnKGRsgpcgd/
IQfIC3KAHCLH0RX5gK7iPf8Vn79b3qaVnA/EWh33WiaPO0ruVXur5Bno0SNE
PqGd7Y59Z8kefXhu6di3yOlp+dxfsm93htiBKzkX321blFxbJS40dlhs3xTL
DXJEPRgk3+REAzk7KH+xxzjWKqlRaIU8RHfoA130kDN0HHul4Jia/W7J/V3R
fw/O6A0/QmdoPt5r4C/2XaAramjsOY0+TrSCv1Eb0St+Ed+wu4vxvY4l+m1i
Thv9g7c73v5i16xk3831YklME+V4lGMi/idK/t7mcfHZVXIte1nJNebYGzLP
uMib2cbwUslzU+AUbe2QO/BAN+TONHHoIJfvyiW4o81TJX+LqaGcdik5z0DL
eER80yfv4tvnIfEFz9dKvpeMlCv0SG6RBy3FG52iSXKfPH5PrsO/0Ry5sVq+
4Dl6mOPcJnSFt0Wf/0r/Pt6T3naMcNKq5JnHT5c805dntherjt4/5pozxGCe
cawvuf7XQhxPievIkr1Nu+UyzhU4ZIxPyW0fOQVL8iV6iB4r+fu4y8XrJXGC
x+iZQ3vdxW60XMIXmkAz6DDW3uA7evOitwxMyVF0hGY2iyU51k/+wp/QPlpF
G+Te2pLfAuAFLeM95Bl+MLnkN4T4doKW0SC5ELnZX36ekI8dcvCuf/ui4yZH
tji2HnIzsWTtZTxo/vqS+0Y3OAZwv7Vk/2IXx9tObsEofDS+Wy4r+f0k3lHR
NvpB0/PkKHB8reRa8YKSv+GBHsn/90rOOeEv+mXBDD2g4yPivl9O0G9PcY71
kHpiTP6g833yg37IO7SJLtHVGvHFr9AdGjm3pw9NkQuPy/spuYs+d7iKHprl
8kVeoaf3V+973x/hoPafl9eusbVrcO36Qe3qV7sG1q4ra9eg2nVX7Rpduz5c
uy6pXXfWriG1a3ztuqx2/ah23VO7Rtaue2vXB2rXt2tX39r1wdrVv3YNqF0/
qV0Tatew2nVe7fph7fpI7fpe7fpx7bqidv2sdg2vXb1rV5/a9f3a9aHadWnt
GlG7RtWuj9au79auu2vX0No1pnb9tHaNq11/rcV0Te0/Z9WuabXrD7Xrv2r/
3Scc99/Vro/7t2Bwfu16sHZ9snb9qnZNrV0fq12/rV2frl1za9d9tatO7VpY
uz5Vu35du+6vXbNr1y8c67zaNb12za9dc8Ts58awqHZdVbtmism/1sbzG3Em
rt/XrgW1a0rturp2Tapdk2vXjNr1y9r1u9r1gDGvr11Lfea1/jt4u6F23Vq7
bqlda+WPca+WD/DfULtW1a7PObbltWtF7apvzPVq14216/ra9YXatVI8LlMH
n3Vs/wdNyuu/1f7vm2r/eZ0aWFe7Ntauv69dNxtT3dr1eTFdUru+WLvWiCF6
Wla7PlO7NhkrmDY15gtr12a5v9Z/Cy631a5/L2e1g16a165m3p+4v1S7dtau
hvK9o3Y9XJ3VOjE2qV1frs7qs1F1VisNjAmebq9d28Xoodp1QXVWt2CP5v67
9uxt1VkcyAW0taV2NTaWv6ldW2vXP1RndbFa7L/iv9tTndUt2KGx89XB/trV
tnZ9rXbdUbv+p5zVMvmHrsiFu4zvH2tXazlBJ18Va/Jwb3U2d4iDnGlVu9rI
YQP1AK4ta9ef8CH5XmE8xIy+d9WuFsa5W46ukJt2teui2tWxOusF8/27dfL7
B/n4irGg1Xne50Dt6uDz/snnHDSeJmJ8nbwQP7709dp1cXVWZ/+3nM33hvIK
1v9hnuNl5AB+843qbK6T4+geTXapXZ2rs37WqTqb9/ABn+3l7pA4kgvvq13f
rF1/W53NL3R7tbFPEN+98kxc/1nO6hOfwA+7V2d1A8ZNxXChGIEtuurmWA5X
Z3WHHw2UA/IWryT3vywO5FPX6qy/HJS7HsZ+pXGAKf66Q9y/I1boYIGYkU87
xYtxfkHMVnn/P5ezY8Jf8T68Ai2iHXwfH8ff0C36wyfQFDnaUxw7GxPeV2rX
t9QAOUXu4hHkYD3Hhc571a5/rs7mwm/EFb7xdmpWMzmFE/ymg1ivl4t9coYu
t3g/chBtdpRvxobHNxf/HcbyRcdILlfVWV3gsdSdLnIEZuj/L+Vs7D0cx3z5
ukpe8C18foLjxqepJdQ78h4PIDfR9b9UZz2cGojv4AELxREfxJfw48uNlRwZ
6Liu9F4/Fqcfijcax5vI2bHyhSbQNnmEl1xSZS2KWt1bLvuIIV5CHUAH1E00
S179xPHiGXgp9Zc6Rf3/gfF/wNiZb4wWS/BAP/jZKHXwPWOEY+oTeqNe4zXo
ifuiD/ydXKOOMm5qF5r5leNmXPjAH8T6KuOgtqA1/HKaXFGTHjQm4qdWkNvU
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
WZ5jfKD1dx9e1vq7ouZnzZtljVu3vh95UdZpbVdl7ThTw/aLb3o2Zq6PZhjU
s/SF5+PHva2/g86sUffFzdKj4s9erfdLzGBtTbzH3i2tv+cJ0z/kepFZ59B4
hGlZUIc+i8/mVMf9UevPj1pTsXZR63w/muPdOtqd1Pq9ftrgbnz+rlq+SXyy
fv219pTwZ3I8cMwvRN+Z8Xpk6/cFav/qi1nXna1f97Suer4bT19GY5k1N+4Q
bWmk7q6Ll2bhem7rj/Gdvitaf2fktNbfLWSeqb2nvK/sY0aNOLj1d/qpI/Wd
IcxibUE8pL2eqnZjDue3xUu8rWz9PWjWe3M8PiN/v3rHiqzZb3ya3/hPrnst
jK5Do9c28e+1HLf1qXGrouExWYd16UU7tv+3htK6zvOfj4YfR+fnWn9eEWfm
3pOynmviCU3Gx88J0aH6HT3qPIYv5lCzh1nXXD8i3pjpMGnm0muPj7Y0lPe6
RrNZ/OQdxmRbP9WTMFrP6+FRztRAzGFKBur+OWZrZnZsw6PzS9F5Zn6LbvVs
lPUdlvV9Hg8/jnd/av1+0j3Rvd5XYi07RG8e/GNA/zYjzy+Mjy9Gr3rHysmt
z2M8Gxitzw4bNRvwAyePxs+Pounc6LR3NKO/WcDs+GH0XhCfzm191j8tnu8T
X8wX6pn+Xj1HbXs7Or8Wv/VCLKonZtW74tFG8WZEWFCv1WAM3x1P+K4vzogn
r0RD+qmVl2Tt18TT2ut8Uvyi3T8H9HfyTot/U+MvT97PcS5u/R03L0enXaLh
S9HngBybdaj7v4oPZiI1cHg03Tpr5seiaDg7TOCknuO31i+jyYbxe2C0w435
z6xpfjg2OmwVP+TlymiNiVnxQY+YGW15oaaa2a+I/1gyl6xo/b0htaeMx9hz
foDPOg/ACobkyvx0Wf65S7KGNfnNQ1v/vsvqrF/29EN98Jv4Qnv1zPznmLaN
p39P/Szu+XBEjvnM1rO+U47Z+n7d+vXWzaOlOU79Hh0tv4jHo6Kp9ehDuP84
nlzXem3ZsvXnVfdt/Tuc9MEIzuRpZfx/Jf6ai7A1P77qt7Wvj3+D4p8+gKPa
S1LPxmAFq+eHBxybhWWsuFoVz7Ggbr/f+ruEb2n9e5q135YHt0ard7NGM9Yv
mb35+PscN23refvf5Hhrj/v0eL/zemuaES1vav0cmXdXxgs9ckjWwoebWz//
orfaYHZcv/dh6NPojCnz99JoX/cF6z4HJtbFp7q28tdoq3cdH+9fjU/qGsbG
Rtuz4yXP/xUW/xgfzai42i6an9r6fusT4yM+a+8zb6rXbxPd1EM9er/8s+9l
nY9En/vyz07L+tQFM3E9j3Z/dK69zKuztnNy/PdG172jzfRoSZcNojW/R4WD
6o3FUt2LdNxPtr4/acPWz++s1YxkBvggPpsx6/kNfmEHU4ui+WXRtLJczxS/
2/r56dpwULP7bfGGlvgaFz/N7+rLltEWY2ZFcwe/zK56JRZvaX0Pj/pc+39w
dG6O8+54sTC6+ffNwrvmeGh0Uevfi6TFkqyraledd47N+jCo1uwQzWpvw9E5
3hXxut4X8ELrMzBf1IOroy0d1CZ1eUDrz+zzd8/4jqNH4x+mzdf1jBdG57b+
juKTs/57Wp9L6zkazB0br5+NL3eFB7Uam+Ymc1Kdk6l7mDPjF/fmPEypeQe3
/h5nfmJ7ZPy7PX4U+89FR7/3U/r4rGh4V9ZQ50mbtX6tTd27NtqZH5bH0+n5
bfMkXsfFH/Xv8ta//Wpdm7b+npXN43VdZ50Qr619YY7drKUuHdL6s0fYWBwN
Lo5Ob7ZeF+k/NXrf3/p3luqa1Kpoqg+YqdS5da2/02p2PKvzTj69G21xUNeC
b4xf5gwztJorMziUrY/jGfZxvVV8wJ8c4c7sKSN63T9zfVV9NOvsE9/VJHOb
fnRB6/PZDvGA/vX+qp3i6/v57dofWtfV9Hz9RK/Qh6/KsV4Sz+u5qQk57nqu
8ZN4ifvdWn+nVM1oWJNXvMjbnHhndvswXvwv5/f0Pr/1d8vW9Y+6XmQmx4ac
Pdz6t6/MUxhVhzE7Ij6b3cyAeiRuro5/sqommuXMHxjUw5wfqDXqqvqjfspQ
XcPdI/rVvuwjcvzWsbL1d5XwWs+anzU8GL8Wxp/N4hWPz4nv9L8nfm+UY6ln
mIZH+y/i56vxpu5J48RcJFuPxBPrr2vx9dzSr6PbZ60/47QgGvDXDPDnaM8D
rMk3VtRE9VtdNSPVrDgoXh8WL/ikHqiZeL0+PsgEXrCp/9RzIurkPtF8p3hK
czzjrnqlPOEGj3Na/7bIkPhezwLOih44Vg/r/u6OrTPpOMbErwvj5Qnxy9pl
G7O/DOh6rcp6/pTj+qr171cMjL7Ptv5e1MPChP73YtZNU7Wv9hljBUuYmhhv
6Wf+w+MT0XRQ/NFPcWIGqz149f4ENUo/wooZTi9Up7+I3jgyQ24WPXn7jwG9
Zvwr+9Txiin1qO7L6As4wQfWF8Yz/JoXHon+X7f+nqLhWcuLWTcGx8WrXfL3
Ns7f8Bsb5Disc03r9/FOj088uCoajYoXi1r/zvuO8b/2/dwRr3Ei62qhOWl2
jn9t69+dPS8cqMMPx9Ov1vNnWXT7R+oUT7GHbT2Kbvrb7fGZ/6+GAR6ZN82R
I+L7bdHx2HhPc1zRkh97xfdJ0RnPuNKbsKbn6NdqfN3XwvpRrb9D2KwysvXv
7fqt/aPjR62/71yPPLj190XQTjbq/HlO/v5t0Viux7f+7EPNVWqr3l0z0bCw
QLexWd+X8YgO6snseL519DDD1H7YjVp/JnZZfOBHPY/HZ3NieTKw9XuEPJgR
//mKtZWtf/eT3/jCBjZHR7+74ismX4n2apys4W5WvNUHam7Dj/6Bx4Xxju+Y
Ns+cE//85z+0/szwO/mtHVv/Pv2N+Rs16z+Q394t6zo3a7Fe89k28WZI9JMb
s9bbOc7x8f2C1t9ZeUjW/lHWf1bW+6f4Us/fmRXk9f2sj84D4yfml2dtH0SL
h+KZ2v9KvNKLzXV1r39pfOOD2j+h9f2Nakz1h8ujPfbUy9oTfl78qufmeatf
3Bz95QIvuFavz2x9nx+274z/h2X96rAau1P003tx888BfY7YPn9DDfkia54X
3efEw4ui42fR2vGbb2RiYOv32un/qxzruVl/PTdnXU9FQz1ueuvPbtN2Yeu9
sd7Zwre58eSUaFuzDG3+FA54N7L19/XWdwf0yLo+ums0nxr/nozG/FB3MYjJ
zeNDPXde+/ZwrGbqtbWfgQ/4MROa0dR9NRt3Zsiajw7PP/tY1rIma300a7gi
a6B7XUt6Kd68Gf0/iz9mMrPJ+a2/z+zL+KMH1f3MN1p/r3Vd3zovntPhm6yd
H/W89/tZr/4jrzfEu1fjL01/HX/5rnZ8GCZOjc7qkF5/XTQyX8m9Hi+3+4YJ
rJizsIDVufGbn9i+J0x8EL9WR8s6r94uvmD7nPCgX2Hk2tbvP1afmRPf5Peh
/E1amxnUdDX5puhzXuvf+ti+9W/Z0lC90j/mRZcFWedr8WNW/v7Xrb+X69j4
fkE8x9Ut4aHeJ0mPe+OJY9659evCM6PfxGh1Wjyg1zOtn+vg5NLWv2+wYzxT
+8fG35XxX01VV2QEa2YuNaryxF+1ydyIva+iOa2/iL/mMLUU2xvFGzxg0Rzw
p+iOIXPcO/GHp/Jt/qz3QpmDtopX01t/d4Tai0e1D99mADXDrFPvTnkxHq2O
pme3/r2VR+LpBtHYnPJmjvWhrOeurO2wHD+O9ImNW3/+ZXnr3494MppMicZ3
ZJ0Xxi8+z47vdJwXv38br+hV17pwWO/P4PP8+ErDofGC52oUPnH2eeuzLF72
i8b8vyye69ObxXuejotH/DJbfR1/qmapSbjA08L1dJzX+t6n23Lc+u7++e3V
rb/L7qWs3VrU6cmt7416Kselto1t/TtXH8VjHiyJfhhVW0ZH0zFZMx83af3d
ssOi/9Hxcdvorh+aD+X6vWhoTTPi2Z3R4qToWDPqxdGQbp/Giz/FH/XBHKcm
bh+PzIbqqN6CJUzx7bDWv3+qR1a9wwN28Toyvvw4oH9jnLcHh4kv4weu18W3
up7rbx3T+n3ad7Kms+IjfV6PdodFj4HxxnHz5KfsdXw+vg3J7+7W+nuo5scb
Hi3O8f4pWpvNzG/mCH3+6dbfA/l59F3R+l6/2kv5UOvfral7SbKNs1XRkN78
Up/MODh8Oz7WM/jmvOfiF33MhdtF28qGGiObm7b+7jma6kcY3TbeyFldE9sh
PIyP9o/Gb97gVRbwUc/e8Ymecqfv6luD1juO3fO39e03otWVrb/TXQ5rLxdf
5URf5Ouu8YA26iL29PL/a/15le/zXN8p8a6eebAGdUy/1ue+iB7mNjMOVsyB
vNdH9VRz04fx7erWv1dWz2oeHp/1FjMPluWZJ5dE3zXRd+B6Gl8VT1eFASzJ
tllA7zMjYFmdNwthRV0xU5gn1Wuc1R5C9QpHaheW7s5xjmn9W8e8eyb6Wi9W
7s1v+5tq8bqs4Z95fmVp68+780p/w81prV9jfDzHIgu0ejbruznrl1O9dGW8
/ldmnEGtPx8/PR7SdGzWsV38xJGczorGONY7ZQBreqb1vxifzC/Xxfshrb+r
4PfR8tv4po/fEi4wjxf9RI2c2fp3EfjxQTzmFXbwjXXc1n5HmT4gHg+Mt+rQ
U61fk5W9g7LWL+KH9d0WzZe2/v2Pp/L3Z8YfxzK09e8H1P3fvaJb8fDb1vd7
8XpU9OWnWo8dNWxS/Kt3GVyf9Vnv81n/2qz1xHjKa3k/KuvHtrqoTuLo83iM
r9o7tjrrXx6deLQsXr4br/miT6kr5hK8/jCgf9PjluivzuJZ3dm99e9k7Bcf
b4rffMDGhfFufjzfKn6ZY/TIi6L3FfGnnsHF6qM5/idb709ftv7eVZ680Pq3
mGg5tvXreFdF129yDJdE0zE5xnr/0OGt77dYGJ94jIkzWn/XE2+HZc3LojeN
1bePoium1OlXo7daVM+48eGyrL/e34Kd4fELf9jHCj7UXzNNnbdiUr3FJF9+
zJxOdzMIdupZaz7rv3WPU5/G88HxZtfW31MrC7gaEa3oeUeO6eSslz9DW+8h
d8avi3M8M+LH3Nbf5Xx168+9X9r6d5x5gtOaHwZHz3Fh4dZouSa6fxGNlkaj
7+Kv2jKt9e8j1nUJfbGeO5mT9ZofVkVbPmMDW9fGU55h6en4/HZY4Je5pq79
3Bjt746nPK7eJrPvtP68Cr2x9Id4/nE8lDlzCgZb9Me2mcAMgdNPo+fV+b0l
+buTswY+nx+daKpnypi+pVfvHL14tG30c+z6wxGtzz1fZy2Lo0l5NTDa3ZPj
UcO+zwxwavxeljXiofZWXd/6fRDebB7dP45GvJiU9U6MF3X/Vz3Bnpmlnu3T
oyZEx+uiFQ33jef1rCUu+CBjZ8U3/OgVmP0mni6P7/jBCK4xi2GcmWVeDwf8
xSYm94gmp7X+XaBLW+9367Lu13OsN4cLHsxq/XsFi1p/t189g0jDsev5/W10
2DP6vREd9N134rceflWY4KH+rA/Xc4TDsyY6jGn9XX967s7RVD++Ndo9GG3O
bv27HMviAd3VqpnxHYt63C2tv6eHJ2aCT6KbWQenGDqy9TrFj0ta/wZR7ZtR
D8029XyF2WNevFkbz1a2/v5z3qvP4+LL46333OGtPwdRe5GwdVWOe0nr/Z+W
9SzhbvFr83j4RNZfzwheHx/3yhrrutqErFO/vC+aO+YXo4E1bRwNdolud0fv
2dGVh5dHDz1YRvD1XXTQ/w+KDnTUb2VMTcYR7vQizKkv5gG9dkrr77+huX78
fDzX5/H7bXyltV6BU33+mXgj+xjVE/AmY9g6qvV3LOF2h+i6KPr5jdqntWfr
938dv96v3l7U+rsUHKt+PCZ+yIS6okeNbv0cYElYWBwv7oxOdX9jYPQYEM/p
uCA81L3y6fGfxwujjQzPav3ZWxxsHV3118ejVZ1j6F3Pxue6z4MPDGHT/FLn
4rWPlP+Ywt3weDc1LDzY+pwyOV5iC394O6P1dx4OCwv6Vu2DrHOt2t/6RDQq
jr7J+ldFlzmtv1vk3fzGZdFOH9LDPs56/5Djrn0wPFMjHcfa+H1jNNslx/Ri
1rxjjm9p69cwl0Q/npyctRwTHd7O8V/c+jcfcCPrWHogutVzVjSq91m833r+
zQHvRN/B0UoPxxFGr41WWFMDcIMNdQnHaqM6r5arq0PjZT2jiO+r4yWWcDMi
DBwQ/35KbW2tf2vqzdafweGFPn5WtKDlvtFdTz8wa7klmqgVdQ1LvdOvJsVH
x8sD9XpQjp23W7b+7S7r1APMCWoNnvUv+dLr8SWrz7T+TM4veYapzt1pd2n8
VFtlVPZOi3cygTt1X88yf1wQz/QyHP2cHlnXBvQimVaf9SD9jQ96Sz0fhV/9
Uv3fPTo/HY/5K5Nmh+/zLAJP9CH1y8xjblFT/hrv674wX9XW26MPftVJveTE
1r8FVPcBropWfNggntT9j2uj0RXRRH06qvXv18jXuPj0dtaxOno8Gd8fyhpP
jXaftd4X7su6no/26rps42ZK6zPTHWECV3qBzGKlrolcH935PDUa/ZD9s3L1
ebTE6n7xjb56ysbxSs1YFk8WxZ+voi+/6pmjSdG/rq/gE3+L499Hrefzy6yn
ruM+nr/Dgx+zN3JYjp2+9fzDrjk++ZUzdWqTaDW59feoT4yu+7b+jPdL8U+9
lslzc3x1fqqHrYhGW8Tf/XPMdW3Y2tfEU71s62j/c2oEv2sOnhXf8TAy+i+O
b/Ss5+rUOhwPiLelFQ/Pj+br4g3eMHNbvD0iHjwUvXGp9uKp7i39Od7gSI+9
J97xaWx+b3T08bdfiy7f5e+sy5rH5xhqJvJ3x+X3VudY9ZOqF35zaLzxmyfn
OGmiXl4ez9RqdfYP0YqWv876To3WK1s/X9Jnbmj9mc6donlpoZ+NiBd6ht6k
xuBGTxkWz2isXutH+Huz9W8EqYnYUrv0yeo7ehW29Cv5wgam+I01fMgsvmVT
dmRsVPx5Kx7Sv/ZrrggHvFsbDWj7cvz7svVnfDF1S46RdvqGrKijv4mHfqvq
+sf5DcdYfeHsaPFEjuOC/K611v1vx1rPWFivnjUmx64nVMZnxvdprX/35NPo
fUJ8whiuqr+sjqf4XLSez7W/mA73xttL4q8ajoun49VbrX9LjOb1vg99oK6t
Y25lfMajvlXXrnCszmNTHcGKPjYpDOAPI79v/dkZ/eLEHLtju731e+Jn5Zj8
XfX1qKyZ/1Ubd8oaPoqnV8XDr6LBtdHT7+sRz2ctK+NbzYwbR68p8Xtt69/g
+yyaTGz9W4CzW9/vXe8SOT8e3tb6Prb9opPehSl8j4u2d8QrvUmP0WtGRUPe
1N4BNWNZfL+l9e+a0RyLe8U/mcCovooZdULPq2dA9OTrWn+nz4Xxed+s9dH8
b6dmfeqzGv5C6zP7x/kb86PpsKxh6/hxT/62OjwjvjresTl+mt0ZDzCiT/D5
qda/R+N4VrReB+RVndRbqm7qcXVugZv7o92UrH2v+DQg6z8peuqDy6IprvQn
3OgzOJoY33B3RHzaP/rhHxv6pdxib8/W35s2uvXrIJjCih6FTRziqPbequ84
UXvwih0cYeT9/O3at/RY689B0FLtrPne2g/Jbzte9UmtsI6fMgd+1/r7ZcdF
44+ix4fRfXDWcXJ8fT4abBpdFsXzt6PFjeGBPzWX3hEGWtZSrOlDdZ6xpvU9
WurtzfEbG3JdtXVtNOHdMdGLpnqNWooZ/aiuDdMXo9tEd5pisfYM6lej4idm
67k8fmFK35QfnOmZr8UnvOqN0/P/q0NqxQmtX2s6p/XvVV0VXS+MV9Yhz+oE
fh5u/ftq9+Z45Fgdeibe3Bot1YNfcj2yngNaluPUX/SMmgXUtu2jjX7zcvSX
ET1OhmQQD/jQp+6L/+rjc/FcbvSdunelDqmBB0YLdQ6TWNbzxkTX2fFPz1Rn
1ClcqEV6qJpfz9Oo92o5FvF/WuvPLKvbONMnMbdn/JVrvUS/XdX6Xmn6XJQ1
HRhNRkaf+/PbR+bv7t/6/Vl/V+1ZGP1mx59nWv8OzJ2tz76/z7Gva/07FZ/l
2E6IZidl3XTG985h4KN4/Wj8U7tkYUa8GhB/1TJsYuOM1r//tWXW/UY0vyG+
yFzV5dqjq46paSvjuWzjEWM4VGcfbv1b77ScGw/Wxne1pPbNzoo36htGhsQb
tVgdVE9fbv3dzrVXebf8/Suztj2jSWX20/W8eCHrPiHrU88eiC+Lc6zyW9dw
cfJ61qfG1bOBQ+P1nTl2PKpDH2ddjv3GeEG/yvzY+MbX5dGTZmfGP6xdEK/U
3R3X05NXtVcUPxOiGa3GxRO+qU/qCkY3jYYnx9t6f4baha9jWv+e8K3xEOe1
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
as+vcvz4XByfNo031q8O1vM47jvUcwajs07a133kqodHtf6s4GbxCD9fxE/8
ygBGZQO7+MMTtr4f0N+HjEc5cK6Ps+vi1RHx4s/xAzcyp9ao5Se2/mwC7/QQ
XOEHf/KnhxafeMIIbnArN/ocvnGiRutX8odD+ax6hRf9Cne4kRm5lhf5NXup
DfIl27+OD2Pi68tZg989O96dmt+4O3/H9YB7Wr9GdWh8f+L/97s8V5twNCSa
8ObTaPv7aP5t/MDC4fHouHj2Suvnzni4MtrhWF0wj2JxbOvvduI5jmSTrv/O
nqtBrb87hifPRuMtW7+/sV18qWuKzhNwqZ5hbHJ8p6VrSbUPh2f4wzeGbg0X
svNJ/Ocj9tVveZPBk+LpyfFfRjBtLsLy7+IR3vCLM7laEP/qGjJPsYkxuTim
9eepne+oqzKJVxmXb9n8e2ox3mRGTcCxPKtzK7OmQ/M7B0VPf79+763o+U7r
vfSorMdx8fSDHD+/MLNXPLowGj+btdGl9mWZH7YIA2dkDXVtvnqBNZkrMYZN
50lHR2trwbLs1J79ifFkg/hSe70mt973to6Hav4TrV9nko+Xoq8+izc9C8vq
lzzIi6yY9eSg9g9i+7j4xWv5wS1GzIY8MHebp1fHM9zJ68vxAy9YNTs4/5oW
Dw+L17iWQ5n6Oh7jR43Dk2z+PfsyZUim8Ffnb5jGp7ybnfBVz8HW9X05wSsm
MS275ukdcvw8MCP8Pc/5jo4eA7LuqVkPrVbE8zdafxcj/b7MMRyb48JSzehv
Zk3DsvZ6VgCXJ0YnOmPNfH50PKAF7l5s/Zu2z7V+DjoymlQt2Hu9ddLNvPBK
tH8767679d6pr58ZL9bFm7r2gOEXWv/O6rL4jFHc/Zh6+l7rvab2euMGl//J
+ctv4sfE6C8Xdb1GFmqu2CR+4mF8fFQz5Bgf6r38yjTeMY19+XV+ITs4wZx+
heXKfdVZc7lsY0j9lRX5qP16Ml57SA+NP46r7iG9md/1d1dk7Y7pmtbv/x2d
v/tdfJwWvf8Q/R5rvS9tHJ22yLrVftnHyuvxvO6hvxjNDmr9vt2tWTN+FoeF
ui5LdxmSVb1ks3DxWjS6L3o7J6nnLWvP3MHx3wyGaUzhxLmljMjCpPiJezw/
EO0mxx9+yAlGzHrPxkfMyszF8RkrsoRFnOMYI7jQDyfGY7zVcxh4M1MdEJ/5
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
eKuvHNj6O8uxV/OAbGJIraznxdRRPUw+zozPuMWe+opjjMiXnOFWJuucTy5r
Tz4e9Cq1oNiTXT0f97is684yMLf171cub/2dyju0/m5px/NZ1oIlean3VLyS
4zw0ujwZr9UA/DyXY6p7ePWM+e/ix/Y5VuyNjlYTss4fc8+bJ8uiH+/q2QWe
7B8N9JO3ogWWMD09GrwXBmi9INrjHntyKduHxGv1subF+6MplvGCpQ3CwL/T
19UEzMlVPYt0VDyq+sq3jePD4/FBrZIxfeWiMCCveraeK/f4x5Baox6qK+q4
HoE5+dUT5VC28KiPjm19bsOPXlH33/UuNV7O9HO9QE+WVX1K/ZCtula8cev7
NPaLrvVs2IVZ+7fxq86trG1w69+p3iTrq2e4+f9k9PpTvMPHT+kZ6oEM3dX6
vtyWNWEIg7KPk2Xxhsbz4rFjl2V8Yvm11r+VSKc1YWBpNOCx+ndrOJgSDT5r
/fkHep8ev2RUXVQH1Z2DW3+veO2BPLH1+fWZeIndHaN9PftL90dbf2+pLOF1
g/iLh9pPgnOZVGfwfG38lgW5wpXMyb8cYQPjahsO65oxv+UOL+pnvVNFjcSs
LKrn+K9rZ/XcuX4i8zL+u/i4SfR9MGs/Mj7Jwg35fccsn7Pi1ZT8rd9lza/F
/zVhAUc43T8aOg5M1Dnil/G75opHw8KZrZ9/WwM25Au/u2ad41p/XrX29twc
za6NR7JS93FOan1Wredqcb0g2r0Q7TD679zPPCjaXxzPeKu+yVtlHzcYvzw+
PBHvloYB/qiBajA+B8Qb3H/U+rfdsIG/et4dl3jCvtpb+zpktmpDzbx4qeuU
coBr+ZMPGZIndUSeMSzHeMatfNTen7rHqW+oIVhTJ3aOfluEh4X5fZ44P5uW
Y5sRHe5p/drrcdHrxHivTgyP9n/Jb6k/tR/Ysbu+LFsY02txhYu34rk+elZY
UItGtv7czbHR/cmsjQ72RzgnU+uw7TydHxj5X/ZOPBJP9o6OuHTd37k2ls1T
eMXq+fH8xTDBR6yafcw1+rgsy0m9/2xqvLosHunhGMKJDMly7enjmeypa+or
xjGILbmVH3tjcOz6gLxgTl1bEd/df5BlmXJvwLm0ZwMwqBbgvt5PgFtzlr09
9rTLiTqBr3qW0SznXBk/9uKoo/JyfP5vVP65ua3vkf5rjgEPk/Lv+7tYU+9k
dnU0p6W/WXvm/Z7rCdvnmO7OsW4WzfGshvyl9Xeq8hNH6sVZ8eu+1p/LnB09
7239m9onhQlcL2r9mSj+LwwXb8T/VdFYfTsx3p4SPXA6MHqf1/p36uQY4+p4
Pd/BT0xjVT35Y/y4IH7OCQP1jLQcYK6+A48lbOFYrZMV2ZOpepaN1+q2+bL2
J8upPFwX7/CKfazJu1zV8y9qhbzU9V75waYs48V1IEzWM4r6kazjEI8YUhte
z3oc62/zm/7738cDepjDaf1tNB4bTzF0ZNbwRI7v4Wjym3BBb7O148IefT5v
vUfh5eXW9/xcGq3Oji+4uClrxgE+94xmF8SDtVnz8Vkv7/CIo2ei+dtZf9VC
638jfvL7q9b3rD7S+l6I7aMZXqa3/h1XrNY93+vCw4PRc368wd6z8e+DeHtm
/JADrKo9ehA2MVzvvaj92Wrdf9a7v45pbFeeZFKN0hfwqhfJtVz9N+fXZst/
pGZjU4bqmXU5li281R4leZc7M8XF4UCPejL//6j883iZE082zvHryYvW07n2
Ffh9ft4endQVdW6raIWtz6PD3vHjkxxPvUdvXI6x7refk2N/ID6dHI9qzySv
LogPI+I/3fGCK+xg5fgwgImh0Z1+5kN1QT3ByqTWv7NFa2xNiScYxb2c4RjT
h8VrvMiCXMkBrvCPIRzX8421Z14WZEDmzor/uJadYnlqvK9zXPOJfGFept6P
73KDub/E7/8O6N+IlVfcyoocnB0ezHZmQxzr69hzXqI2qAfyYC6S7eXx+cus
YfP8/gPx89T88wOydms6Or8zPMd+WI7TzPdCWMDLq/lN8xmNHXedP30Sj61/
h9afS98i+p8cD61RvvRdMwW+zGpYNVOfl3UcHI22Wm/dZl7s1/MZfFwdT94I
B3KgjuNHr8A3RvBYz4ibr8+Jr/LycjzlYe0txoR5aUTr70HGNn7VgA3jz4zW
92Nj6Ph4pWaoi1PCgNzhCSPq9YPxvq6/81Eu8Cm/ZpV6/4H8yDkWzW61xxmv
OJEx2am+jy/sy7lcyKdcqRljov386GeWkrF3ohENb42+4+KV33k6/t7Z+nyz
NJruEA6mRettW9/HUte16/0rOBofD+n3UTyo5xVwheFTs8a50UmNODc+V6+x
rno2kb7Xxje8myVeiCfWjUvztNpR+wewPjj+O4/BGz6xjI2z4ivta/a/aD2/
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
+3g0G+L80daf+6u91xiSmanRxXqein+3x98lOTbaqPHq/ph4RX+MVG/22+Oj
m+PTCx1vPRNVzy36vXlhQKb0r+rRtef8i6x7YvweGV9w9HU8oCe+1No9W3+m
4aXoNjteT2r9WTw1HpcYNP9U77ktPNAFz7WPh14Y3GQ9z3httsF7PQuOX2zX
vSna4gV/8vKP9P7an7I63umVModZ/MqPWcpshXF8mzvqPivvcaFGyRjW8INX
OcENVkbFf3nFlWzLgZzKv4xv1Pr+Zvmoc5m63iSv8iSTD7R+nuXfqe+5vxmP
PshvXhed65mJFa3ffz0rx2QNtbfvlXjg9x+NTnzcI2tyDOPiGx+xPTraf9f6
u8GsZ5v4dUTWvLL17/TVNRY6DI3/k1u/F7Uua78reupnS1ufZfj1YLzCgJ5Y
90fwh3H8yI4ZSq2q+3+/bv16Xz2veGZ8xNjgeKKOmAvUOCzhA2vmi7qGxzPz
A06xJC8yJY/6EXZxUjNQnf9hURZlCO9YkQ1ZrP2N6pXcyQeeZdScJU/ygHP9
UJZqftOvd8pv4Pu8+Fn7qGoPyD45Rj6oLXr/Xq1fj3k4ntwRP56MXtX/sXV6
dH8z2l2ZY1ebd46ueJkUr+mox07LugZmXTXz1OzwQbS5LvpObH1WqWco9Ak1
Ru+tfvhM/H41muH+wHi6NvruHg/Vfz1KH8YVjtWVOnfRY/Q8tdnMVs/O0Fgm
MCsr6jkO8Y512Xg5XmNQP5dRc4HaLasL46V+KjPyXu8+4N+YeC+jeJERHKkj
soBxcyB21ElZ+FfOLcwE+rg6bs40L2AEi7Xn8pfs/1IX1fFds74fU4f+MaB/
E+Oj+P9VtLGmOn+SV7lWG24PF+dlTY51WOvPINe1oKWtn3N8EG1Xtn4P/tVo
xNM6X3wlxz063tSzLDzG0tFZ/5xockb0/TC+10ykLtS5cGVAn8MNRrCmvui5
l0avvVq/fqYPYARjesBZ8Q5LF8b3sfFZLjAtLzjDnIyrP3InK3iq51drf+V1
re8/kBF8q/9Yx8f+8f6v8VRNkw05qnuzcv/fXMOVPxzJTu0Nxitu1AS84QRD
8qJ2nxQthua4H2j9+0K02Kb1d3jX/V/HPSbeOab387dOy3EOiud1TePy+DAi
XmFqXI5pnxxj1Yeq37U/enn0eiLrpMd5WTf/1mW9cnNR1nVCfLoy3hzW+jtA
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
70Wjh1p/z8Wvozsdj4m/Q6IXTbAmt2oIlj5tfd/J5fGBVt9nb9Dz0UntkRWc
4nJ+69+Np5lcYVcu1D+M7xLPnovG37Z+rfEP8X16fOMjHv8ab7aI52qz7J0e
3+SiegCO1VT5q3tc6qr6jGO1BWdqntzhuvb+qC0yI6NqEj5/GNDfeaneYE+d
+Cl7nHGIf/wOjge8xe1r8YVfs/K79K9sOt5h0e3beDEpvq+KZjVzXtL6vpC6
B0yLn3PN3hrVlOPjC32KvwfCQT1vol7hVmbVipOifb0PRm2o/XHXxAvZXRov
cUAPPE2IL0OiJ8bx/16YwC3O1KuR8ZHOGMXOS9GVxzJFa7VndPRUV9UT+ZaP
V6P51fHw09a/w4svualzH3nFGjbwhjHZ2jP+yZqcymZdo1YP8XV/GMCj/GBM
FtVXrMi7WlD70+vZfHmWF1lSH/AiH1j8sPVrzX+NR3R9OXrU8/bj4618bJlj
N4u8mfUsyXHVnIlhNeLIeOsY61miyTmmb3PMX7e+HxZDeJKLD6Lj6hwvLeaE
hXHRdWHr36rGyqqsfZNo+Eq0XxbvMfZDro/+kvtAGP1ttDBLDIuXMjM9+h8c
P+hpHjPHXBjdcYxDmVNLzGDqqFo3u/X3XfJPfZwUv9VNTJjL1EusmeHMc3KH
H1nBqJqj3qld6qu5T36xZgaSt3oOQu3CJL7Nd7Irz+Yp9Ul21FQMYlr9HBIe
ZE9OsK0Gr42G72Qd9H45a5fLEa1/D772lE6LP7X3ADNqzAn5e/TFzcfxaK8c
Hw62CQPr64G/DbK2mi+HZD0/5J7EifFWPVJbvogmPK090NaNmXrXCW3kdVT8
3DJ+Y6Keg8T42fGIF5/HCzzh9KjofVk8HRSPMSlT98YfWtcedX6owbKAJ/Vo
03g6tvW91Tx6LJ6padiW7Z+y/wjP+JLZyglG1Ttc4AsTsipbaifm8SfzGJVR
Na3yi191AOPqRd1Lq70xeFV/670RN8bXYnBefr/mzy1bv0YnU7h07HgZH43e
il/1rB5vsPheNNsmx1TXLOk1JtrMjV7Y+DrHNjE61oxXnt2UY+ZX7aXYOd5/
F/35jEuMYmbX+LUiXl3X+jftH4gOcibbuMXmyNb3HaiH9Q6rO1vf7ytHMoJX
TOJDzdqh9X0G9by62qlm4kstqut7GJODd+LtIfGJJ8tav+6E8Xo29ac8u1H3
n3EuB5hXo7COqXpueOtwgC2cYBuDcqwmyyg267xTLcW8vKvXJ4eHTXNs5cWs
1p9/3Kb1ew6X5zfUkjrHcKzzosOy1vftXh29D462dT3jy+hT1zRfi3fTw8Dz
8e6ieL0qx751PODRrfHx9dbfkT4kHrzV+vkSbmRffcLac9GEN2rckmiHt11a
3/85NxrxGze1d77eKTGi9W/byoxMjIrP+JAL/Mj46fFGnvE0Pv7Ijzqt5tRe
7VfiC8/UAfnHGv5kQ+5k6Jv4K2s1D9d+ZTnDoVqvvsuRWqaW1350uVFva0+x
ei7zcovTOm9WJ/4/sDc37Q==
       "]}, CompressedData["
1:eJx8vQuYnldV9w0oJw98yKmCrXgA/RQ+1BeVk/KA+nr8FEVBRVH0QuVVFCjH
QrH0BK1tyblNSdIkk9OkSZuZSSaZNKeZSSaZNMdJJmnSpu00TUtLC5QWsMCn
15d59v377/f/v5O3V64+1/PMfe+99lr/ddhrr733T/79h975D898xjOesXj/
M5r/pjrn+3xX97+Hmu+PxOdU58D+6f8ej+ePNd8P6zN/93an1G75faz5HNTz
P9L9b6Lzy6+f/u+o2st2v3Tz9H97m+eein6g54mmvZHm+ZP6+/nah67s593/
x/6P6vfXW7tjQc8j8fvT4gvtMB7n35j4kvzqe/Zfnf13WONMebzxiw+e/Xei
Rb/Lo46H/pJfPt6d+p7tlM8TMZ6d+nT+7+wc7OLqlN4r7W5uPlc3vw+rPacr
cfyInk+6vb2p6P9xtVt+Xx+42Rx82dsa1/lwAz3nfu9B0ZPjAo/+3HBDV7/G
6/08HfgZll6kPB3vg/GZuB2O34fPM77Nre/Jn/8z/451run+N35eOZ6vf/Dz
j93/jkve534u5bE+6J9Seymfc+NkafB1RQvXLzT9HO5s6f53T4tff/zcj5/9
Nyy+zH7V7539N9C5Z+O/nv23pfOyv/3GS//2G4N6j+f5O++V36f0vrf7YKf7
8+wzopP3yu+Toru0u096Uv6+K/j0dPPcY53uxz3/rXbK7/eIvsQVvxc6e8S/
H598+0WTb79NcuS5BcPPXzj8/K3R3nDz/DaNA/1N/qE/iWf4ijx/9PN/d/bf
fOGk2/xFu0QP9CUd4PfPLx07+2+P9Ar6kAP9uVzH9D31h/bLeEZbegmdyItx
83fa8fb3xntb9Dxy836Otej2cY418j8e9uuo6HJ5jwqnbp+rf0BPwBP9Ix+X
X/qtKcmJ7xd2v9+r7+CO38ExcqM9xkN7OS7n00PCC+OFfvQO+5H2CP1KHMDf
xG3ignZeaP5rr3DH89DHe/DV8XI0cJJ+8GT4yYonj0cyztgsfrq/36w4x+OR
wcDFUX3SPnqb8nJ9z/5OBr0T8ffVEXdOyX66H3iwNV7ocX5tDlytbo0/36dd
xlGeezTi16r/vO90P6G/F70Zkj3i95e88fIXv/Hy9a2/Jz6gBz1I3DAO7A/P
l/aXNe8daP5+pHn/WPR3JOR1Uu3xPL/TP/0W+sclT9qFL+h3ee6E5Od0DTR/
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
W9mSB+Mq8fEDnV+ZhuXRM8HHdt68rLtjvx8S3aVeZixwvET9YjdznoF8ch3Z
7fdB4Sbzs05fzb8Veup+Bn7PODJxkfUWJT59NOZ3zKMeDvtbz6sp/ZyJdY/t
es7jZ/LTj4TdOiz7A1/e3Ozn4z3G7/mEM+IHuEb/3tzcV81znj+p55C6vOp5
Kr5f/Q7Jl3yix3ML9XfG8aLmvoRynnf1M5yzTpzKuemMg+8896LmnHJ+9/nu
7M5FcV65zpNo7qlgPC9u7t8BD/wdveMc89fbvQGzRf+5818bm/vct+o56Kb+
+qLm/PVXm9+p9+6BK+4V/U73PPehho71+jv08pzHQzWvAZ98XlrXzzlH38dd
67n9nrC6zz/jk+80585zr4z72bpejL7xPfPJtO/z2+Nqj7oK+MC5+T6+2ZI7
uOI97h9Bjw4093Lk+h73FqDv2FfiYfw++IBufi/tnJY8yucjMa6NwkWJCw7K
rr+6sSPIPe8lcD95TPN5+A++Cr0PNHrTL3xCL+/Dx9J8vR/v9c39aTwPv8r3
p2Pf+HDTT72vFf5xPyf9gIPChkfjXhDuM3pSfICv2JHy/ZsNPadaelP+/oy3
8T7yBd9+f8OU8IEdRP8LPc9+G7jx9dGHdI/c65t7DooenBD95fenxCfXo6fF
X3DB3w8094IznoLXT0nv0+7hn178mv4Xvaaf+O+KmE/Wc5u4j4S4stxvcmXY
0UX6Hbta7lu4XM9d8MGRl31w5Eb1w71mjtPZrXxE5lfe1fy9tPd58f/lS575
iiXP/JLyFvyd9UDoKn7nUul9ef9qjRd7w709st/d9v9D3/Gb2Em349e2/Eyu
u3KfHvJwfqyWf7zI7nXtEb3Ilf5yvRT+Zx0c44R++I1cLrxt4hW3TXxJ/oDn
ynsfjvz1zIa+z2qcBVc9Db8+rXW/vmf/1dl/S8TXcs/X4kZOK4Uf5JY4Awfl
75/ofLzL8Br3gwPHb5/ocP7VPCp0w0eNt4kftP7UyMfXFWt87vFMb8QvV0gu
O06/Zvvp19ze8PlW8bW0/9HWfT3g5E9f99A7X/dQj/Qo7110/Vymv3vc26f4
kXG+t3tPzkLpca7HIG/pWWNf3h16yCfPg4vMI+Q6CM9BP3Q4X5bpd/jtfLo6
4tlLJa+/vHbeX1w7r67bohfI/eKfu+nsv57O/Mu+c9Nl31lV8wWNPNyP9Al/
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
o8abOohjinPABXY6143cLh1R3VTG5V5nXM9NYn7t9X8nVN/E78gZu4v8ib/Q
B+rXfXy13sz1qJ5LzfOeVxlVHkVxSIMn9Jf5F/gt798bduDmsA+nZSdZfyr0
HYh8a93/Dy68nuyY1lfYt40cqStHf/wcjd6YZ14uu8G8Dz0q93nU87nAM/J2
/J9o1W9jB309aET15QuHn3/236nOVdNuu5d7ZSc0Dvwxeo+eQQ/xEbinf9f/
pYGTLZ1HmnMV4a/r47yWnL3+tuq94/Zw2KujjRzOxHx/Unzxda9at+/z47q+
90hzTutLmnNbvH675lHQQ+Tr/vGU6OO9X27sMPzy+PxYzJvrOtC8Jn/udnFY
/GPe5/Mw6jwfba0Lej74hPSy9LNLcix4f7A1fwXH7s9qXQ1+hXH4OuBDsvvg
D3zQntv1e2N9vs7/0Uv2a2BX8Htp93w/AvHrQxEX9LXynejhr02rz5V3tOan
Hs9tUH/sv/C6lUHpYeHP4y29eG03YHos8q1Hm9+Pav4Lnhk39Pg+vKrnPt98
qoUz5Ei76HkZ952B/3ruIHgDT+k3XA8eV5zi9TXDkbd/Un9HLzzvRn6Ie1DO
aDy043VeZ6R3yBN/V+YVT0g/sQfYG/wScRvxC7j2uua6fuDrS7MkF9f7Qdk5
8o2+z3VYcTtyRE7w+8Jmnwl65fuHvhbz3MOii/ahGz66na3npYF7+Ol4eVq4
8fXhx1t5CedX5o+OSZ/e0sXdk/odvfX52lQrnkCv8cecN8X72G+3D2OiD3z4
+veJ1nwUvLGfCD1yXNd8MnL2/MOcWl8U8wv8V67Low/MH7O+9Hx5NnDoelDr
sOgn518+363xf9bn4H+9rmaR6Obv4DTrkTz/NafO/xq983zyvIhTFqg+zfMk
SzTurIODnh9r6j09zzYz6o5nt9Zr3A9W+cB/rwdt7yfy8/f7tC6c+TTGPeeX
Xn7237LIS9bza6DD513XteoN4QfjK/SsjP1QPaqvyvp3nkNOL25+9/itnhvA
vtYfu2Pp2X9rhFPkn+t472ropT0+GbevF6L3V2g/v+O2p/O+pg6W/WUXNH//
ZRtH1iv3SD/x66q3b3Di68hVbzxvy/lOS1S3ze+JD+qac58cf2cdAjyyz621
78NweXXnxx/4kbP/aj2p/31FxIPzZa9vvn7v/Ov39sb467yAc48yb/GKLlBX
S+7gcPE3f+/sv3Wxznyt+oce/k69ga9bLmj24dT9qGU+PRj1Mb3CBfbJ7eOi
pu6n1h35/tGlsW5W646xD/TPc7kfEX+S9XmsU4Mz/KD7hapPjBv+If/MSzHe
XJ//0UtmXXDJrE2tdr1ufHnYxXr+B7gDTy7XBRoH9gg98frROq7jH7jh7L96
bl+xe+ta9WWZ53Y73iu5uJ+7QfL8s7cM/ulbBte35vnIi9/9XLi6Pk09PHzy
epN6nhTzBeTC747recI7+scn+kFcy/PY5bQz+F/8CP3mekyur2F30i6XOHYk
4rkl2r9Ce0nHi81ufla/c94J55iwjwhcMC7o8f19MyMvO9SKm7xubrvWj5AD
+V6P71ZUv9S0r/uXyM9EHS55I+wB46PuwPfz9Ij/rzf9q7hU3Nb0z7kmyJ11
Iuf3vMZ/7RA/yMNAT6n7XNt5T3eB60vi1z/94/R/GzvfeveHzv4bDP2s+XDk
Tn4+4xWvg/9s3T9h+K3nrHle82qdEwgfM1+AfrPvZ7w7n9/UoiP3V73c/Hjd
h8d+WK9vWKt9buSxVX/ctIffcv+0Wu/zHfm73s5SO+gV83G3U3U87Ifrmr9X
1nV87FTJ6yzW89TBqs7f6s9qPWTx97dLD5EP+EOO4DTtbMYt7qeGdL5f5uc8
z7Igzndp7wtFf5lnkhcFtzzH+iJ89f01dd+d14FsjTh3hfA47Q0vuGRE581Q
B8n5r/gjz/8MyD6pjrThF/us/qjb4Law/3P0XMYhvq+szneQv9vBvs7f/eDG
9/3gxppHP99ztJv0at7a+HP0I88VKfSNtOo80Xvfb3t5K970eGJM++CI/8ER
/aPv2M8/sf0mzB/3Kf7x80U3qE4fe4jdxn6St+e9uW+dJmiZ5lcu51rHV+rJ
Fmm/PfSQryYvm/GP77Nd1JqveXyzJOKtev+jz3+v1zm02B3Poy1r+THkyLjA
B9/Z/8jz7MPjuZzPca4of+c8Fp+n9UkPPG8+pHwI/MBv534B7FrGc8zjeJ56
aPTJ6R3X9+ko5p2vG5NfIC50uzGnoWdP5P/reVPsA8aPkQ8G9+zzIC57cprc
v10q++L19qtb8Sh8YT8I593e/5Xb7vvKbbVeJuu6sWdZ55d5SOII6tiUR+nm
P26VvjBfgP9el1bbh363W0Px+zWqh4K/ec8h8zf07Nz1o/Nb8zTPO8yUXsBv
7BB+FX0rfm9fnG9T5wfMn+RHGn0uf5+UvqI/Xj9dzzH0+fgc5U08v9vXinNp
B7vs+d5rtE8FO+X1SUOK5z0fUeeh7q9rvRn+VfOMOIeYcXud+v9Wl9zoC/tp
vB6oL84XqveJlPFdqrzMS5t2PI9Zz2WlXc7PQf7oHXEOz5FvZB9K5vWYp2R9
CvuIaRe+wAf2OTMe5IS8aQdcogecR+j1mwOxf2ur6lfhQ8oPfmJ/yGPSXqm7
qftxMv5MOXr+eo7+Tn2L74P6aNS93Rx+o543DX/AOfSTl5K9avZve/63njug
/F+z78nzY/VcbK3HBf85v8brcFdo3pR5beQAn9EP6hD5O+fg5jnQpX5xRHxk
3sZ5gV6vtkVxBHRQn4L8fF1gs+rNfJ1spdpT/tv2h11T13EbPfM4nPtBh2Vn
4Cf1tT4/rfvKMv5HP9E37KXn5TaLrwUP2yMPMaT5Cs8zL3I7NhZ8+mjLLrOv
wNeJr5a84Av49/0m4xpXsa97Ow921WtU9gccQw98Z16Dncl5pMc7NV/Dejx2
yPMf9T7zHBftZt2g708aqnU1Ud/g9ceVr4U/u3TuNfwjj0qc/byuQ9+jOMXj
39nCoc97hrQegFyZ58j/NfaB/WqOty3Cpc65tnq3Wq9O3Mi4ynyg7u/Me9R9
HjXeeU53YaS2xzyBfpED+OU8bPYZeFy2U3wkPoTPtO/76RdKP5Er/bBO7+sW
yxWXe/y5N8493q7z1H09dJ74TzzL/irfhzIofQdXxGHgF/vrcV6Nk6gXwl57
/uyzcY7IDcojowfwy3E2X+dYonf4YXDTJfvpOzU/wZ4yLvDCeF3PB/U79pv9
F65PNe/OeGa/6n+vRx7XuOA/eXev/5wUHmg/1wEYV9aj5jk1Ra61TtfzT0Pa
P6H8QVf/7hB/0AvicPSTfTjyZ43csK8+f611COAsz4Hwc22GZV/wr/Dvo931
s3o/E7/nvp/My2c85O/V+jHqJ6gbYR3K++sNPB6WfeacT37H3/r6+cHYV7BM
5y9m3avHm8vUL/hxv7Uv5gPzhDfv70rNHxxX82UfqUsmbic+8/qjFcqz+Dyh
7lcjHvL67mta52BTt4lcsJdZh5R08rzPJxZFfrPeh4Oeef3KuNYJ/r3r6A7I
Xnqda723gXo85EJ9C34m51dpl+if/QLEB+gb9fTgArovauqH4YOvm1+q/TSc
R+n2a3lr/OShEkfgF/tOPTPt4dfI74Aj5AZOwbv78evi/IkVEaceVPxIHSu/
I2/8Dzgu/vJw7B8ZDb1h/1PVS/Lnvs90XJ9+Tn+v7Bt4p14Pe8s56exb4T3s
DvLx9ZYD4hd2h3mi709YrfiZ88mpSyf+xH6T7/H7IiZb46TuDLkTV+R8AT9G
vEQdp/Nr+Dx+qE/y/FR3vfWuiP9PKF6iPeyGn2MwL85fni88QR/rIp5nq+sH
2Ht+L7Ct48A+8Tt441xQvtMf9LE+hx77vLiuq/o+8w0aP3jN9RKP72aqLtHz
ppPS0/J9Su9TJwhdxDleR3EiPsfFH5/3D+u8d/Ks8NP3fU01eeR7ZW98frZM
5/H6udY1f4Tdo1/mOdS5Y89ZRwB34Le8d0p2m/FlPSpxs/vrKcWx+Ev4mXUC
0O12sy/mI1N1vtbkE7Af6BH+FH/zpiZP5e3Ue7ue2dBT6qIPNd/rvZ4XNfpV
9GU0+lsR8eXhyBcPqv83NfEM8543NfJiHBc1fg+6+PT2T4mevM+A9n0f6mRr
PpfvMe43GX5ORXu1vhZ64Qf8g2/wAbxc1KzH+PjqecPw601NHYLn6cbUHvKk
Hd//dqwlr4ssbjks+mjHx3VYcnK66/0MfNf+o4YP8JHx0A/jcrq3ih+5f8/9
wGHJA74gN+TlOO6TvJAf8oIv0OP8WxF6dbfe8/0TU3recVKfSzm6XAaD3lMh
p+ujLvNYSw+VdzU5zBM94BA5Iv/yeSr0d0x8RC7w0fdLTES/CzVOl/d42Jl5
IUfmOWdEf+ob/RS67he9zuc7JD/n20j0N97Cse9z6A997Qs8nNHzbmeP6ZN6
cefHqRZO4EfymfEqD2TjmQj8joUcwO9DofcLg6+PB+4Oh14vFb/px+3ZI638
Ae8jj/Qz4ML1cTj6O9S6d8PlNyT+Op/SDq1o0e16vlD9p32FP46zybDXp8Rn
9wfHAj9TIYf9TbtPBn7mSf7JN+prmAeT1/fzHWepn24a8d7b1O7Lmnw+caTi
1eZ3+EG79AM/qSuDX7nufG+Tt3wZdUEhB/ib/gf5MZ+FHz6upZLvPzb1PK+P
vMuPNHEU/OI9cEN8CJ3Zr84XML5uFn7orzy/s2mnnof3smY/0estD1vlze+F
/t0hh5tb+vOyZj83uEp/ijygg/GnXXI7Uf0y4yS/Vto5EPHZmPqB7jKOo6IT
nMBf+oF++Ot6VPNe4A99cb5Xu+hxQY1f0Wvo8vzmYeGU8ZXxTAQOt+rvtOdy
mRI/yniOnif+GInna7zidn1M9iPxCr3YN9e3zfUcj0bfz62fU6Evx4VT5vHw
AbkwHpfvKd1zwe/YfR/X42ofPHp760UXeEH+8AM6yt/nyH6V987If6K/6AXj
dr071jx3b8h9RHz1eOQh4QZ5Mg74B7/AM37R5Tei58vntzU+7Jbr3RNB/4Oy
F7Rf+nuw6ecRjQ8cYo/gD3qHHU7/hL6hz9CNXJFb6gn8dP+5VXzDjjAe/Jvy
ic246Bc5gA8+wSf6As7S32KPGTf9oy/gAX0Cb75/bnPz+5TkVh57xtt4H3yX
zyckR+RQnnsq7MajoUdbZd8Kf58Oedc4JP0Pes443G/OC/+3NNpbIj7xd48P
FslOOF7q+fM8l3UZaX/OHXfVuMPjia16zv1v9ffnm2/Cf+yEt0t8O1/2yP3X
yvDLayMuWi1++ed62QXv7/rWuov2BTX0YMd4n/HB14y7XM51HlfwMyR6Xf6c
l3d5a1zggPwZfGAfBeOBvjdbvDmn0eMB8TPxhp0kbsaO83f0IuUHXxI/0AN/
0EOPM1aHXmyOeAX7Ohzjmy++8JzjjzjhBo3T9X1e+PEVcU9WX2ek20G/cOt2
qn0OvdujvWrH5+drQ3/HOku69cs7VJfr/Nspu+nrUZslzxNX/D9n//VK7tDp
898h0fdgU4/B81l37vFF2oma5wIvLscRPQ+OeA9/kTgBF90y9vdtkX+j/081
+62SDuwGeoC83e8vatkx9MvHv1p+zedls2RP6d/5dLX0y/3cpOa/n+2uD46J
TvDh/nUg8F9xxblNtJ/00X/mARmff9Y4Cxzfb37h2gZPQ9HPSOhtXbfzef3+
0I/BsOe94U9ulN6BK+y025dFypcwbuTo9myssYd9Ye+HWnYK3PHchY384Q96
73Fq9RvY4/SrK97x3eXv+O6u8Nf9EacMS27pxzy/siTmQ6vF9243y3fUummz
K/PUXqFng+ylz0Nrfhb5eZx4Q4OPbRoH8Q/9FX4fjv4HW/Gpy2GR/IvH0/Bp
IvKbayX3cq7cncIresb7mYfxcdd68VKXdrQVhzAO98PEacfCjwxKP5Ardg+8
QmfZN79F8vJ86f6IO2v88q9dR1TPw3c9WdbKu4Mn/u528Jj4QpzNeNDDb027
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
L/SHPWT84By5ca5h1plDv+c5l4sO7A/zxNw/Sp1H5v/yfibehz6vW5/sdKO2
n7hLelLUZo/kSz4j50GOx3qvo+/bXxz1v8d0/if6UM5NPB7z0Nmyh9hJ4ii/
52mv5ges43BvFP6N8WOXEidef3tJa1y+DlHPqfHzOmfI3uT7fGf/N/eiYceJ
i4kfsQ/Eq15Xu1v2CL9V4oTDOqfdz1es649+vkzNy2H/Sp5+Is4JrPl05g3o
A/gh3iD+4B4P/s4+Lvyk1xFeI7wgP54r8dBR+UvslOepD0q++DXsKH7a732o
+9ZLfgT5HZK++b2wNS/q96b0ttaLiHOoo6bdkn8/FPvudmm8xD3cD8B73M+E
3D0PQj59srVOg/3wdYZPaTzkE/y83s9oHs56PfM5zg0m70g7HqfU/A39Mq/C
zvm+s8nY13uFxg1d7DsDx/hX33+5W/Ms4ko/x+pk3BO7Rvl39B8/xb4N7A/9
+bmRq3TfGvjJe15YL+C8bM7HTj54vWY9T4J8LfMgX9c4qnkocTv0Y7+ZX6Lf
3J/m84rDmjfAd+wY9wkQT6F3xF3YH/Tc90uv1z08+HPmrdDZFfsbj0cd7xbh
Erz6esShzg92L447LjlknR98JN4h7iR+8LzSpOIR5Ox58noOMXqBH8Kes48Y
f4B/51xm7AJ6zvnaxE/EreA173fjHhfG7+ej7df8nPu6sC/kMdy/HZd8vd6v
nj/BucXoS96zw3o9+RbutQGP2Fn0EDwWOZ+I+fjRiG+uUpxQ8k13yy9m3bLP
yy+TX2J+in3H35U44HjkOQ4Jv9h7cM156sTVf90dz6kWv6jb8XXlL0Qd6irZ
0dxvgv3IfIfr4zrFe8gRew1+mGe5/dwjfoND/g7evW59ifpjvRh+sk8EP+9+
eKbiTvhS1iGn5PeIC3I/KvdnFLv0gM79Ry/xa9wvg577PWR9Uf9Rz/fPei/k
CS6xn9i1gr96rjn+CzuFXvr64inJ39eXNrfiffwW54rzO/EM8UPBxZTuy/Nx
sb/9lOIyXxer9S2cR088z7jAB/4Bv+732dTzGtFP9+vrhCf8asnX3Kv26Y91
Te618n0gO4UH7BfnxTNO+Ev87/UIS/U+7ZK3Iv7nk/bx076uNSZc+/1hW+UX
fD/IlOwdegkdnhfcrDp77gNg3dbnkxsjv1zryf38z2NRP74/+Ls3ziXar/4Y
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
86u1tzzub4WfvK+1V/LM63NXB7x0S97G/mbwz94B74ObL3rw+ofmkHeJfaJ9
JX46Eeb/xriI5+e2hPqxcdG991/kvZoxns97kTvAz/NEzSFO3l6aF8k9otzw
+QTDIV++RXKA+JrTxY7KRwv94XG+nDeLdWPYKck/2Bb89KPBn+sW/Xh8s1Px
3lg/gpzgHLwPfcLzsfN8H0+us4aOgT985fHEcdE5fAJdI//xuz3uuET0nf59
WPiAz7Gz3D66R/aN98WtK/z5w9pjij7nvuwDAd7IDeCe9vneo3hP2mNzt/xE
7Hj2ElG3iPzw/FjO37HPBPjCP9Q54idGeoR/036rhyRnPT80LDqBj2PcLs6n
hD+Ao9cD7dX9sFu4l8uNTtkXzNtmHqT3GT0sOMV+K69POlzw0ZFg7/SV8hfA
jfsxjxA6IV+JfRrtSeLOcf4mfi3vT2svH9C5sR/wL9Lnfy78eH3gA8EvyHNR
Y/wBviI/hR13sNhL5XHlY8ID8o33wjfYT8xXhC+Al8uRo5rLmOjwNuGTPeKJ
Dp4r6OK3xfcek7+EX5qef0z0g1x2/f2g9Aa/c3/gg1zknun3pyV3XD4+qf2F
4Cl972fas8PeI99bsE/8zl4+/C/kFPZ8kgOnfZB/T89/yQfj3pX0uecV7+L8
Sf6NSI8gV6Eb5Fzct0B8kjm16fmPhz02OwRH8Ihfkr7XW9xzT/H830iOps/n
PkXu4fL6p0GPbNScePRh+twvS3ayx1EbKtf81fk/efg135Ud9lf/+KVP7frE
d0LdS54Xib3I99EryP3KiY1fufIts9W3Ar396X+9/p1vXFJf2dn14KWfWXil
7J9kV1xdmfXIS3af9y83hL6N2bJvsYuxU6I9m/yj7+r82MPfbf3JPX/1/m/r
OdH/5d5xXwP6Oj3vmuL8c/T56B9gL/M53p/gcnmY+/TN4r4/qMw4e+W22udm
lvwK/JY3GLznhfxGnuuW/n6p8MSczdcFPye9r6ay4nPPnfmRzfN0jkQH1xX4
m6Hzp/tcEurMV+p36At8n178ezrXzOI+Fxf7Phfr/Z7nrQn1dLXFub5VwP/G
4vdbBH/iCsCT50JP6dx53g/nS59rFJ4SHBqEH+YvAjfuAX1BNwlOdaIn6B94
wgfQI3hzP7upmBdwveAKvIELcI784PiZIz2afv+Czu/3bhcdeL/CioJPrhY9
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
3d7OePH7dejfkVdnFvRyoH4aIbnu/HcufNPMM57okn3u8xQ6ZPeg36CTFI/t
Ep6xr/h5ceEv+ryXHD8jXs/f8XPdHs77+5C3Hw9z1H3feLbbPX7QVrKv2Gfp
8+GzvwGevS78e3oueAMPwIV8kvd9NoV4dXOxPzrHlTiX709skrx1e2yO7Ffg
5/P7s53p/mKN+AH+ID5N/Bl44O+7H9JY8qd8rhBz8r6pOBv72Tze1Kj8VJqv
uUj34z7AH3nN84l/wPde33K97BiPg2S5lOLy6/XvfJ97+7z0WXpOgtuSwL81
Ab9X6PeUZ+gQvnmuz3nK/jR0xFxY7AX8eOgVuc/3Pa5YK3zjf9LXz3n4HvhL
/na/7hXzcfAb+GLfI3h3f6827EddHuijUXNF0Qcpb7ZB/BPjMtwHeRPvGeNf
wIO9A3w+7X2+OdQt9AgeKS94k/ifvX3QO+eJclx7vKt+aNZf8JPvU10mfvB4
U5zb3Sp4XbRj1cyXrVil5/K5uH80xhWGPv6X33j+eJP0HHr78eE/G3z5+6/T
7/BXFY1vXB/idtm/9Dj7XMkX9Bhyd8XnnjvzI5sbKje/5+k3//0714b8yvcK
fs/+8kuqB15VeWXLzqu+/sqWECdpkp2IHk76tLOkb5AX2E3IN57HPGP4tP32
c3qfOjvXw0KvXkeQ/fnkrw3IPwH/vo+krvK1qiLdEPzDtpI+Qs4DN+iReyJv
+B50lvyY9oIv15XkAvbPA93zV25Yc1vIS84N/tNJf3XaDXv9xlDn1lj5m0/3
/Mmz5/UFP2ZWAd+YF5gf9mT0KF4L/ewo7GyezzmAJ34ncifGl9K/z9R72Xfh
cYfaIn65uPLlIt4Nv3qcaZXkMf4O+oq+NPgoxrvQ1+S/ea/HQ5ZK36U8cZ6b
7HHLtheBX4PqKsCf+3mt6gNOdNkpuOA3ok/gL/jU5Xvep8w52CvE78SvPC/T
Ln3CfWZU4+3LijrDLskJz2/OEhyxK4AP9maUk/iTvpdyoeCNXvJ4Vo/OCx8T
Z1N954vIM+RBzAsjR4EzfEf9H/7KonXTAuoO2cWXF3F87L/3pEF70gset2gq
/j6o9/PT5UjOQ/7o/ONv/7dztynuzN/Ri+AXukDfJnv/Rn0euQ/dfGvZLae9
/FN9kpucDz3t9XJLAz1fIXh5H8iaELfJcgB+gR/597jfx/vo6vQ87oFd53bN
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
FRFFa4EjVsVWtFhMxarXrYjliLaKVItLFS2BnEjAQCNjYhKSMHQ0G5OF3ECS
yTCZcMOsdzKT3MmsN5OZTCazTxJCNgigUpXUjVC18/+/v8/3d573as4cLnf5
/5b3fZbvs33fu3/8vH+7OXbU/qrf/+N9orORj76+l3PUS/xzUfSs8c7O5T3t
i/OSxXOuh3cOL2/NA2/MfvY8gD1+g1PpV62DbYyekjPyQL7wBrMb9NV19FH3
9Vn2WP4R34I8MzzHDur7UC/TdyZP6j34fXpX+xtujx3ES2ufGh/v+vBvsz+1
v+/s+O8+v1vrt3PJC5DP1rc48vX3/KPiT/GL/nF9wuxPjZfmlvC96hMgB7Wf
/raZ93/X5GTrdfkevqYX5J8dP3NY14rrtwWns09wnPf2VfzFr3seOBZOJK9w
lfqC/Ww8gesSb8vD6FsX94rvvUeViy15b36evarnyb+rm2M8rzs36/bYlZ7f
ra/j97w4hwe/UXn8roq/qec1Lctzsyvk3vPat/68Ff1jcL3n4UfIr/UiR/iB
9KeSd/YHjqn7uRA9km/Sr8hPtbr55pm/mM4DXZn99fwVb6xJ3cbXZie2z7x6
zWdff8ab7wpus8/qZjW+mh3xb3fugH2Ee9jFnm/A/fEh+z1+0tpvPNYvzuz6
tqvc7I5csnM1zzyXvJO4XbwuTq9zEHdmjqLmwzbG3/T5VN/LT8ujwlfyWz0/
lLxYre+9p+unWJt8fp1bOm8Jn1HNe74v+QG4zTqwm9bnBU9eu3/fWfPJK4gP
5WXgNutaeYGv7+oAy4PH63khKyNn5KTfH7iAHZMvZaf0mfZ20frCHdadf5Un
or/iEPb0lq8689lvfcu2rr488l/zl5WfdVXyXda/4vF12Z+bS910Xb5Wvu0N
8QfkTv/k8cJHc2P6JSuf2MhTpD+055mVj6r9LldEj1v9bEOuZ86nzhnsGvh+
N4VXgLzaD3rOH9Z+g/NyHfiv6sma3BdOIi/8FJxY67NXz0zb7E/Nx25U3qix
TkqO6zlG74odtr720X5bT/JQ++Cvj90XL3lP/sy61L6OheAo+KXxMt/W1a/W
zrz8zcs+/oGzxvemd3ANu/wz9/zUmav+5Jo8Jz313v2cDX9B3mp/6MqsN/vj
e+sHh9Z67PKsW40vx3P8+Jmej9L64+3mf/Gq1X7gszt/vDf4md80F1D3+9Lg
hd++Zedzh35vxIX01ntYf+/dn5fWn39T/179dFvH83Nx1385H5wovrAO9LPK
5ZWxF/Tk5oF/jF+t53fMx5+zk/TW3/Nnvm/zqPct6X+1vrVP8PzYiRoPj3V8
vMX0puYFl+f96QG/Sz/kGeG36POUp3nDkrw1vqS6jvfO/Otf+MjZb/9/2zt+
qA/Gzriu/Jy8GFxIT+Tz6X+tk3+8yxf3eZLrov99/tz6yac4Lx4+qHxFc7Gr
dR58Rfyx72v/5P0zU5q+b9qVuLLO5c7HH+oTot9tLuTeJfYi+zjlo94SvRQf
mn9wfXnBqh8XzkzTBS/al/dTn8BvXvP1+s/3xZ40XvMtwfvsu/wrO2m/7Rv8
4T3Jn76lPg40ByQfV89R3ZXv+XP7X69zTtfvOJ7bp24tn/veHzz5kvvP2Jo5
W/EW+yDv5n3wv8A79LDyLd/W1WPOm5l0/Z/+tyTeJeefH/LJ9EGe4h+fB7ls
5h8Gv9zX7+k7eyrPTA6sU61rXZ7PVX7Ii/LznldePqf1gX4412n3OXfgK14f
Xml8PbU/e9XQb31Xp6/j+aTuV/vdx74j/gAfhfxM45ce61iuI0/c5xfYF3bL
79n12lewLOskH1DzThcmHq/nJl4a/mV5obqeY/1MfoueyrfQf/Ms+DDY0x+8
aEI4uSP4nj9Up6p2crQDeLXZDTjG79mjc/d98+TIyaHusaHD0WMdofJBreqe
f27mSy+cNHAuxI/4fc/Ly8/i4fhYd/6BvJL4lfzADeI0eqLuXOe4N0Weer9r
XdnBdb/13f/isb8b+Qvr+cWrl/j1mt959zinPcSz1W+PcZ7rvOP8Vzz0x1+8
Js/b9zuZE9b/Ix8kDhe3skPwUq3T9ufPjH3M1tVXzy+P0nh0Vw981mOduPH+
buz6AebDS2qOUN6gzpVuDW6t8ffmfOUnyF9fB3500GfPA/+xF+aU2YPaBz8X
O0yfW15h58yFex6bdATGfvl7foHfoPfkSx8FnGzut+aJNiV+nlRzr527JzzG
eIDlE+Sb6nlXG8NDgcek5uX3DTzRt8ae8m/6Bdijykd9S96zzzP0dbithSfq
4sSvT5954VNnXrgzftb1yYe6vzwOP17zPmP+Gq92jWNvz/5W3vR3DH1093f8
xZdHr9lv9sccq+dNHfWN77zkpuU7sk45v2sKmHdG7+rcxuYOV12/pI/FvrV+
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
r307c8GVcIJ5gLPeOQGYp4KPel4WctjywkeH9Xq0y8MuBnfCBfxFPcdxnKuq
fRgjr0ut218Se8bO936GX6Rf/r7mWcfz2/lDdesav64c80CD3rK/r59s8/Gj
+Z7dmtL//Mgj3XqfMzOFeX+5e8gzHYt8tfU4ENxqfeEd/dj8Yrvuiaxzz6Nh
f+ECdqfyPt+WeEsfnT45+QP1Lv14/Xkw7XygPfEf6g/sl/vw068YePfIlf3T
n0i/1ZHgFXGs+L7WT0b+Ef2m9Zzp3ZGfmj9ayHq0c5Z2LsE7fX0AXpBnrf3k
c4lL1QP4SfUI8tnOa9re8YitjtyZj628pLuzj/yZurz43fWte+2T25Gv8nDy
QLX+cnHWSZynD6rvG6y4ek23/9ckjy+vrH+tnjM1zrXUPs/xnDl2Xr7F++EZ
ZUfwPbg/XECP5F3UmeyL76+YfOqdO7MP1r2eR3N5x0d7TXBMw2M7h7m47ckz
6Seyz+Ip9638hWfHDugv5s/MMVQ+tR3Jj7Y5vl3pw7AOfT7ZupADdqvmzcY+
yToHeWfkO+dYDPxZ8nIrn3jxD7zttbu7Ot++PHfLi9w/nHs09pHXOaX16Sev
/neh44/47XzO/dkRPzffyR7bB/GW9aD/+lbFQ9Zffqb6uZXBqZW3bOTnIA/1
POnleR/+it2r77kj8eE9e274sk/81d7Icz2vZ1/kTJ2Lnlgv+Lif6yNv+Gz0
D7HPtd90jE/YDfOX/zgf1OWR95ZGW0yehJx9/+suffXrLt0bvdM3Wu3JJbHX
8uj6eayDflDfswf6P9i3el73B4Pj2U/6Tl/4PX3J7Had3x77853nVecN1wRv
V36UPTN/9sZ/9/oDX75rSV2anNBjeWT6XHnhV8S+6j/1+3Ze2N7Ovi3LHEDD
Kw9kDt1ziR/6eWa4Vh6I3rEX7JR+1J7/Ud+mfVCHIif1fMX1mads5+zcEP2W
T+bv6R35Yh/CszjgFrhfHMK/nXbKL/nTr9kTvaEP8GvjK9qV5/fedU595L2k
13CaOlfPI9DE7WDiE/OX9tn+nPF3W7/v7lsXIw/yOuSEfJMD+0Ffa1/s9Tm3
iH/WD8i/VX0e+zbpI32p+3Bd7CT/YF/ZnVr3XpX3JE/yZ+xf5WVYn/lf/a01
7/yBxKnk8JsLf/mHsm/0/HuffO6VTz730DCPfaCbr9nX6e9i/Mpzhc/i6thv
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
5ZGei331PObDyOnuoT+8X/f+PBy4Vp1MfyFcK+/tOm9Y+cPLfvY7Hs59+vmy
ysO/PHUF+wLnWr967tls7lP74DZ3vOm/k74/dkC/NrmBD8m9vsLwJZZzx0c8
TV/hqnZ+znjeZ5uvOB6/2fMgWQf65z3tG9zEz/MvrtP06LH4eXamXmdZzlNq
OOix+Ev9l3AV+w6nVH7k6+Pf9X3Wvtj10dP2+WPBtXAWnMJvWjd2khyxF32/
7Jsm9DWrt2Tf8dvWeGp18lf2nb+DL9g/12Hv4Rr1sy99bMfzH9vxWNe/9Hj0
oD+XovUtH+zisMUBxzza8Y2uC56uc9sfSv6KvXcd9tw5WfRGH2dfVxCH1XOY
FtOvCx9bv3YO2KOx59ZPfZr+1P78G2Pn/b04oMnZI0t4J/RZL5/G54/kucWJ
7f1ui11t+z7m43r+3xoHjuel0QP+FT6CD/lxcRf7ox9VXKUPqs6hfTDv3dsv
+kuv9MWsHeYw1EdaP+ZdQ376UD7ne+dTtH68g1kP+EX/l7/nT+m9fB/50Hej
77X2K498aPrz5H/wl/I/+qTkrchRtRf7oofy2+pc5FEfZlu3mzueCTzUh7Mu
9lvcYR0Wv+uZ13zpO48s4YeRPzBPXvvuFuJ34SB5A/GLfln2Xj5TXzL7rE4G
T6pzus+/GvKiNW5ZCB6Uh+Kf9ROLI/V7qk+0usLhxGXqYdZHHyE9aO9xc/yG
PF2dU/lY6j/Wy/XgB3mTlgca5xDJBXmD912HfOJrcV9+V3+g/qFHh7qwv9s3
hY1HUvfUZyf+gBP0rTY7eiB4Uz+YvHXtozsY/8Muq5uJm+mJPC9/Kq5nL/52
yKvzV/15D+yO/Kk413NZR89BDulh81Mnoj/ur69GnQPOoj9/8MLLTqvIkdTB
yCd7SN/a+h2P/5DvI+/sgn6Z2ne1K/x85LnOkY55c/am9b/fMnNkGlcfjl2C
l8iPPjf2BA7BP8I+0F9ybz9qn/ZYb+J36Zu+LucD6nvq62HqBfqo+IHWB3o4
vNr8ZXvP9V3d5MCwvrekHsHftPvfmvkA8bJ9aXWCY1kf60tupuH6xiOxN3AF
fMPf9XLPfvJv7AK8z55a157HzfOwC+w73NXed336s/Sr1b/fGL1bnKTXPn88
drb2b47ngr9jKoYPd7hunKOBN+kLfMKu6q80j8K/sPv27Y8n7TSfOxp5UO+G
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
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8369858312359533`*^9, 3.8369858871316433`*^9}, 
   3.836985919203207*^9, {3.837064942952179*^9, 3.837064953956295*^9}},
 CellLabel->
  "Out[290]=",ExpressionUUID->"b8c0ee86-89be-4f14-9b4f-1b10e0ac17f8"]
}, Open  ]],

Cell[TextData[{
 " And transform to the actual basis with proper rescaling -- this is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["\[Delta]x", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c9427037-3f5f-4747-afd2-04d97baaefa7"],
 " for kinetic energy [Eq. (S31)]."
}], "Text",
 CellChangeTimes->{{3.8369859741381607`*^9, 3.836985977044573*^9}, {
  3.8369861592167187`*^9, 
  3.836986161490638*^9}},ExpressionUUID->"7ad07741-ad13-47b4-a291-\
a10afb924cb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"kin", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"txmat", "/", 
      RowBox[{"\[Delta]x", "^", "2"}]}], ")"}], ".", "kinmonomial", ".", 
    RowBox[{"Transpose", "[", "txmat", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836985800417399*^9, 3.8369858121188507`*^9}, 
   3.836985947844529*^9},
 CellLabel->
  "In[291]:=",ExpressionUUID->"3988e4a7-73ba-44d9-ba38-d821a8dc2755"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00337`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
f9vP/24+/2zn4vuv7f8ErWJaMw==
                "], {{0, 0}, {29, 29}}, {0, 1}], 
               AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5388", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
f9vP/24+/2zn4vuv7f8ErWJaMw==
                "], {{0, 0}, {29, 29}}, {0, 1}], 
               AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5388", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.18212547322877232`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2400.0000000000045`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.4616600552637851`*^-10"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3666.0605559641913`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.4616645479483943`*^-10"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxV0j9IFAAUB+CXltl1ml1KLUlGFIQFBYGkuFSDIiQOoaYNKiJC/wgqIkKF
wgqixaOgJYtQSJckKAhURJyKC1vCQSSLIDCOGzKo/MCpB9/83vvxq+i42HRh
Q0SMxf+TTwFb2MFuDnCEak5xmhY6OU8/Q4zyjgzLrFJkSQXHqKOdy9zmMWNM
8Ynv/GFPXsQJurnLSz6QpcyBVZzlFk+Z4RuJjRGHaOQKad6wwD/2bnI/Pdxn
nAw5dnr6OO308YxZfnFwc0QbD5gky77CiDMM8pYflAutkQEm+MquREQ9Nxln
kdTWiJNcZYTPJJMRtVximHkKivxKL094TxRHHKWLNHP8pnJbxDkeMk2O/SUR
zdxjhFm+kLddxtTSxg0e8Zp5spSkIg7TQC+DvGCGpdR6OcqpoZXrpJngIz8p
LtUfKqmmnhZ6uMYdhnjOK6bJsMgKOVb5S35ZRCEJkqwBEnhbeA==
       
       "], CompressedData["
1:eJxTTMoPSmJiYGDgEWVgYATSzCysEMTGzsHJxc3Dy8dPO5aAoJCwiKiYuISk
lLSMrJy8gqKS8qjYwImpqKqpa2hqaevo6ukbGBoZm5iamVtYWlnb2NrZOzg6
Obu4uo0qGVUyqmRUyeBW4u7h6eXt4+vnHxAYFBwSGhYeERkVHRMbF5+QmJSc
kpqWnpGZlZ2Tm5dfUFhUXFJaVl4xqmNUx6iOUR2jOkZ1jOoY1TGqY6B1VFZV
19TW1Tc0NjW3tLa1d3R2dff09vVPmDhp8pSp00ZlR2VHZWktO33GzFmz58yd
N3/BwkWLlywdftxly1esXIWNWL1m9RoAEqBK1w==
       "]}, CompressedData["
1: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
/bfcjv0PjL4SPQ==
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.836985815693776*^9, 3.8369858203733273`*^9}, {
   3.8369859499475203`*^9, 3.8369859564266863`*^9}, 3.8370649596655684`*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"595fe01a-ac71-4c58-a845-95c615497308"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interaction energy", "Section",
 CellChangeTimes->{{3.836985283696055*^9, 3.836985285258136*^9}, {
  3.836986134692233*^9, 
  3.836986138327005*^9}},ExpressionUUID->"7898ff16-ddc8-42ec-a654-\
ce5f0033ddb4"],

Cell["Find interaction energy blocks in the space of monomials.", "Text",
 CellChangeTimes->{{3.836985397070799*^9, 3.836985409533478*^9}, {
  3.83698621294963*^9, 3.8369862141866426`*^9}, {3.837000705654554*^9, 
  3.837000708320455*^9}},ExpressionUUID->"6df457af-7e1c-4644-bdd9-\
48356dcd2243"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fIE", "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "stored", " ", "values", " ", "to", " ", "get", " ", "a", 
    " ", "more", " ", "accurate", " ", "estimate", " ", "of", " ", "the", " ",
     "time"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fIE", "[", "sum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fIE", "[", "sum", "]"}], "=", 
   RowBox[{"IE", "[", "sum", "]"}]}]}]}], "Input",
 CellChangeTimes->{3.836986248681761*^9},
 CellLabel->
  "In[292]:=",ExpressionUUID->"ddf9262d-cd69-448b-b958-2035686c3a0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"intblocks", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"intoverlaps", "[", 
       RowBox[{
        RowBox[{"#", "-", "1"}], ",", 
        RowBox[{"dmaxlist", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"nmax", "+", "1"}], "]"}]}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.8369853771077137`*^9, 3.8369853855949917`*^9}, {
  3.836985419522872*^9, 3.836985423042471*^9}, {3.836986216841134*^9, 
  3.836986224065633*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"f61de5bb-769a-47f7-af33-39bef63ad092"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.262444`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8369854249272823`*^9, 3.8369854474907627`*^9}, {
   3.8369862684444838`*^9, 3.836986291169647*^9}, 3.837064970684476*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"777935be-3dca-4a38-819f-2cad6d04427a"]
}, Open  ]],

Cell["Combine the blocks.", "Text",
 CellChangeTimes->{{3.836985397070799*^9, 3.836985409533478*^9}, {
  3.836985577892466*^9, 3.836985616347699*^9}, {3.8369857294116383`*^9, 
  3.836985764433362*^9}, {3.836985968461011*^9, 
  3.836985970163053*^9}},ExpressionUUID->"f79d6566-06c8-44b3-970f-\
5596a87ed3d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"intmonomial", "=", 
   RowBox[{"blockmatrix", "[", "intblocks", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836985829546921*^9, 3.836985830526668*^9}, {
  3.836985867824678*^9, 3.836985917973763*^9}, {3.836986320005993*^9, 
  3.836986326235387*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"87cef7df-88ff-4c38-9f9d-f67e66fe2d06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.170657`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[CompressedData["
1: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
/wKOlGYU
                    "], {{0, 0}, {30, 30}}, {0, 1}], AspectRatio -> 
                    1, Axes -> False, Frame -> False, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["101942", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"715", ",", "715"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[CompressedData["
1:eJzt2Wk0lQvbB3ClUilKChWFSmkSoaT+KGUox1CapDIdGSpppkMqSZIpJSqJ
RjmKRkopQtn7vmXYm409sbGHGykl1du71vvhfT7stZ71vmc9j9OzP1jL+n3h
vtZ/X+t/3VvbY5ezt7ycnJzW//z89+9mBwrcL+rQkGaUkW/6uRptGdo8p9sd
kPmv4b2vPJf6vWyExerO8ymObfgt9rFtURCF44P17pxazEHhvr7CnoR29Ezm
68yLp2Cqm3v560kBzo+I3abzUYQSK0PjzBYKk2hqo8Z3v8fZuVo57TktODxW
a7WSAQV2USFzqpCEe9HjDE4mH/cKjP2ndkiwP3tVnrsfH1vbCH8jWyESbGya
2wsobE7dTJyd2YgLXYOOXdBrg0n6jEdFgRQitIziMtRIPIRgiGkeBz318htb
csRQetcTldZZj+bZ5t3mZwVYL/jtIN+dgpXfkNzgq62YdkNiG3xIhKDomoIk
JjXg5i/zv9avlJZkeSSQcLiluDTTl4fRPe86670lUG7W2+I6qgrL/avnLZ7U
gkrFdaIrkyj4e+qrJ+uwsNwzOtqJI4DfzpgdLT4UQgdXEDl3CPwQ3350wpCN
K1/UrL+PFiMljNZyLo2A2oGJ74K+NONGCNKO9IrwKmqSgq5aHczMdYzZka1o
zzFarWlN4btjVUHgHyQMDx3ZHqnNgyire+JkGwlcxjXsqlAn0Ca2CNZ2YKHn
ZV/3KCMR9u016NaMIuGk7lQ4agUP9cYnWTGuEpxL3DfuYmk99o142dt7TADP
C4/03m6R5flX914taxvWUAI+d8RBJm8aQHfNeFkzQYRw3y6z514EVp5WNw32
b4Ic56zQMlOEcmVPU99lJGbXucVuX8rF3INmUX+2icHzjFbkutBRnC3qUF/E
RP1Tml/1GSEEudPb4s3o0J79I4PfyMCqoebqvYeFmPbAQWP2OwI13SsMbK+z
kW22KXfHMjHGcZ4xGlQIfExTcqzXZUGxP/GIsb4Ik081zNHspcHN5FZuhLgO
OV3NCfdshFJzbksJytLGkdBXf7mJk8nBc7lT+1tvigfc/GX+17r6Rt660B4S
/dcClc1K+fjuH8lT+SzB2kCW5syiavRxHgwRt7QgJFw+3t+YgssFywfvdjfD
YNzgS86v22AnilcYfoSC4uqrc0dyCOTuSDh6q5MNjtvymBNbxNCqiNjGP0yA
+eoHz2FEM1oPtVpbl4gQGetouViXCXMNnZAD4wRY4rGFqHL+uefz+96mNpPQ
C6iJrg7hI72srL6HIZGac9NwzWPBESSep19TZM3nQSc88NtEBwl4HqxNZ76z
MI8eGeUyuQ1WTrE+1wNk+/lXd+PMMucTevVw33N5gf1GAaqW1rCvbqSwjbtb
KfxWExZdvNncENuG6nD6TvIABb6La10kWtBfzjOIKxDiyyjBjTFvKFzQutz9
niKxuktOkv6AD691ZzK0uyRQ/ZDYpJ1NQrJMcavXax5+PBDoLYmRQL95fVHS
bS5sdfNsejZ0wOKFR25o5s++UUp/uGQNE9eXXNpXqCXA/Hsfp4pcKGzhp7AN
CALbJ/rXX85ng6tak+C7QozfHNPip4prQWrcMEsNacXHralf5VdQuG+jINka
xkf5yNU+B9cKEXmePV/+mSzPv7q77Y0qjAsnsGFH5vdnC5ph4fFM/mmlCE+H
G9OffiOgt6ZpT6srB5nHFj62iRKj4s3COjGqMITojdpj1gLl0GVD8qZROFjb
2JkpoOMxz5Z1fWUDRlEJbd1fhWjusxYs/ErHJqXpX9xiGhBdl6J2cqRIas6l
7fONyoX7L1nRsfiwfe/ZPgZCmx/2fQwXoipH425qOgF1T6M4JUU2WOue/hH6
TST1Dh1o85f5X+uedkR1uJDAfdoJ+Q/jOUjLCVbVChRjpsuIiZkHSCSb6cB1
BA+kyFL/+1IJfh+bZ93pVINHL2z01oxuxUiXoyFWiymMnrll0HcrAt6fz0UI
DjfCpTPm9ocgEToW7g3LpeggDZMNnD0bYFU++m3XIJHUfS6ttwQN7Qmttafj
1pb05MBJTGSyXaJqTgql3qHXzl1IVil7j+mK1/Iyr7UgsvjE1555sv38q/u1
Eve4IjM2Qjf4lVmObMfyITtLmMcoMJ5M26/hxkX9yMAexrwOrHw378L2dApP
ThtYP8lvA2PVjZzQZDHKNwR+3/qRQrOtYUF3SA20ea+0E9Rb8f2qxrvNZhSc
zz7YLhxfhYt3Q2Pnzm/BpLnX81J0Kdx+lJx2Qr8FSTd8TexzhRj63GF9b4n0
fi7tDv2gfycj8XMDmBbKcaNqBdg/pUf9nTeFr5Gdnn17BJgrUPFpbBeB/JDC
j+bL8vyru1J0wN2dVA3UJtGFMaatuPrGQXv70p93WayqZpN3Pfa2KZBD/AQQ
ljhuX76ZQpqm9xL1VVzsbuv6kqjbAecjyatsrlCgdJ87Xw4mMXJcf5LcVy5S
Vd6s+mEqwVFmu8KDLwQuTn9cFmfDwc5bT2psI8Rou9V14UhYE2gH5rYkH2sD
e4Gp1uP9lNQ79Ml588GvfQm413ud1opqgnHBSJrFbZHU94o2Pr/vjprGgbNL
WPGfJ9sxiGZfpRony/P/1fscusZMcyDguNUj262iEfsrCjLjI0R4Mb40PsW+
Gj9CLJeKS1ugx1hW5G1IQWuhfK98CRP0YVZ+TcsE6M2wW6a0nkJy74t5ygvo
UFY4v12ukIHRdqxL7GAhXiyWUwsbVgWz8tY832EtuMu6ZSpUoXCATucfdSSx
x5bB5RzhgvdyvMJteQncKwPH6MYS+JPObTiQ0IxZpdywHo4IN7O1qip82Nh2
zWAmT7sd/UcuZulF/vy7TmLTgJIa3P3s0rVqTivuHnxIrDKnpO5zab1FWj+X
dodKe9/ynPoSXjuIgIPbVc3TtxuQEqrXXDtGJPX9ubTviQZaTv4uPj1afsnJ
vXQ4ZllP35nNxBHHjtSZ14UQFEaeTXcnkd7lJTLM5UJtyozcB+oS3A7mRlsx
SOQm+l/M3M5HzJ0AhhxNgha7WL2Xg+mYb97V/20CA0GV8393dxJimU6m/95p
P++pmRUqrWwOROaJPXLFYiw013LuDCRQIa4f+S27Cb0zJ9z7dE+EBEM/87Vz
CWSEVdpEsFlI2nr9/i0nkdScD7R5yvzf6yNMZ9atMSHg5plz8tDURnx61bpy
5FYR3DIy7q0Ne4/Ku80m2nEt2L9Us3n0XAqDrZIC61QZMMxeaUBVtEJnzRrT
F/YUlqkNjro3nY5uTYu8sEQGWAbfDX39hbgw4tGsWtrPz0XWmi/KFnz4uN9Z
8LFIgopxr0+vXUHigE/a2CPOXJgcHnblWJcYgf47ND4FEeCa6229Wd6EufLx
iR8fibAs/bhm6GoSAu37i2J2cZEjuDjtzjfZ9w4y/0dP4B2VX55FoDT5+Idr
k9i4XvpxXsAQMUYXL4/oKWWgPUc86FFfK97qBnX5OlKoEjCv3xrRDLf9BcU3
brb97Kcq29cdprB+W9aH1kI6Lh0rPeuaU4+7Z1281FlCWFu8iXt4vhaJnlNC
7nm14kuAqXyZJQVy0eCuhioScyuDr3k78JG2aIZqT4lE6j6X1lsG2jxl/u91
Xz/XKTUkDUUn+uRu+tYhzCK0qW2OEJZ6dKvftAg8ez6ubP8+Fiwnu79auUSE
HEXHmzc3EYh8ma+RpNuE81kaE8zOiYDlbUGiHBqqXMOfWopqobj6HJ2vIpSa
c2n7XFpvkdbPB9o8Zf7v9Td8srQljUSDa8jCibE8mLkFjY3cJ4FH1pl5Oakc
qH6ICUl7045nWyJiHJMpyJml+SUu5MOEvYvr+jP3glhNP40nlNScr5y6cXK2
UTNKLpg8E+W1wcv0zr2dIRT2Hx7HYy5jIJX2Un9hbSvGp7WcZK6mpPbz5ICI
gGEUE4tnPfPStRNA2MWN1dsg288y/0ef+fXbwlFTSazrP3V1AcnBoaf7Nu0q
EKPfUOJwelITzhx/M/2NbxvEXTNqJu6lMGME7UN2JAe3ibFH1xe2o1ypY4np
OUrqPj/RV9z7qZMBF9K3/+tQAYr2jLCKcKLA36Fr7rzuPTxPe5mzjrcgQnI8
tmc2haki0vW6B4k5GqeTo55zseZLekK+lgSLHKwV0vZVY8flQlPDqhZM0qtT
DjOS5Xmgeq9+cPEfmXSs5rKr3dbX49z9jWJBuRB3DTxaF5//eU95x23lH+Jh
UzVNUSVQAoM1mXZ7WwkQRjf6e+Q5yF2aF3PeW4zwq/qPJj4hcEbl/YONHmyo
hPkf/qEtRtRrR5NbiQSeHnFKr33SDPHMvbYGHSI8C0iSPDlDYpH12c4RG3g4
V/bMsN1dAurt/cBhk0mUV3v2NhRzsILdd2D3AzHkVDVjhekkfP642rQrjYfd
JqIPx0Mk+KT4Iq68nIYbJjnZ/fZ1sPUZ1N8+Qyi1n0u7Q5PbUsoTQunw6Yk/
pFHOxH197z/0soUonnLdVsuOgNmYCRvu3W2EZadFcUKo7P3GQPU5pg6BueV0
nGGMKRI01IO+81P3lRYhPtemFgoKSTxWiy2ZJceH3KSJ+kuyJIjefERPeTaJ
H6H+43d95qBoof93xlsxWC80zyQUEVj8RtXN5xAbri224ddmi2FonHmwvJRA
3/A93ZMS2VjPebvOy0SMlx9Sv+WcJ1D17lLP0dpm6MpTs+d3ynIi8/+fZ6dk
sK7k0/GwNnx8XVw9HowS6YprhKh+KiIUH5E4zsopsBHycCF/d1RYmgQNN8rq
5ORJECsObb63gwOPnMKuaXFi6AcntA9nENBR4CclEGzEPr4To+EoPefS9vlA
m4/M/17ueJlpW2pGQE8hX8vVohHOf6SMy/cWwSNy+qLjWVXI25b/5f66FoTG
7LDbrPezx+YPc1l8ncQhynKD6588yOtMfxBwTALVunFXhimQ2BxwZajCQQ7O
R5lW6yaLURxdJlGdTyI6M77o9TAuepRa2XWkWGpvGWjzkfnfy9fk7Bu7Mp/A
ojfMBh0nNtZxdlq+mygGJyuIl9hUh7HzNW9tK2yFW+vOurV2lNScS9vnC4YJ
jolfkLBG/q4wJT6MPyaNMrsjkdrPB9p8ZP6v8VVtmaVWswjUmqrlHXvFgrJT
o0+KvQgsT1bGmWY6ys+13yZnNSCfSawQfvzZH14JJKeUCHhF0NzGDGUhIGTP
1BJdEeJVwyarriMg3LDmEe1rI+zO3ahtixFBNUzfziKXQPaVvAWVVmxMVehx
r1QV41TltLHvlhGwcJULHrSlEVEbVD/d9xdJ7S3S+vmJdyyj4DQ6jBKTwu+Z
1WMro2lk+yvZe93/VG/Xfhd4wpXE4JVP1RwTubDt2pSfPkoCh5wZ1zQUSWy7
wWw4HcmBt1l2kEmaGG1eAYsdjUjExX6bxBzPxYQki8gZDDFSk9L0jo8ksNoo
Yrh3WwNMr/YuLdWU3WUy/9f6ZOcfxh/8SdR/mtyZ3czF4dHDlsfPkSD4c83d
xh4Cn/r32DuacmAaWZykEiLGycYgvynKJES0Hyc4SRykquqtNc4Qw2/oStWI
OjryVl5ynTG6AWE/1nmIKNmelPk/59qZlU5KRjQ4PtQ2YBrW4EbGlbqkhx04
2xfCjHlJw4sZNvoZ8+oQFvJ2f+lUIVL+PE9Zh9KQ2ijoKTatBfWn+4np4g5U
fi7vN2ohoWlbuej1WT68FzdE2XMk4Onk7xT/TmIN/ZP1epKLFUantyXMkEDH
Sc349CYSsYHsl1lXuQh7W5N8RUUCpScbf5hPJ/C8rcKdcZ0F5n6P4xetZftZ
5v+cf/ptT7ztNhqKJHO8hlfXoPXJ65V2jA50lg1PqTxOwCc3WdD1WzOOrhor
p1gtwlHx0i/x0XRs/rJ4bV8fE2V6Ata5h9JzPtCeV+a/tncLZrCPXaLB/tqE
qEU5teiyiz4jHCpETrx2lEM/iXvcLV/VuXwkVhycVSBPYdZnl23vo4ifPYC7
5FJAMx5qx3BH1Iuk7vOB9rwy/zV8pKu9ftZYOtgT5ayVVjNQb/lqzQE3IchF
yqEuPnRsmdr7jTzExJKhtWMTU4XwWvls59ksGjy7PVi8ilroTR+6u0NRCN+c
4VPX+dJQt/TQ47zOGkxOwizbJum9ZaDNQeZ/L1fbVG4jZ0/DzIDO1LlRNTAX
5hsGlnVg6NN0nagtdDQkpBiFbGKicOEei6HnhFJzPtCeS+b/ma6Q+fxS3yka
9pqtcrjoW4trF922uPV2IOrx1jpFFxqWFZh3MjJrEFQyf3wAbeD9/zKX+f/2
/wKOlGYU
                    "], {{0, 0}, {30, 30}}, {0, 1}], AspectRatio -> 
                    1, Axes -> False, Frame -> False, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["101942", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"715", ",", "715"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.19940730598073256`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "6"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "10"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.3333333333333333`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "7"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.5`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "8"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.5`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[SparseArray, 1637864, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "Choose", SparseArray, 1637864, 
              6387694862425499023378066456020914177111276975962815252592, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<101942>, {715, 715}]"& )],
    False,
    BoxID -> 6387694862425499023378066456020914177111276975962815252592,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8369858312359533`*^9, 3.8369858871316433`*^9}, 
   3.836985919203207*^9, {3.836986328621479*^9, 3.836986340015596*^9}, {
   3.837064973749114*^9, 3.837064976702956*^9}},
 CellLabel->
  "Out[296]=",ExpressionUUID->"b23c8c97-bcac-4b4c-9f5d-5cb8dad91949"]
}, Open  ]],

Cell[TextData[{
 " And transform to the actual basis with proper rescaling -- this is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "/", "\[Delta]x"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eafd0739-b134-4002-b2ea-2b6bc386ad91"],
 " for interaction energy [Eq. (S35)]."
}], "Text",
 CellChangeTimes->{{3.8369859741381607`*^9, 3.836985977044573*^9}, {
  3.8369861592167187`*^9, 3.836986161490638*^9}, {3.836986416788144*^9, 
  3.836986423958056*^9}},ExpressionUUID->"ffe533da-9fee-4017-94b0-\
664e000613ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"int", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"g", "/", "\[Delta]x"}], ")"}], "*", "txmat"}], ")"}], ".", 
    "intmonomial", ".", 
    RowBox[{"Transpose", "[", "txmat", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836985800417399*^9, 3.8369858121188507`*^9}, 
   3.836985947844529*^9, {3.8369864282544823`*^9, 3.836986452279983*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"f56b9723-0098-46c2-81e9-6082c877ec09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.004585`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJzt22k0lW3bB3BRQm5DSJMylKHcd0IZkj+3KSFSSZqUVJIhtyS3UKZkJkWS
EiJTqYRImoTsfW3ENpNhz3bRoEKvd633y/PtXet51vP2ePeHvdbev0/XcZ7n
/l/Hca11KRz2sncV4OPjk/ufz39/1z/z5MA1RRKua2U91JloBT1LYXD7XSZ4
zvN/p2/q3mJWMkYg+6XfVElRI75r9nesS6ahIlrDrOIhHVSLO8WBVziod/SY
PviZ+8tdP89nh8sfpGapyZKRqlnheEm1BUqD3cV7BxiYblMSS58mY0Ot594n
pyi40Cperq7EwOupd2JnQvshqtNtb7aeAcnBiLw7kVw4tvr0pn4nUH5umVzx
qUb8JpjQ80cE7Zerl+ezww9mLM7TaybhisY7R8OCFsRmTUfNWcrE1evPUjPa
BvDUJGH1JhoDx7T9ul3TuFg6vEleZz4B2cXG7pU7KFDMqXmydhHjl6uL57Pb
tb2+PtK/24G1Xh7DxTo0bGcv7nNy4OJu5MlO0fckHEy9c3xzbAtCAopj+X5j
ItpS/d2kMhnK16KPR4m0YLIyptSplXdu/7+6xWIzV0N/Mu44D90tqOgAZ2zC
j5PHgkKewW8xCwg4dCl0VnO7EDs37bLtSjZefV7NMblFgKsSpHD0t36cep9u
dmaaDSH+nNEd3gTitZXF5j7txfVxN+uIR2yE8JuG3yb3IdTr5I0XPXS016yX
Cw3m9Z88/+eccXptbfVFAhLRlooCJ/tQKeOax+hgI/tRyQTjGgHqkt1/7rQg
4U3yT00vJTpyWTfiPEpJaG/KLIuktcDuQGaQojYTx13cLW6f7YLWE5b8zwc0
RAoIiwcc5oIYaHEQcydgfPGK86nUXpC3jlfeLWL/cuvA8/8sr2mKsDAyo+C6
ft/t0E31eFv4RSJoAQ1H5V7rnphLgaolc3WF5wCUn+66jCQOdumYSxh69UAg
S803Tp8Oh2c6gmleXCjQxp4ZPSdBRMbndUT9zJylantBQYWJatGvYVG5BFb0
mPmvk++H77mF7faCnF9uHXj+n+UWC+WkqGpkJP54sXJrFhWJFRAP8WShFf2f
4vvbcNxI09HAfwQey2rbS0y4qP756eaqnwTkAxXJ3L0DWLOkj//IJQ4elocf
5Esm4BRequgQSkLWG9t13hp0/JXkftpckIBGQJL62oYunHFXFPCV5eUtz/85
TxyxiPMRaIW2p5x+0oNhSJ7VSrmgwYW9Qc2fLtpkCDvuaOquo6Jwe9nNvX4s
hDy/169mQ4H6b2Evzv98A9fwXOlz0yNIOOSk5h9K4IBWpa+3eR9uBI0uEmtm
4/lo1oYHHmQICe6aWny5Axv2XhiWvMX65dZhtvoouX1UIoyMG3dy+98OdqBC
s2Wq6j4LtBfbz57fOpMnoh+MfO/1YO3gxVTlc2w4t1oVPibI4EufOjX+qRMf
qy3bupksXF/3bWh5DgnZg/2lVvVt+ET7JpWygIUP5JYFZZIEBBtPHyhc1o2B
hOrLwapsjOyNTNyeQ4ZUgYK4tVMnItpthcIbWIj4KD48sJsMjTtb/N4VNeMm
3y2J3wsZuD26DEumSIizirVu46eCIR21R8WGBRGbDQVfrTqxO1d11UIXGmJy
uR9SnHjz0Wx32zrZVSttSDizoGlpVfw7pH8TfzGngYmlhn7PFZZTMHag8fje
vxow/dn7s6QtDWVxf+eUdZOhInwmZuo+BYT2CmdBMFDJFYr4W5FAn4HQEe3k
boykKPMHG7NhIkyv1zlBQUT95DU1pTfYTqOsqyaN4MNwyzfbZwTGHG0MH65t
gnLQs4qJYRru1tTM2XqNBL351hcqstqwKZ1fKkyABWfqsUaqWheGXplHX71B
g4qg9VMXZy5uqz71zJ5PxnD/8u/HVWfOc/lPJv8uXu7Ndj8UvcPwbB4ZpXO+
LxKWaQapZ/W9cTcG5qhJycdfoCAjsGg8/kQdyqQsUZU7gt7Loudi/yBgEOTQ
o8/oxgfX52mBO2b6umTH5exIMhSCer2f2TdDvrvG5EEYA8xX/PzVKwmE7jq0
uPoLAfuHbta9HDoMFbNlKw6RceqodtUJtw40m/j3rUpl4aXd6SXLOjsRM8xx
0YqiQfWm1gubA1ykR8o1P40n4a1/VavyuTYUTUSfz/vBRO38I7KPjpFR+GRp
RGt8M84+tJNWz+Q9/5ztXruZv+alKYGEvEfnEiJ78JviwtNpvmywM7UvF3UQ
SFW/kuPR1o+tiI6Nsefg99Nyg7+vJOONw9WJLYFUFBEbXGKPsmB6+FSPlvpM
rlafSQj4Vg/RkqC0PG0aCmIOXnT2JOGw+ZofmwXbYHqwZX/DeyZeN67i8l3s
nnFzm4hJGjp11WJi3LjY9HUO/feZPuG8YI4Y1aQD03fnbLNMYIHJzHc+Wk7g
06O8FWXHmtBdIlH2bYyGORrDh15fI2PaIulQhXYnhA07/PKf8/J2tvvSW5nS
Pv0zfWaFb/VP9S40OjiGpXxhYZudU7nwGQKV9wqG2ji9sFtklB9Rw4avqafm
GTqBqonA/pULBuCmIjf36nEO9HYWxLYXEghuU1C9s7Ef7n5VceXiHNgPCLVS
nNuxWnpse/a1EdR0NT8SseDiy4M55Sx/EiTTKvKItW3Y8dmSm8NkIrxSPT1X
ZWZ+r9FSraISWBO7xK6nn44GoYUuCj4U7Nt6q1KFVgft4vNaVbUjcKFn3/6x
iMBHzBOFcTeW/KGtvFeDN9fPdj8SnhtCcaZAt/RNos+JNxj/voKyrncEOVpr
45ycCfhMHy5aY92LlARdmccZbFCvbyQeN8z0CQzrxStu9aNQ7r6lkQEHV/Qj
rdtvtcL5A+eNeO8wpqp9jO9oczF5LHC1XCkBwxBGkLdlP3JEteQvy3Lwyt3C
dOuqmfl9otk7cEMD7DpIKfnGM/1z1lzmYn8yFBVFD9V6N8NSWMLoYSIDg1Sd
0Q1yBE62+Jfd8uiG9I8S79t6bLx3SpfOKyEh2NTbuXe0Dd9DvHO8pXh5O9s9
R+pJdedGMhj8Gmq+7GZMjvTQ7eoYeP3CIN/w8kze+lu9+Fndh9bpAyLiLDa4
SvEbb7u3QG4fp4F6aRhKe5R+RqlzIXLRVdfnFYG6TeG1O+P6MRSuX35Em4N8
RzRUcQhIZpvqMOQGYPM0OcXHmwNNy78fZEmT4TI+36rMgYqVOjWU+wdYaA7e
NGyhRiBJoW5d3otuNDRZCd2ymvm/nCO3R7HJeHnM8vpkMgX1QiSXeZoz15md
H6j+moxHazxfOpM7cV+hxXTOIO/cznb/1MzlfyZOgPba/Ox+LQoiP5l8XSXE
wPx2OSZFqBmK9uEu98SGseTwg6ZDi7ioKnGX/BZHwFSpSsYjtQ8ax+n+WoNs
XLKYXH3TlcCQ/ZhT9aleCKiU5CblsME5stbONpDAHpFNSW5SfWguKtM/XMfG
aLTL5LFWAvMukLZlv+jH4zzpyXtbOYjSZkTkBFAwdEeoNTG3Djn6aZuqH4zg
hYW1mq40BcdTlS33lzSAT77248J9NPhTFSXrbAl4ugaPCrb1IC3gpxp/OK9P
+Ff7lj1XJew+kpBTWOLRRm2HAF9a4wFTFlQYq3+KbKAgmzFh4lVWj7HBEQMF
ZRq8T0i/vOBEQEBWb0GEYi9ELtHS56SwEfXXgFgWPwWB8eN3qrQb0Sa55ss3
fxr2J6+b+nmKhOydRZPFh1oxFFJbJeXGxN1E1qfDlSRQGzfwLZNpx6Mc91qv
ZSzU3rNLkNVuxtzs8SwznWHcf63+zGUVF6p1S67nyxLYorkkap8MBUKk8e9K
P+g4MSn2ocicjKse/Hp/kZqh8SyWbVvJgG5iII3mSIFRl5KPb+4buCp4NWmw
RmDwxth0ikmG+oK57kn2XXjCJsmcmmbhu9p6lWAQGN2pTEwd6sHb6PTB6pNs
xGX9XJCbSob8VZX5IlrNyJ3rV/jJjwHnzNOfkv8kIahss4faiXdY6JK2Xvk5
EwNfz664HkdG9uSGuIPCnTCrt4xPreDl7b98fhc+XHqQQsIdLYfYecfaMZEf
vzdRnYXYsV3qulsIrEh/f9tgP4E3J8z7HAroaFGKa1p7mASLj8ua7ge3wnSp
TpSMHxOHzZQfWH0hIYYiMdJ5tAVRUmF5+ycZWJXEer9jZn+FQs4nSVbN9JsO
D7WMEpjYI8T/vfXgzH5325rNlxzBZNaLsEw9Lj5Wxa4afUnCE/VXRUX67agy
fG9vpcTbd57/o2+7kVKsoUEgIaex1KmcwJGp9iutzXRM6q2v6Jn5Ha1Xsi/k
UD+m1zYmZitw8LzPZqipkYB3Z7tCbOtbBC0OIsu00EBd8PXUwgACEd6vOl2N
ZvImyzPj+B46HHvGqUay70BXqZmMmxrG7hahkAodLjbmXL0XokmCoVzJhYWd
rbgaMlfDOIOJ0eDQdS3nSZArDxYtNmnFN4dTzxbu+/XWjef/t17tKar21I1A
4OnYVIMqMrRuVVUZ+tJhrmW+P9OYDKESH3/Br1R49qRf1w1hQUAoz9vtKgWh
0o7dJ96+Rn5Wwrhf2Aj+xK71Ut8ouMA1K7/cNgQjaVcB5vQotso0UVV9CFwv
kH9yLJAMvqanaW5H6diwLmB4hSAZevqDnzu2tKCPpVW4j8uAoNuCvGgRCvz2
pdZVTjRAj9HxbcKd9z4Iz//RxyPDVATvkaF83svUJ6QTmYOavsHNLHgHyp7y
0iOQtc3tRsPGHjBNLSQeubBh4f5pOj6DgqzY5Q3+CYOotL9bF+o3ioopivCO
TAoa+iZ/HE94jeKzRl9PnxnBgvYz5x63EGhICzSOTn0LDvv3FunXNBTo6ac7
2pOgH2VZXZrRCu0/I8MXhTKRtNNEffMuAmEP8/ePT/ag6IO3iHIsb67h+T+6
+90MvrMFBN5uz5yuqW9C8o5HkbpCdBxhW8XsOkPBMf8V2w2FBhETcF86avMo
Co6bd6hpExD70fFBR7IHBcVEUMdeNgqd6DFrrMlYzM+vnLa8A4l/LfxD+iIL
2Tb825WeEmC/93tg6dsPyefGSiFqHIhPr03eZkSgU0Pi8ua/CTxPvNK1u5yO
1X22qZ8MKHhbmuHiEVCP85VXjOSX8PJ2tngmpSp96xcytsSlfacGdOGko/ie
HkE2mj2ixL1m5qazslUXi7veoTF6Vf1gBxMG/NaKlTok5OqmRAaZvIOVXfc8
iUom7snC5/4TCgLnewhTfwwi10Wz6OTtUViU/XUs/jaBKwHfe2vnkTBxdl6Y
ngwdo8XKuxMryShrnv44N7cTPmfz5+3tZCEl4H186yECR2/Q/Q0nyMisE63A
eTq8kmosluoS0Ja88XzPNQIC7ZHXWl7R0agx9z2ziwSP8GH91Jh2tEOQc1Kb
BVPNz/0vR0gYc5J/ZvKgHWonFPVDDXhz2WzxpA+lkbd7Z3JK5ptPmdlb3GVn
5Co8pOHmgVhHvjIKBuZXWHgOvcJn08F16+1HcM1rQqQxggLjkDLhXRhEP5Nd
kbxzFL6d+WN//E6C3tC8TpbcO/RVuPpql/569fJ8drimQEUjtYGMCnGxkz0t
FNSzrdsf2jDQn9kbNWVIwY0Uo8LTeA+xmMbFcQwOhu0ff2RUU7C8d/+xk3mv
sGdFspaG2QiCzWl9g7tJKHmp3rWs7B0efy7SEWr+9erl+a/pHww0e5Y5EnjF
91lnUp6AgejiRr1EOvJ23pMvv0BA+fPeJMo0CZNPdodrWtGxySHMbHz9zP39
/bm0KYn3sFkq7raijYORpa5p856QoZK9aV/vRwo0pTJaHjkxUDHULR87QqCf
nZH0UPgtjF7b3JW/Q8O2wJLhE3wEhvpU89xvdsF4NJxZLsabg3j+v3N+obk/
3LJI2B436Dw0rxUOVHMDK2MmPoecs41PI+AQlr15YLAPKY5pi36MsdG4pbPi
1iUCR97ylZKfk5CWMj9qvSH9l6uL57Pb+ZVW6ZWGkmC091L5Rvs2qA8/fVQ0
xsSzlffeXEkioUBRcvuwUiseT1/Rtd7GBHmLkKmmHYEVKYqqU4YErmser9O/
wTu3PP/3+n8BvIdPPA==
                "], {{0, 0}, {29, 29}}, {0, 1}], 
               AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5379", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
wTu3PP/3+n8BvIdPPA==
                "], {{0, 0}, {29, 29}}, {0, 1}], 
               AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5379", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.18182125473228772`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "6"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "690.9580705994681`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "7"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2.833059379951953`*^-11", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "8"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1069.7193041900418`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "9"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "259.16502231211973`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJx10ktLFAAUBeA7PvOR9nBQiQTRoCAQDTfVIglsFZqPjRFiBEqQEhElFJYQ
bRwK2pQSCuYmEQqCEpFWxYhuooVEGUFQDLPQoBKDqO8PeOFbn8Ph1p4f6hhM
RMRcbH/FVFDDQZo4Tivt9HCB64wxxQvSfGKDPCFVHOYEXQxwg/s84RUrfOEn
lTkRRznHLaZ5S4bS3IgGOrjKQxb4TCIvop5TXCTFM97zm+p8/elllBnSZCkr
iGiki2uMs8g6tYURndzhJRn27Yg4zQjP+UqySDbDzLJGuRFbuMIMqxSVRBzj
EpO8I7c0opl+HrHMXxp2RvTxgDdscqgs4iwpXvODuvKIbu4yT5b9uyLauM0k
i3xki8rd8ujkMveYY5kMhXsiDnCSPkZ4zAIf2CS5N+IIZxgixSxLfCff81RQ
RxMttNPLIDcZY4KnzJNmlW9k2eAXf/hHImkr/gOuj1uB
       "], CompressedData["
1:eJxTTMoPSmJiYGBgFmVgYATSbOwcnFzcPLx8/LRjCQgKCYuIiolLSEpJy8jK
ySsoKimPig2cmIqqmrqGppa2jq6evoGhkbGJqZm5haWVtY2tnb2Do5Ozi6vb
qJJRJaNKRpUMbiXuHp5e3j6+fv4BgUHBIaFh4RGRUdExsXHxCYlJySmpaekZ
mVnZObl5+QWFRcUlpWXlFaM6RnWM6hjVMapjVMeojlEdozoGWkdlVXVNbV19
Q2NTc0trW3tHZ1d3T29f/4SJkyZPmTptVHZUdlSW1rLTZ8ycNXvO3HnzFyxc
tHjJ0uHHXbZ8xcpV2IjVa1avAQBPxEqq
       "]}, CompressedData["
1:eJwsWnc8lt8bLqSiQiFKisy2mXmcjIzskZ2Vvffee+89ssneohxPISqUFUJJ
UlEqQjT8+j3P9/8+et/7XPe17pfF1FHdfO+ePXtI6fbsGTy9cqYqMxzKll23
1+PoFrejlk2eb0vCinMcV0t4nbBTTiHkyh4TXYIrFwrZsyB4+URZ9ulQEnSl
GD9S65GKyb01PPJB5XdXRa2WfvvPCmx19/KNA3VIPLK6GrBpFMGol8vCipdX
u+S2jFlTgvchj6rrvs+lyiFT2f0zf0uTMAPh3J5CRQielQk0bpN+Fr/ko3cp
6GkzNnQo61H8qWPA4b/PE/lgTV9C9GvXpdyrvQ7niiEvZedrCY1ceKQs+LkQ
84uuxW8ZCum35BDdfHH8iZksbPeDz9XP6Q1w9WMu59XbB8G3rlN2t0arYO5/
34suqJuOonkfWqQg/o6FhHWf02YZ7Fo62Oz6hAJR+xQIbVIeRzYKv9tkkSNW
0qzE63OkBU6P+v2OSKcA2d/Xwm95ZmLltGQ3jYMnulr++176FLdYfl972OVP
h84fi6NEcX+tucw7W2DzaMZBZroGTG7tk+oBcSOwa/eR3Yx9P4hU+5Oa3dGE
hXvs6ZQQpgMZmQcpdv7NWfG/+Qw/e0s7kSOH/OFvj5YqBsQ5Qvyd4WU3maXv
zZB7dsoj77suotk31Ks5o4C0ec7Lsur5Ynmaspb2Habo8X/v5dbum58pBcGb
N8R8vskQ36tVYnU07NktYPFBmzRSWBftOxdN7iWXA3tENQ7YyOZgmqN/uCSX
WECWXGntuHAzZvbfu9fUZrwVXvss3vPfnIP+m4/3dNNWW+tB4FqWpV8bpYCQ
GPF3+GbicjeoeqGUA+eSpgU1Mj189FiOcgLcufPyupjyny73/979nHzGscdX
j4BWx/Cv3Ow0oF+TmA/T5jn8e01jZupVr9kAWOguHO/ci77mmgvTnHoKd/sl
nrPdO4ry/8PhgJPebePeYyDrv3efWSfei1Ob1quvmxZgjdKApc0Uhfz3vWj2
EZ9HRLyaw6fwKJrbOfdGrvY5HHA2Sh3ML4NBhSv5CfuKur5QVeVus+ZCmear
yc3VO+L5MTF0Y5EZGJjbvJJdQAvyfJUjryblwKRfjxoj3moD11RzqfCFHMz4
9bLNjoEgCvL/xSmqlA9NxrAt2rhMKHf66uXR47viJkIaC2csmND89WnqsWUT
ZHpio1ukvxS7/oNU/+XfDFg4qvtebsoL+NMdHXpI0wKfCk2rpg45A7ITjz7X
NkV0BRZfv3udrQ32OOYeERChQ787Riu5p+Ox9NAnT6vZzoLuLsvOD3dqYXQd
v/fmAD8y/V1MfZS2HN4692p7n7IJOLvklmHOFgxvUL3lLLeDoG3Np4x/RwI9
5nzWls/chsVYq8dWHajHfqQltjPXtmJ9hz6rdzn6gP4o0o4HSSrggt0bvTXZ
dGzza+RulYYlUO3ResM5q4/1/jcvKr6jwrZ36dAl7huGzsfvQ9u3tUFB3Iyg
Wmr7imNfEfZpu+WNjzoXiq+s8vCmrcXAS+Z0sUJWlF1y5Niz8FgsmeuSgtvK
TZSuxfnO4lIjbGnefZexXo+d2fnWyWMoB0YXJ+Jf6UFkWN68XZesi3QX9Kt2
R/Iw+snX1RvO5bDDOfg4l4wbKONzC6QfaoCZVy4HG/i6AIa/7z4cCPkp3oaI
eXFNNht7RjCCiKAGrQhDBGszydbOnOdEpu80o54PNWA2LLH+z+j5QU7DIdEq
nRhMUbjKuDpAHFFcvF5Qk5iELWfaKRz6yw6w0Y0rB5kuIZa04JZa9hqs+qKM
7IMDDZDePaeVlL4Ru2EvbM7x2QWQnnlyft33Ekhd3uA+9OIejB7pp82j9EYq
54/nnrctwAxjCXydY9A0nPt6BvjKEPMS2rheGw3Z0dDlPuNFmi4Yfnw/+48z
+8Adre+iUxOZ2FSTifWm9EW02fu64pJQGPywea2VpUoeKAxBblvSJmxvyEvv
iDf52LuOw+PNmwD99q2t+T0oBYyZubwalSDQmhuYuGrsCEO3dxPW/dNh3zZj
T9sbW6Cnt2fzSVkl3DOqKTGrYAFYjJ2U71ofAxTdBL42g1ri3uVyoJfzxLwk
nVdPWu45BsqvHd4X0doPz5Uon/kjpIBKpmtmyDc7ofZTw26Hkx4gWFV9S/l4
Mibfq16ubsiC6MDmg7S+fYglSN7x0JUyeFtv7Hi0Zyt2wY3xwZPpJExOT00w
rscYXIwYk95RFgfC3V7hkgbVsO1s4eXhU7cQR2W8UfxoNubtQ+zj+veVfF81
AfSsmsCXkXX39g9BXrBmRMyL7ogZ+a0YWSTnxum1bPAUHkkKseS/KYaq/m6W
2vsnw8WsM3TMrw3Bp2cd0ZPbD7DCnjzukqJUqLXVUXE5Xhp9EaJbSj0lDByw
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
0zkOsMg3lgaeKQKrhXl8D8MWMZYibLhuEAcP+PmFu7Y7QKCmDRAXNMci6T3Z
R1LSQb2DLX2NugvmO70YPRC/CdOgyxU1vTj8qzL9UKS+Dc4sGPn+BbM32CP8
bcj9Ixm3JNJSTBD0xX+sl+WlkCbAO/co1xUzhuCJT6tA4lcMtslAJfvs0CQg
uFwnXMKTCuy3alEe6FxoL00TXyUgtb4z8OlsJjyUfx1x9zVZu81cO14wIaoQ
ccZspp8R33q6uB5xlbgth61YVD744nVU8RFXKrBSu4v4pVAtyvXUb1Hw8bEe
xGs0MTxm7AWWUGmmuZ6GMBX4XFNGvuj83O/t3idBwJenCflA4Dgp8h+o7PXT
7zOXwbjjcnfKmP2hmR4P0vkkVY5Ehw87AY4jbUjXMHLq/WyWUAzJbyeiPe6M
BJTjqn0OW4Wy0dw6fI4IzUt2/c+cgv6Eg19cR/Bc5hyQ0KL39F9d6qBpQPfh
3f3KMI8fjeDTCQ3j17pfseZRT8UdHWc86NZKSf+DQQDwq5vSKwaY/l2D0tN2
qeCXdM/Ti+KxOIN2IfMlmk3g2uRz2KUpDG4tPS5fzg3EyKe+OOjNZ8DWolXR
S0N+0MrwnupEthtOMZyvdprOG2MzyZZ7R9gEdl4Eq0+UmWHJ8YEuaTJ/oI8N
P8pl3SokkTfcnoLafU0De8Sz8Jf4dZR/OPZZU/Ky8wIM3aFDvLcc6wTijCVW
wib+8a0SAoYGWrNLcC1pzjt/vwdul5AijmxIzlA0YmQHvHk3gbiZDwuxrN8v
L4KvpMK05fEz8MNoNfKn3d1pFncKawGV/IEf56tLKv7PBxLtp4+6M7YHitno
NW48X4eqNMRIbyWMu7d2lLgMMmmmIX2JJ3f+JnvBPKg4Q4z2ab3e6S7+oBDA
8IUd7Q/feJ+hufWuerkQTOkCtv6G1zrxHhhHJY36A+heXvxXl46G/ewkq+0E
O/L56BzCxgREXLB57L7K9qU9glm42lLE0vb7FUZ3/Sx0a5qFaak8uGRXCjb5
8SPPdDhhw8Zhp4/0vesgqcfezVg8BDta3ZKGfWgFleeukqh/zIZfL03/Xnob
iV2/HPTVgicAN3RxNm8fDYA9lJeOneBywDx2a1FOsUmdqQH4x8GMD2dRLsuq
+CfKA326GpZ88+IyoH2/jPIP/s/qLw4rbIOjfjeuOeCTYGhNltuePBKqizxG
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
YQ==
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.836985815693776*^9, 3.8369858203733273`*^9}, {
   3.8369859499475203`*^9, 3.8369859564266863`*^9}, {3.83698645839468*^9, 
   3.836986471100544*^9}, 3.837064982084795*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"131a9d20-443b-4f26-99f0-d2b74145b484"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Field operator", "Section",
 CellChangeTimes->{{3.836985283696055*^9, 3.836985285258136*^9}, {
  3.8369866327502413`*^9, 
  3.836986634621505*^9}},ExpressionUUID->"17e84b69-9b23-4dd8-81ed-\
72e410bc5156"],

Cell[TextData[{
 "Find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", "-", "1"}], ",", "n"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1e7a8d97-dd93-48f8-9b4f-16c9f0d71107"],
 " blocks in the space of monomials."
}], "Text",
 CellChangeTimes->{{3.836985397070799*^9, 3.836985409533478*^9}, {
  3.83698621294963*^9, 3.8369862141866426`*^9}, {3.836987219718812*^9, 
  3.836987249145233*^9}, {3.837000711103628*^9, 
  3.837000715608301*^9}},ExpressionUUID->"f86e1dcb-d1ae-43eb-86c6-\
4e59896f3882"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"psiblocks", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"psioverlaps", "[", 
       RowBox[{"#", ",", 
        RowBox[{"dmaxlist", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"dmaxlist", "[", 
         RowBox[{"[", 
          RowBox[{"#", "+", "1"}], "]"}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "nmax", "]"}]}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.836986662889628*^9, 3.8369866690764017`*^9}, {
  3.8369867934958344`*^9, 3.836986803262504*^9}, {3.8369868623990927`*^9, 
  3.836986865912238*^9}, {3.836987259707778*^9, 3.836987267599698*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"10210bdf-9b67-41ea-861e-092ca391fa51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.992677`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.836987278202743*^9, 3.836987302782715*^9}, {
  3.837060004878788*^9, 3.83706002418858*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"a915f272-8a6e-4e67-9dee-de9b6263ab4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "psiblocks"}]], "Input",
 CellChangeTimes->{{3.836987314959771*^9, 3.8369873172622833`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"3d73c4b0-9e21-4524-ab69-bc8c90bb0baf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "84"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "165"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "220"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.83698731754315*^9, 3.8370600329321613`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"ab593ef0-8c70-429d-95af-e0e21fa2124c"]
}, Open  ]],

Cell["Each block has polynomial coefficients of varying degree.", "Text",
 CellChangeTimes->{{3.836987446448145*^9, 
  3.83698748665854*^9}},ExpressionUUID->"1937c91b-8130-49fd-8b92-\
3d00a5f8209c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"psiblocks", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.836987435017282*^9, 3.836987441209231*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"5809b6be-3389-4955-9ad0-454b1b9c085e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1.`", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.836987438224429*^9, 3.8369874417837687`*^9}, 
   3.836987488333878*^9, 3.837060029808269*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"36a1513b-d017-4a27-aa7a-97036bc9d3cb"]
}, Open  ]],

Cell[TextData[{
 "Maximum length of these coefficients is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["Max", "n"], "[", 
     RowBox[{"n", "+", 
      RowBox[{
       SubscriptBox["d", "max"], "(", 
       RowBox[{"n", "-", "1"}], ")"}], "+", 
      RowBox[{
       SubscriptBox["d", "max"], "(", "n", ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "364d87c8-2a55-428d-85ad-364953bee1ba"],
 ",  which equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", "max"], "+", 
     RowBox[{"2", 
      SubscriptBox["d", "max"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "40df91ab-55eb-4a20-8bf3-797b1947fa99"],
 ", when ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["d", "max"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c251eca2-3396-4421-92f9-3da7768e3c50"],
 " is the same for all ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e57e4178-8c87-4812-b089-3e85a0fb6aa8"],
 " -- see Eq. (S23)."
}], "Text",
 CellChangeTimes->{{3.836987446448145*^9, 3.83698748665854*^9}, {
  3.836987611235199*^9, 3.8369876177597103`*^9}, {3.836987649066654*^9, 
  3.836987678055213*^9}, {3.836987834785964*^9, 3.836987931392538*^9}, {
  3.836995743997939*^9, 
  3.8369957907402573`*^9}},ExpressionUUID->"bc8583d2-5dd6-4444-b7f9-\
5a5ba390076a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"psimaxlen", "=", 
    RowBox[{"Max", "@", 
     RowBox[{"Map", "[", 
      RowBox[{"Length", ",", "psiblocks", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Max", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"n", "+", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "==", "1"}], ",", "0", ",", 
         RowBox[{"dmaxlist", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "+", 
       RowBox[{"dmaxlist", "[", 
        RowBox[{"[", 
         RowBox[{"n", "+", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nmax"}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"nmax", "+", 
    RowBox[{"2", "*", 
     RowBox[{"dmaxlist", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8369875285044947`*^9, 3.8369875611505957`*^9}, {
  3.836987960114499*^9, 3.836987973569255*^9}, {3.836995810107615*^9, 
  3.836995811849223*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"873306b2-eaf3-48af-a832-54963168e448"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15", ",", "15", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{{3.836987532277544*^9, 3.836987566445167*^9}, 
   3.836987974960115*^9, 3.8369958128801203`*^9, {3.8370600382162724`*^9, 
   3.83706004706453*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"538d85c0-43c1-4fb1-91fd-c0d7fe69688c"]
}, Open  ]],

Cell["\<\
We pad each list to the same length to form a rectangular array.  One may \
wish to truncate beyond a maximum power.\
\>", "Text",
 CellChangeTimes->{{3.836988027311365*^9, 3.83698806542922*^9}, {
   3.836993420738888*^9, 3.836993421378119*^9}, {3.836993826617463*^9, 
   3.836993877327517*^9}, {3.836993975960311*^9, 3.836993988786098*^9}, {
   3.836995831893931*^9, 3.836995832094509*^9}, {3.837001098829126*^9, 
   3.837001099749587*^9}, {3.837060081538837*^9, 3.837060201207522*^9}, 
   3.83706071167929*^9},ExpressionUUID->"60e562b1-07f3-4a43-8e86-\
87f0ee93cc5d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxpower", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"apsimaxlen", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"psimaxlen", ",", 
    RowBox[{"maxpower", "+", "1"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"actual", " ", "padded", " ", "length"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.837060215395753*^9, 3.8370602412833977`*^9}, {
  3.837060286847056*^9, 3.837060326819892*^9}, {3.837060735960126*^9, 
  3.837060751088777*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"381f0862-e202-4366-9eba-b29ac86a36e4"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{{3.837060299783704*^9, 3.837060328220693*^9}, 
   3.837060751777988*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"3a9583d1-a6fd-4192-8944-8408afd37a58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"psiblockspadded", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PadRight", "[", 
        RowBox[{"#", ",", "apsimaxlen"}], "]"}], "&"}], ",", "psiblocks", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.836988097024578*^9, 3.836988101606666*^9}, {
   3.8369881373302937`*^9, 3.8369881490228033`*^9}, 3.8369940256710787`*^9, {
   3.836994189599566*^9, 3.836994192567541*^9}, 3.8370603333760233`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"32db77b8-8222-48ec-b2a3-fe32538618c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.222112`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.836988150507568*^9, 3.8369881699612827`*^9}, 
   3.8369940269306107`*^9, 3.836994194048905*^9, {3.837060061726087*^9, 
   3.837060066165362*^9}, {3.837060334505744*^9, 3.837060339354912*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"083e8826-d8af-4c8b-b8d5-312d35d1edfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "psiblockspadded"}]], "Input",
 CellChangeTimes->{{3.836988173463829*^9, 3.836988176175852*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"2bdc90fc-47e9-42be-a664-4347911906d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "35", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "56", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "84", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "120", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "165", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "220", ",", "11"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.836988176819026*^9, 3.836994030727603*^9, 
  3.8369941961425323`*^9, 3.8370600691423693`*^9, 3.837060343923505*^9, 
  3.837060607113141*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"2fb118f1-da39-44bd-b075-c7bf85d4efac"]
}, Open  ]],

Cell["We now combine the different blocks for each power.", "Text",
 CellChangeTimes->{{3.836988027311365*^9, 3.83698806542922*^9}, {
   3.836993420738888*^9, 3.836993421378119*^9}, {3.836993553662578*^9, 
   3.836993566134121*^9}, 
   3.837001283200899*^9},ExpressionUUID->"479b70cf-8d53-4241-b5bd-\
af11bc22c4df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"psicoefmonomial", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"sblockmatrix", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TensorTranspose", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}], "&"}], "/@", 
       "psiblockspadded"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8369934276770763`*^9, 3.836993430230291*^9}, {
  3.8369935065922213`*^9, 3.836993538016943*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"5491dfe7-6101-4090-aaca-e8ab8fa83687"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.460897`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["404012", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11", ",", "715", ",", "715"}], "}"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["404012", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11", ",", "715", ",", "715"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.07184383321700549`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "6"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.4142135623730951`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "8"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.7071067811865476`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "10"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.4714045207910317`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[SparseArray, 16161392, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "Choose", SparseArray, 16161392, 
              6387694862425499023378066456020914176816129070783249371520, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<404012>, {11, 715, 715}]"& )],
    False,
    BoxID -> 6387694862425499023378066456020914176816129070783249371520,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.836993541834292*^9, {3.836993729999597*^9, 3.8369937363573227`*^9}, {
   3.8369940342622843`*^9, 3.836994042567481*^9}, {3.836994203411955*^9, 
   3.836994228454693*^9}, {3.837060367612265*^9, 3.8370603843743067`*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"e42384af-f6ba-4173-8eef-b8aed2c87874"]
}, Open  ]],

Cell[TextData[{
 " Finally, we transform to the actual basis with proper rescaling -- which \
is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Delta]x", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6521597c-0907-46b1-b286-7ab7d22c59d3"],
 " [Eq. (S17)]."
}], "Text",
 CellChangeTimes->{{3.8369859741381607`*^9, 3.836985977044573*^9}, {
  3.8369861592167187`*^9, 3.836986161490638*^9}, {3.836986416788144*^9, 
  3.836986423958056*^9}, {3.836993623250725*^9, 
  3.8369936594850082`*^9}},ExpressionUUID->"a419bf6e-dc17-496d-b918-\
65825c2c44e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"psicoef", "=", 
   RowBox[{"TensorTranspose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"txmat", "/", 
        RowBox[{"Sqrt", "[", "\[Delta]x", "]"}]}], ")"}], ".", 
      RowBox[{"Transpose", "[", "psicoefmonomial", "]"}], ".", 
      RowBox[{"Transpose", "[", "txmat", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836993679091091*^9, 3.836993706383809*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"f7402547-5eba-44e6-9daa-8a54768b6fa6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.127992`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["50738", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172", ",", "11"}], "}"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["50738", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172", ",", "11"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.15591351590540342`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "4.47213595499958`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "7.745966692414834`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "10.000000000000533`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "11.8321595661971`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[SparseArray, 1220088, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "Choose", SparseArray, 1220088, 
              6387694862425499023378066456020914176945256279299422590472, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<50738>, {172, 172, 11}]"& )],
    False,
    BoxID -> 6387694862425499023378066456020914176945256279299422590472,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.836993711644168*^9, 3.836993754087255*^9}, 
   3.836994045584179*^9, 3.836994231881419*^9, {3.837060621249856*^9, 
   3.8370606393107567`*^9}},
 CellLabel->
  "Out[157]=",ExpressionUUID->"f5df95cb-b774-467d-a18e-b76bff180eb2"]
}, Open  ]],

Cell[TextData[{
 " To get the field operator at the left and right boundaries, we simply \
evaluate the polynomials at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e4cd4a79-44ee-41ca-944d-16dddece6bf7"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "21234c20-a441-490e-bd6b-1fa38e257789"],
 ", respectively."
}], "Text",
 CellChangeTimes->{{3.8369859741381607`*^9, 3.836985977044573*^9}, {
  3.8369861592167187`*^9, 3.836986161490638*^9}, {3.836986416788144*^9, 
  3.836986423958056*^9}, {3.836993623250725*^9, 3.8369936594850082`*^9}, {
  3.836996075435277*^9, 
  3.8369961180923223`*^9}},ExpressionUUID->"89d944aa-8170-4bbe-b27a-\
9ffb71727ae7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"psiL", "=", 
   RowBox[{"SparseArray", "@", 
    RowBox[{"poly", "[", 
     RowBox[{"psicoef", ",", "0"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836995956720543*^9, 3.8369959745950403`*^9}, {
  3.836996125894388*^9, 3.836996200369718*^9}, {3.8369963054926157`*^9, 
  3.8369963113192368`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"4e567466-f9fa-4549-8b44-882048440b07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.119074`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
GJ2Tf417X+b6/83/BdfmY50=
                "], {{0, 0}, {29, 29}}, {0, 1}], 
               AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4729", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
GJ2Tf417X+b6/83/BdfmY50=
                "], {{0, 0}, {29, 29}}, {0, 1}], 
               AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4729", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.1598499188750676`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "4.47213595499958`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "7.745966692414834`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "10.000000000000533`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "11.8321595661971`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxN0T1IFQAUBtCrlb7sZRlWEi2JhUnooIQEQVioQ0sPkUgCk5SQyH8rCBIJ
J0uRBpck9E2SIU2BISLSoBJOQSEiTSkiDVEREh5o8cJZ7/dd7pmmttSDjIiY
iv+zn1wKKOQCV6jjHk8YJs17llnnJyctusRt+pjgIxskMyPKSNHDKDOskbEv
oogaWnnONN/IV6iaR0yySu4BnegkzWcSWbK5zxgrZGZHVNDCKIvsUJqIaGSE
BX5RfDDiFoPM8oPCHHczQJp51vnH6UPyuEkvL3nHCtskkxEl1NLCM8aZY40d
Th2OqKSebkaY5hNb5HhEMdXcpZ/XzLLKXwqORFykjk6GecsymySORpzjGk10
0McQY0zxgSW+ssEfsvMiTnCWCq6S4g7tPOUFr3jDDIt84Tu/yToWcZwizlNK
OZVcpooarnODehpopJlW2uigix4e8niPXWZ/Wt4=
       "], CompressedData["
1:eJxTTMoPSmJiYGCoFGJgYATSTMwsrGzsHJxc3Dy8fPz4WQKCQsIiomLiEpJS
0jKycvIKikrKQ1FMRVVNXUNTS1tHV0/fwNDI2MTUzNzC0sraxtbO3sHRydnF
1W1UyaiSQanE3cPTy9vH188/IDAoOCQ0LDwiMio6JjYuPiExKTklNS09IzMr
Oyc3L7+gsKi4pLSsvGJUx6iOUR2jOkZ1jOoYrDoqq6prauvqGxqbmlta29o7
Oru6e3r7+idMnDR5ytRpo7KjsqOyo7KjskNRdvqMmbNmz5k7b/6ChYsWL1k6
yh1y3GXLV6xcRR1i9RoYBADhOJ2W
       "]}, CompressedData["
1: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
/UqBxtMSySOoxPc1iBIsQLPPoSrHGtuBUb1R8aJvHOr43o6XTx4E5qq5l5zJ
vShWuuGs/L5J1vxx2W5QVo20MjFh2/UpKD+ySZ52fxxJK8MD+0u7gJ699gyT
+wvQjxb/W+vvhPTKsLzu0fegs8zDaFVcLi66zlQ3ZaYhM5P6tv1GCOpUpJo1
3GyGoP2Djm9zvZGuo/3gbm4MVgUmDx66W4KXSiIXz52gUHuXhupkTj6YRY1e
MrhM4Y77JrdpVxk4aOlUw7YxBYgH289x8GWA2458m29OmaB1RkMZ/ivAuvzI
4z35iMJkEW+BbA983LLitMGNRggvO3P/nG8lVElf3ntv5AfSPUyFvarSgGYi
soGT2QQZ6zbdtjvI4lvbk+7BEIRj8X+VeISrUUij1WJqlgFB3o0t1JV88OOe
WSb8sAAIs0vPV+4CoLek3V/5mjWnNY5fcTz1Ck9xix3C+BC49PzIxBmrJHSY
jI79XpWHEnclyk/xJaFi66xOh3YzEvTaRuP8h8j7yEmqaTgGGAd1qsNk/UCo
PMDE6lQi0sqX7lxJiEV+BVFzTf9asNVPhoiGRKALtdy1KCvFZJWQ0abrDUBU
OoVeORyKXsGc0n8ftKGfRvzNyZARoOk9c/OwjUPb4/xPPAPycZ+e4wvVijxw
kxP0WOroQnJMIvMUbyL6KKvu+PW+Cway7t41W1mFpucvP9ftG8Kic09jon+M
AN3WVSOm0gfVPjC3rWXG4LZOg2FxvzQk5fbXHVGKwVv3LII647KBPulJf3LU
HgRf+hkqXImH/yY8VDJyMoB6JCv13tEPSMG7Q2W27qjm3xR4+R3ClagnsVOP
vmL4J4mMex3hSHOtundk52O89acykfkCkf3Zfa1w0SCo03M6aTqTir37/faL
vowEpU1JwSLHEPwixY9UDhSDPZfZc0O1eHy77smC4SpW3rBd2yF49AYwcnx8
r/R9A06Bnf17f1eh9Zj1R0tGMxbdWzdxhKBg6anAWs31RWATstA65FMFl1Zo
yBjotoCx+ss1GSXRSHCLY+h6FaQPf15/iuM2mpm7q4jM2oPbZMaH/Q1vgXJA
CyNrJ1Yu/foTscISGdUp7W/kXiDxQtQmzi8KeCsGg7uks/FbhW35nmcf8FLt
90fxyiy+Xnu+xGG3BX56MBD1PiMNzYYcDRIVUoHGle3ibeyOggc1gviDCkCu
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
/x+paKQG
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8369959615612507`*^9, 3.836995975576556*^9}, {
   3.8369961477084227`*^9, 3.83699620529073*^9}, 3.8369963175605307`*^9, {
   3.837060684924594*^9, 3.837060692553697*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"0aff9060-0807-4104-ba3e-57976267c8ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"psiR", "=", 
   RowBox[{"SparseArray", "@", 
    RowBox[{"poly", "[", 
     RowBox[{"psicoef", ",", "1"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836996330401676*^9, 3.8369963328384123`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"21cafd28-4da4-4dfa-ac5b-ce67bc503389"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.16473`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
jL2vxXwhaT0lF35/4/u/5/8Cmrpm/w==
                "], {{0, 0}, {29, 29}}, {0, 
                1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4729", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
jL2vxXwhaT0lF35/4/u/5/8Cmrpm/w==
                "], {{0, 0}, {29, 29}}, {0, 
                1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4729", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.1598499188750676`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "4.47213595499958`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "7.745966692414851`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "9.999999999999527`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "11.8321595661981`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxN0T1IFQAUBtCrlb7sZRlWEi2JhUnooIQEQVioQ0sPkUgCk5SQyH8rCBIJ
J0uRBpck9E2SIU2BISLSoBJOQSEiTSkiDVEREh5o8cJZ7/dd7pmmttSDjIiY
iv+zn1wKKOQCV6jjHk8YJs17llnnJyctusRt+pjgIxskMyPKSNHDKDOskbEv
oogaWnnONN/IV6iaR0yySu4BnegkzWcSWbK5zxgrZGZHVNDCKIvsUJqIaGSE
BX5RfDDiFoPM8oPCHHczQJp51vnH6UPyuEkvL3nHCtskkxEl1NLCM8aZY40d
Th2OqKSebkaY5hNb5HhEMdXcpZ/XzLLKXwqORFykjk6GecsymySORpzjGk10
0McQY0zxgSW+ssEfsvMiTnCWCq6S4g7tPOUFr3jDDIt84Tu/yToWcZwizlNK
OZVcpooarnODehpopJlW2uigix4e8niPXWZ/Wt4=
       "], CompressedData["
1:eJxTTMoPSmJiYGCoFGJgYATSTMwsrGzsHJxc3Dy8fPz4WQKCQsIiomLiEpJS
0jKycvIKikrKQ1FMRVVNXUNTS1tHV0/fwNDI2MTUzNzC0sraxtbO3sHRydnF
1W1UyaiSQanE3cPTy9vH188/IDAoOCQ0LDwiMio6JjYuPiExKTklNS09IzMr
Oyc3L7+gsKi4pLSsvGJUx6iOUR2jOkZ1jOoYrDoqq6prauvqGxqbmlta29o7
Oru6e3r7+idMnDR5ytRpo7KjsqOyo7KjskNRdvqMmbNmz5k7b/6ChYsWL1k6
yh1y3GXLV6xcRR1i9RoYBADhOJ2W
       "]}, CompressedData["
1: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
QD0e3vs=
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.836996334525584*^9, 3.836996342435294*^9}, 
   3.837060695738223*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"e54518a5-63f7-4afe-b9d1-f1fd1901655c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Density", "Section",
 CellChangeTimes->{{3.836996441192733*^9, 
  3.836996442020989*^9}},ExpressionUUID->"22ba818b-5b10-43de-9009-\
3f99d4f60115"],

Cell["Find coefficient blocks in the space of monomials.", "Text",
 CellChangeTimes->{{3.83700067070214*^9, 3.837000676554071*^9}, {
  3.837000720034082*^9, 
  3.8370007236618834`*^9}},ExpressionUUID->"b5cff38a-fe1a-47fb-9bc3-\
2121ffc30cf9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fdenscoefs", "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "stored", " ", "values", " ", "to", " ", "get", " ", "a", 
    " ", "more", " ", "accurate", " ", "estimate", " ", "of", " ", "the", " ",
     "time"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdenscoefs", "[", "sum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fdenscoefs", "[", "sum", "]"}], "=", 
   RowBox[{"denscoefs", "[", "sum", "]"}]}]}]}], "Input",
 CellChangeTimes->{3.837000781031467*^9},
 CellLabel->
  "In[177]:=",ExpressionUUID->"bf67ecb3-2659-4c74-894d-a6550e6cf755"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"densblocks", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"densoverlaps", "[", 
       RowBox[{
        RowBox[{"#", "-", "1"}], ",", 
        RowBox[{"dmaxlist", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"nmax", "+", "1"}], "]"}]}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.837000792006508*^9, 3.837000807833672*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"b96108da-cb19-4719-a3a9-6dabc97ced6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.514994`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.837000821836453*^9, 3.8370008451310062`*^9}, 
   3.837060813735045*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"b2f0f5dd-d656-4fbd-8396-87ff7e791de7"]
}, Open  ]],

Cell["Each block has polynomial coefficients of varying degree.", "Text",
 CellChangeTimes->{{3.836987446448145*^9, 
  3.83698748665854*^9}},ExpressionUUID->"98cfff5b-0352-4a8d-883d-\
8f65a5a56c44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"densblocks", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8370008947125797`*^9, 3.837000916015543*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"68e112b3-5805-4425-9bb0-f49cf7392842"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", "1.`", "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], 
       "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
         "1.`"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.837000897181861*^9, 3.8370009164443073`*^9}, 
   3.8370608173598423`*^9},
 CellLabel->
  "Out[180]//MatrixForm=",ExpressionUUID->"c815a886-e8fe-496a-9626-\
d922079f2006"]
}, Open  ]],

Cell[TextData[{
 "Maximum length of these coefficients is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["Max", "n"], "[", 
     RowBox[{"n", "+", 
      RowBox[{"2", 
       RowBox[{
        SubscriptBox["d", "max"], "(", "n", ")"}]}]}], "]"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "09bebf00-e89e-47e9-9338-bc3ca13877da"],
 ",  which equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", "max"], "+", 
     RowBox[{"2", 
      SubscriptBox["d", "max"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ef0d1d88-8523-4193-9f17-98f521a0773a"],
 ", when ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["d", "max"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6c9674d9-3e41-4e10-a643-5cff4e778381"],
 " is the same for all ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9484917c-8893-4313-b104-a033efec697b"],
 " -- see Eq. (S28)."
}], "Text",
 CellChangeTimes->{{3.836987446448145*^9, 3.83698748665854*^9}, {
  3.836987611235199*^9, 3.8369876177597103`*^9}, {3.836987649066654*^9, 
  3.836987678055213*^9}, {3.836987834785964*^9, 3.836987931392538*^9}, {
  3.836995743997939*^9, 3.8369957907402573`*^9}, {3.837000985193152*^9, 
  3.837001005100543*^9}},ExpressionUUID->"e9e129f7-9f4d-4716-a82a-\
eb1c0224eac6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"densmaxlen", "=", 
    RowBox[{"Max", "@", 
     RowBox[{"Map", "[", 
      RowBox[{"Length", ",", "densblocks", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Max", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"n", "+", 
       RowBox[{"2", "*", 
        RowBox[{"dmaxlist", "[", 
         RowBox[{"[", 
          RowBox[{"n", "+", "1"}], "]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nmax"}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"nmax", "+", 
    RowBox[{"2", "*", 
     RowBox[{"dmaxlist", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.837000948075687*^9, 3.8370009490035057`*^9}, {
  3.837001013716424*^9, 3.837001044791121*^9}, {3.837001141327561*^9, 
  3.837001143252714*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"633406c1-a448-41ee-b033-0700c703a754"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15", ",", "15", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{
  3.837000949925305*^9, {3.837001009004504*^9, 3.837001052804864*^9}, 
   3.837001143857222*^9, 3.837060822306126*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"fe431d3b-f7b4-48a5-af72-b6e67ef8cd09"]
}, Open  ]],

Cell["\<\
We pad each list to the same length to form a rectangular array.  One may \
wish to truncate beyond a maximum power.\
\>", "Text",
 CellChangeTimes->{{3.836988027311365*^9, 3.83698806542922*^9}, {
  3.836993420738888*^9, 3.836993421378119*^9}, {3.836993826617463*^9, 
  3.836993877327517*^9}, {3.836993975960311*^9, 3.836993988786098*^9}, {
  3.836995831893931*^9, 3.836995832094509*^9}, {3.837001098829126*^9, 
  3.837001099749587*^9}, {3.837060842591715*^9, 
  3.837060863857053*^9}},ExpressionUUID->"a14ca670-0779-4882-ba39-\
3ce94b5d7147"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxpower", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"adensmaxlen", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"densmaxlen", ",", 
    RowBox[{"maxpower", "+", "1"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"actual", " ", "padded", " ", "length"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.837060866550907*^9, 3.8370608984140863`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"d67c2706-5a07-4cd9-a9fb-0aafed8cd63d"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{{3.8370608839049664`*^9, 3.8370608991156693`*^9}},
 CellLabel->
  "Out[187]=",ExpressionUUID->"f00d409e-c160-4862-ad1e-118e0ec4450c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"densblockspadded", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PadRight", "[", 
        RowBox[{"#", ",", "adensmaxlen"}], "]"}], "&"}], ",", "densblocks", 
      ",", 
      RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.836988097024578*^9, 3.836988101606666*^9}, {
   3.8369881373302937`*^9, 3.8369881490228033`*^9}, 3.8369940256710787`*^9, {
   3.836994189599566*^9, 3.836994192567541*^9}, {3.837001128349815*^9, 
   3.837001149245431*^9}, 3.8370609096829433`*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"78b238f3-fa13-4c4d-91bd-c0321845fa22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.329825`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.837001154229293*^9, 3.8370011678644123`*^9}, {
  3.83706091159475*^9, 3.837060914626032*^9}},
 CellLabel->
  "Out[189]=",ExpressionUUID->"aca987f4-856c-4951-a0b8-db117df5b2f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "densblockspadded"}]], "Input",
 CellChangeTimes->{{3.8370011957743673`*^9, 3.8370011989530287`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"423a8603-847f-4827-b261-44d6768c76cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "20", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "35", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "56", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "84", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "120", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "165", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"220", ",", "220", ",", "11"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.837001199523435*^9, 3.837060917173915*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"b22d0c49-39c5-4a14-b9fa-0a3730e4daf8"]
}, Open  ]],

Cell["We combine the blocks for each power.", "Text",
 CellChangeTimes->{{3.837001262318697*^9, 
  3.8370012765847797`*^9}},ExpressionUUID->"dc41e7b7-d4e2-4e4b-ad1f-\
b3fc9bdbe248"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"denscoefmonomial", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"blockmatrix", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TensorTranspose", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}], "&"}], "/@", 
       "densblockspadded"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8369934276770763`*^9, 3.836993430230291*^9}, {
  3.8369935065922213`*^9, 3.836993538016943*^9}, {3.8370012994867687`*^9, 
  3.837001308260673*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"f4bfa052-622e-4593-9077-9ee2a932b459"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.062097`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["580248", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11", ",", "715", ",", "715"}], "}"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["580248", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11", ",", "715", ",", "715"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.10318317410497957`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6", ",", "6"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6", ",", "8"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6", ",", "10"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.6666666666666666`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[SparseArray, 23210832, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "Choose", SparseArray, 23210832, 
              6387694862425499023378066456020914177037489999667970353304, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<580248>, {11, 715, 715}]"& )],
    False,
    BoxID -> 6387694862425499023378066456020914177037489999667970353304,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.836993541834292*^9, {3.836993729999597*^9, 3.8369937363573227`*^9}, {
   3.8369940342622843`*^9, 3.836994042567481*^9}, {3.836994203411955*^9, 
   3.836994228454693*^9}, {3.8370013286880217`*^9, 3.83700135173599*^9}, {
   3.837060932262294*^9, 3.837060966916205*^9}},
 CellLabel->
  "Out[195]=",ExpressionUUID->"3176c29d-4399-487d-b31e-7b0b721a5c31"]
}, Open  ]],

Cell[TextData[{
 " Finally, we transform to the actual basis with proper rescaling -- which \
is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "\[Delta]x"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "434abacf-01ab-4960-a114-f1824a80371e"],
 " [Eq. (S24)]."
}], "Text",
 CellChangeTimes->{{3.8369859741381607`*^9, 3.836985977044573*^9}, {
  3.8369861592167187`*^9, 3.836986161490638*^9}, {3.836986416788144*^9, 
  3.836986423958056*^9}, {3.836993623250725*^9, 3.8369936594850082`*^9}, {
  3.8370014622369204`*^9, 
  3.837001471668405*^9}},ExpressionUUID->"5fbe941a-baeb-42db-a622-\
188240bbc8a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"denscoef", "=", 
   RowBox[{"TensorTranspose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"txmat", "/", "\[Delta]x"}], ")"}], ".", 
      RowBox[{"Transpose", "[", "denscoefmonomial", "]"}], ".", 
      RowBox[{"Transpose", "[", "txmat", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.837001483998983*^9, 3.837001507295031*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"5b3cc170-e2de-4236-af5b-4e1ce7b41c26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.176477`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["56932", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172", ",", "11"}], "}"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["56932", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172", ",", "11"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.17494714587737845`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "20.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "34.64101615137754`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "44.721359549998176`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "52.915026221282275`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[SparseArray, 1368744, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "Choose", SparseArray, 1368744, 
              6387694862425499023378066456020914177074383487815389457400, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<56932>, {172, 172, 11}]"& )],
    False,
    BoxID -> 6387694862425499023378066456020914177074383487815389457400,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.837001516272278*^9, 3.837001538732277*^9}, {
  3.837060978871361*^9, 3.83706098620784*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"cf23b5c9-e53d-4202-9a3c-a425d30e8afe"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Potential energy", "Section",
 CellChangeTimes->{{3.83700164681558*^9, 
  3.8370016492172956`*^9}},ExpressionUUID->"57a4a10a-3b22-40d9-9981-\
391615b2d511"],

Cell[TextData[{
 "For the potential ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"V", "(", "x", ")"}], "=", 
     RowBox[{
      SubscriptBox["V", "0"], 
      RowBox[{
       SuperscriptBox["cos", "2"], "(", 
       RowBox[{
        SubscriptBox["N", "w"], "\[Pi]", " ", "x"}], ")"}]}]}], ","}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8ce1e146-4ae2-4b45-9f34-b9f6da8fbcbe"],
 " the matrix elements in segment  ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1f442f02-0fc6-4d72-81b3-e86d7635cde3"],
 "  is given by  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "0"], 
    RowBox[{
     SubscriptBox["\[Sum]", "p"], 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"p", "-", "1"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "1"], 
       RowBox[{"dx", " ", 
        SuperscriptBox["x", 
         RowBox[{"p", "-", "1"}]], 
        RowBox[{
         SuperscriptBox["cos", "2"], "[", 
         RowBox[{
          SubscriptBox["N", "w"], "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["X", 
             RowBox[{"j", "-", "1"}]], "+", 
            RowBox[{
             SubscriptBox["\[Delta]x", "j"], "x"}]}], ")"}]}], 
         "]"}]}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "16548bc2-0604-4d5a-8463-aa45073bfd77"],
 ",  where ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["c", "p"], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "947d8314-946f-4116-9ef1-97bde2cb1149"],
 "are the polynomial coefficients of the density -- see Eq. (S29) in the \
supplement.  \nWe already have a function PE = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sum]", "p"], 
    RowBox[{"2", 
     SubscriptBox["c", 
      RowBox[{"p", "-", "1"}]], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{"dx", " ", 
       SuperscriptBox["x", 
        RowBox[{"p", "-", "1"}]], 
       RowBox[{
        SuperscriptBox["cos", "2"], "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "x"}], "+", "b"}], ")"}], "/", "2"}], 
        "]"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "30fcde98-a6f7-4ddc-814a-fd678e92c390"],
 "  (see above).  Thus, what remains is to set {a,b} for the different \
segments. Let\[CloseCurlyQuote]s take ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["N", "w"], "=", "10"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["V", "0"], "/", 
      SubscriptBox["E", "r"]}], "=", "1."}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1e3b1c3f-98d8-4892-8681-a86c6f0e5849"]
}], "Text",
 CellChangeTimes->{{3.8370023639241743`*^9, 3.837002429610342*^9}, {
  3.83700247989441*^9, 3.8370025015850773`*^9}, {3.837002562723588*^9, 
  3.837002580415187*^9}, {3.837002616490882*^9, 3.837002648782888*^9}, {
  3.83700271252918*^9, 3.837002825496105*^9}, {3.8370028751035357`*^9, 
  3.8370029332961473`*^9}, {3.8370029650042667`*^9, 3.8370030663149776`*^9}, {
  3.837003106700959*^9, 3.837003129289009*^9}, {3.8370034699608717`*^9, 
  3.837003479080139*^9}, {3.8370050096078*^9, 3.837005016896302*^9}, {
  3.837005216434433*^9, 
  3.8370052410816107`*^9}},ExpressionUUID->"24239112-1d36-43a1-a5c5-\
ee35f2e7f5bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numsegments", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numwells", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0byEr", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.837003317833436*^9, 3.837003366443685*^9}, {
  3.837003409149633*^9, 3.8370034303002167`*^9}, {3.8370034615476513`*^9, 
  3.837003489796226*^9}, {3.8370036837598457`*^9, 3.8370037023247757`*^9}, {
  3.8370049675098257`*^9, 3.837005001216957*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"fa65a934-328d-472a-b05e-290526b97f87"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"boundaries", "=", 
    RowBox[{"N", "@", 
     RowBox[{"Subdivide", "[", "numsegments", "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   SubscriptBox["X", "j"], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"widths", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"\[Delta]x", ",", "numsegments"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arglist", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "*", "numwells", "*", "\[Pi]"}], ")"}], "*", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"widths", ",", 
        RowBox[{"Most", "[", "boundaries", "]"}]}], "}"}], "]"}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], " ", "for", " ", "all", " ", 
    "segments"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Er", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"numwells", "*", "\[Pi]"}], ")"}], "^", "2"}], "/", "2."}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"recoil", " ", "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", 
   RowBox[{"V0byEr", "*", "Er"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8370050250372677`*^9, 3.837005090779285*^9}, {
  3.837005275163356*^9, 3.837005310689515*^9}, {3.837005429984503*^9, 
  3.83700543697507*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"22744cc3-3190-4b16-ae98-2903d46b7a95"],

Cell["\<\
 We directly take the density coefficients in the actual basis, which were \
rescaled by \[Delta]x (see above), thus we scale it back.\
\>", "Text",
 CellChangeTimes->{{3.8369859741381607`*^9, 3.836985977044573*^9}, {
  3.8369861592167187`*^9, 3.836986161490638*^9}, {3.836986416788144*^9, 
  3.836986423958056*^9}, {3.836993623250725*^9, 3.8369936594850082`*^9}, {
  3.8370014622369204`*^9, 3.837001471668405*^9}, {3.837005149863044*^9, 
  3.837005211703723*^9}, {3.83700532098796*^9, 3.837005332491045*^9}, {
  3.837005447085125*^9, 3.837005451859808*^9}, {3.837005527324226*^9, 
  3.837005527387142*^9}},ExpressionUUID->"78491f72-81ea-464a-bc71-\
030db38997d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pots", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"V0", "*", 
         RowBox[{"\[Delta]x", "/", "2"}]}], ")"}], "*", 
       RowBox[{"SparseArray", "@", 
        RowBox[{"symPE", "[", 
         RowBox[{
          RowBox[{"Normal", "@", "denscoef"}], ",", "#"}], "]"}]}]}], "&"}], "/@",
      "arglist"}]}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.837004152465151*^9, 3.8370041613219233`*^9}, {
  3.837004290009223*^9, 3.837004359408544*^9}, {3.8370044181169977`*^9, 
  3.837004444642627*^9}, {3.837005538629086*^9, 3.837005547754245*^9}, {
  3.8370055858862886`*^9, 3.837005586838212*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"6a7d5c26-9711-4b24-8a60-0b3065cceb99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.210546`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8370044466342373`*^9, 3.8370044565127773`*^9}, {
   3.837004539407666*^9, 3.8370045635191183`*^9}, 3.8370055551581697`*^9, 
   3.837005600442567*^9, 3.8370658690947742`*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"9153c0aa-1e91-4889-8bbd-a2d95dafc4f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pots", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.837005717791024*^9, 3.837005719290677*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"70c7e9ed-9c28-4f43-a507-de7886f95959"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJztmGk01G0DxkWbtCkkjwrtslZExYVC0vKU0r4qyRopivJIIlqESnoklBaK
0CZUylbM/MeeJWObfUYlylP0es95v95fnrdTU2c+zDlzfp/mvuZ3rnPdt/pO
j9W7ZaSkpCb87/Pf7/N9nmyN1aDh7zmJWfM+V4KTqN666jYPEi7hP5J7rg0Z
NnxBE6zmueuz73MwdbyiwlW/DtTt0XKsd2xEiEPUxRVGHNA+zW3a7tEhdr9f
wn8PrnQo8/7GJAb+tiw6pnq9FffjXr6YGiBC1Zka0Wnncuw4UFbabNmOnS0u
3tTUDjwO17N8nMVBrfWNu/4XhChZ79a3rauD6LO4nVfCfw++pshRzSmyAnaa
2so5E9JgeK7Z2WRRK/xOG6hmnmBgvu6TmTNti/A8qG2uKJ6FugJXbcOKclg3
2Yzs2tEOl7pxNqdnSPyU8B/Lw31jK5561IFJ0/NIcWXjyTqH08GbOog+3zcc
r7n9DgMb9b0SyotbYRWpEKV4RiR255LwH8On/1U32qedgWObLS0yI9rgxKKC
0ppFONjqEeDmyMAU+TiVb69bEDLPYZL9FBFc+zInV/IYkJO/G/na7iXml2U5
bvvSjkpGrI7y+grcOM+3WCuTiSKFssYxSa0IWbRXJTS3HOv7Au5mzsoBy/aT
/biENrHLQcJ/Ld4dEizLMWPA370x9+DmEoR1re5NGMPGM4di1+klDLD0Pndp
2xXArbpC5+FsFrQ2fknZcYCBGfK0kgBaEQr22mzflcPC3Qm70t96Uwhyh4bD
27e4NkXTwTZHgNxTzrc09lQgvtFVe/akDKjElr/YGNYqdjlI+K/F+dcT8qxi
GNiUJeeceKQVryj7/ER3EUpEKSGarxiQNdph7aLbhlHv3FS+PRLh7Lusk1dV
KzHdepqLXXY7ZGztZ8/S7yD6TOpncctBwn8tvltmsrSmLQOXBx/eXOPcAlW/
cv3ML0LsoqflT+rt79uvCtHS7W048Xn/wM6BHXBKlf+qW8lA8eThjup2bbja
lssVFYmI/ayYUNXptY+B1q/Wxvc7WqCslSmynCPZpRL+//HI4ZfTXAMYcByx
njdmaitOS0WqxtiIiD6T+pm0NwpNzIL9OxgwW/Ju+96sNvTUqdnFv5N4+6N4
zo4hMelmNJx8ef6k1tNKfF2l8zTmHA8jg66PWDCdDhe1pqH/xNSC9S3d97Qr
H+VDjqwu3UpD9HC6SOlEJQaXWCvW+/KQ/a1pVmk8HTnGHzbEW9VBXflVxp5C
PqbXVL+ozaRDeVbhRfkzdXCzcH+xvoqPdSbqr2aCgtRrW5e4bY1YMyX+hqmr
AMVrxruvVKMw1kKj6dxHCl6ybTeFAg6kD0WV/lNPh2eaTqzihHrsenbW37yT
j2O9qovb8imMWNayaX4wE1rFplIX9IRil7OEf19ePH9MYPpSGjiVI1fKh1Th
5NyOXP1iHlznU/bh+nRo5yqFB3eXQ9Flwec7r7nIkEnec8SBjrCJoZEPPN6A
vsO768AlPq5uKzFdJE+hqjb9jwRtBjS9TSJuDuLig5JWp6E0hYE49yK9/x5/
0EIl2WEiF68C1E/NtaFwMM/RW/dGI7LVPbca+glQpsaZsl+Jgs8m2gIvkwas
VRyVdVZXgNEHQp+VCCj4x/hNDlFpBrVY0X6oh5Dos7jlLOHfl6u6abC6Y2nQ
vFI0ZaBCJdZkvrd3tuaBNv3WMdFdGoavzlWyEVRjaF/iBtYYPpo75fi6Y+nY
kRDee2pVLdSKlh2N28KHknYqt2YzhfAlRgZDR1HYVnS5xvMkB477LimNGMsA
s7LE2fjRK6wxW3Ogbwsbm2d3/4FLFOpWd5zosaOhjZ2RrTWNA5OyUS/S5RgI
8xzlmBzajBT3b/fGxQmJPpP6WdxylvDvy5eZsNQnf6PB5fj+0SrDamGweIBN
6go+BjyK9vRYScdQOeUDmPEGpX+wmoLC+Gjc6dwbYkohuLZ2bU8ghahZ3R8s
nnBglTGtPd+NjiO8dVM3Hi9H9rzws7NjuVjkGjskoN8n3utM1of413ijmXvX
IIKNP3tcw2XVGIiIy5syg9EMXer8TpcnQqLPpH4m7Q1xy1nCvy+PuNXgrcin
YeQJi09J+TWgepr2ZoMP9ZqMJG4RHQ47mUpRVXXou1UycHkbHyzRucSL4XRs
W51QcKXvDXwfPWhc/7B/97ppHLVn0bFQUaSVF8+AaMGn/AnzuLA1sNFv6abA
0rXg/WXaDNtZzz0VjgqJPpP6mbQ3SPtZ3HKW8O/LbVoXXmz2pyGtbW/UiOWV
SJVdkq2xnYcYvSWnFhbTkeTdt5uqZUD3wc2uNyu5CF1gcWWSAQXVpToRo5Qb
kc85R1lvEcDT3K/DWJOBnoz7i326muHq1a13+ZWQ6DOpn0l7g7SfSfdBcctZ
wr8vr/Z76J/avwe0z7y4tTu335/o+XX8DC6OGTyO7smnIfC4Bvv+nBo81s+y
rlbnY1XMUaPZhgzIZMf0TVRrgXDQ4GNeDUKiz6R+Ju0N0n4m3QdJ7xvilrOE
f1/ueXu8oXI7hcFWJtnPFEqREMc9GXyLjQkc6vrERxSO9+31rtnKxPXn7gUh
akKiz6R+Ju0N0n4m3QdJ7xuk9zpxy/lX55Ry4oCc/n54+s3oVgCtCh/bN/Sp
1/DQMiveamYNDSYNZREtCRVQYubpdiryYK70jy+zv6/GByvImtuW46zG7e37
A7ngxmXcMuuiwZCtpV/lVAFj9vhxxr1cXEmZoByjSWHCn9dXDCxrgKNqj8aF
5QLYJvC+St2m48zyqo0aY8pR5/Ss6J4TF6sOPQ8sVGSAb1507kJqM8q7NUom
pQqJPpP6mbQ3SPuZdB8kvW+Q3utI78/i9r//6pwbxtYp8qKhMjOqTqBYjdaR
GVJjWDwUac0JHdTvbfThsrqpfjUY/zi/sVCPj/YmtSyld3S0TEvek7erHgPC
rbpNpAXQ22pE47tQeLk0wv9hCh23/ddY3t7Hge3mlDFzwyjc1jVZOqqQBtn0
6rx2Uw7aBunlnIihsGzO3AtBDU0oMFHJ3fee7LO45SbhP5c3Rhj4N/X3ycLB
yTq0a9X4aKR0qFOGj4C+EbP36FKwHVfzyP4JhRvrrR5PquQg1MG4N245hRWi
0S0vl1A4pO3O80nkYF/nyX1S1RQ+fJYaOy+kFGvrNP3t8tkY3cmVfdFCYfOQ
iNDSbiaCGAHJStuFRJ9J/SxuuUn4z+Ws9MTQ64Y0eK37+uYaqiA1/1OL+WMe
xkb5zzktw8DwxOTNBdqvkSofFeTjw0bygx1eBQ/7e/LOxEuHXcsw+MB9femP
bGR4D7t8qoxCrAuEc1OYaGAbXPQ1ExJ9JvUzaW+IW24S/nP5igtzDq1cQMe8
mRc1Q5m18NU9tvW4Hx+th5xYx9UoaFWoTDUMbsBWA9U350wF0Nk/ZXJCDYWZ
F6YXqtGZGGm7t+noSiHRZ1I/k/YGaT+LW24S/nP5tPEr1W2kKagY+8nn3KlH
czrzUaC8ACZ2xX49UgyslNsXc3BnM1otqqsnnhYSfSb1M2lvkPYz6T4obrlJ
+L/jSTrJigqPaTD7klnIr6uA5aqjh1N0eLijb/k5zKf/XrP/oJXWwzfIcHN6
uucmH9fkhp1vL6Qw8u2Z8pc9pTg57MZf0+rZSJOzSJJLotAQ6auQN5aJquU+
xyYOEBJ9JvUzaW+Q9jPpPkh63xC3/CX83/F8vfclTmPpWL5lgOJN3Qqcv2tg
4tnGxRLpNNmbWyhcvjPa9r3RWwge1DfeuySAaeL0wzNPUVArH3B01/EmNLQp
CKSbBESfxe28Ev578OtrZQI33KRQ7XDHxqO5DBpcpu/GERxITZLuOB5Iweyg
+d4woyb4LD3TO5UuIPpM6mdxO6+Eiye/WSLbUn6Chhnsj5xNW6pRKlvmKN3F
A+3lkHFfDlOIVr4dGGhMh38Qy5K3jgP4pTE33KGQyaqI9DFiIursCtrh0UKi
z6R+Ju0NcctHwsWT332/Lv/P4RQ+5g2izeuqR3hYfYG3mgAFTZxeT2cKprv0
xo6LfovhXOre81QB0WdxO5eE/978BFPTfJEdhZfvzJIaRY34xDf4PCdMQPSZ
1M/idi4J/735fwDqqULo
              "], {{0, 0}, {29, 29}}, {0, 1}], 
             AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5395", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJztmGk01G0DxkWbtCkkjwrtslZExYVC0vKU0r4qyRopivJIIlqESnoklBaK
0CZUylbM/MeeJWObfUYlylP0es95v95fnrdTU2c+zDlzfp/mvuZ3rnPdt/pO
j9W7ZaSkpCb87/Pf7/N9nmyN1aDh7zmJWfM+V4KTqN666jYPEi7hP5J7rg0Z
NnxBE6zmueuz73MwdbyiwlW/DtTt0XKsd2xEiEPUxRVGHNA+zW3a7tEhdr9f
wn8PrnQo8/7GJAb+tiw6pnq9FffjXr6YGiBC1Zka0Wnncuw4UFbabNmOnS0u
3tTUDjwO17N8nMVBrfWNu/4XhChZ79a3rauD6LO4nVfCfw++pshRzSmyAnaa
2so5E9JgeK7Z2WRRK/xOG6hmnmBgvu6TmTNti/A8qG2uKJ6FugJXbcOKclg3
2Yzs2tEOl7pxNqdnSPyU8B/Lw31jK5561IFJ0/NIcWXjyTqH08GbOog+3zcc
r7n9DgMb9b0SyotbYRWpEKV4RiR255LwH8On/1U32qedgWObLS0yI9rgxKKC
0ppFONjqEeDmyMAU+TiVb69bEDLPYZL9FBFc+zInV/IYkJO/G/na7iXml2U5
bvvSjkpGrI7y+grcOM+3WCuTiSKFssYxSa0IWbRXJTS3HOv7Au5mzsoBy/aT
/biENrHLQcJ/Ld4dEizLMWPA370x9+DmEoR1re5NGMPGM4di1+klDLD0Pndp
2xXArbpC5+FsFrQ2fknZcYCBGfK0kgBaEQr22mzflcPC3Qm70t96Uwhyh4bD
27e4NkXTwTZHgNxTzrc09lQgvtFVe/akDKjElr/YGNYqdjlI+K/F+dcT8qxi
GNiUJeeceKQVryj7/ER3EUpEKSGarxiQNdph7aLbhlHv3FS+PRLh7Lusk1dV
KzHdepqLXXY7ZGztZ8/S7yD6TOpncctBwn8tvltmsrSmLQOXBx/eXOPcAlW/
cv3ML0LsoqflT+rt79uvCtHS7W048Xn/wM6BHXBKlf+qW8lA8eThjup2bbja
lssVFYmI/ayYUNXptY+B1q/Wxvc7WqCslSmynCPZpRL+//HI4ZfTXAMYcByx
njdmaitOS0WqxtiIiD6T+pm0NwpNzIL9OxgwW/Ju+96sNvTUqdnFv5N4+6N4
zo4hMelmNJx8ef6k1tNKfF2l8zTmHA8jg66PWDCdDhe1pqH/xNSC9S3d97Qr
H+VDjqwu3UpD9HC6SOlEJQaXWCvW+/KQ/a1pVmk8HTnGHzbEW9VBXflVxp5C
PqbXVL+ozaRDeVbhRfkzdXCzcH+xvoqPdSbqr2aCgtRrW5e4bY1YMyX+hqmr
AMVrxruvVKMw1kKj6dxHCl6ybTeFAg6kD0WV/lNPh2eaTqzihHrsenbW37yT
j2O9qovb8imMWNayaX4wE1rFplIX9IRil7OEf19ePH9MYPpSGjiVI1fKh1Th
5NyOXP1iHlznU/bh+nRo5yqFB3eXQ9Flwec7r7nIkEnec8SBjrCJoZEPPN6A
vsO768AlPq5uKzFdJE+hqjb9jwRtBjS9TSJuDuLig5JWp6E0hYE49yK9/x5/
0EIl2WEiF68C1E/NtaFwMM/RW/dGI7LVPbca+glQpsaZsl+Jgs8m2gIvkwas
VRyVdVZXgNEHQp+VCCj4x/hNDlFpBrVY0X6oh5Dos7jlLOHfl6u6abC6Y2nQ
vFI0ZaBCJdZkvrd3tuaBNv3WMdFdGoavzlWyEVRjaF/iBtYYPpo75fi6Y+nY
kRDee2pVLdSKlh2N28KHknYqt2YzhfAlRgZDR1HYVnS5xvMkB477LimNGMsA
s7LE2fjRK6wxW3Ogbwsbm2d3/4FLFOpWd5zosaOhjZ2RrTWNA5OyUS/S5RgI
8xzlmBzajBT3b/fGxQmJPpP6WdxylvDvy5eZsNQnf6PB5fj+0SrDamGweIBN
6go+BjyK9vRYScdQOeUDmPEGpX+wmoLC+Gjc6dwbYkohuLZ2bU8ghahZ3R8s
nnBglTGtPd+NjiO8dVM3Hi9H9rzws7NjuVjkGjskoN8n3utM1of413ijmXvX
IIKNP3tcw2XVGIiIy5syg9EMXer8TpcnQqLPpH4m7Q1xy1nCvy+PuNXgrcin
YeQJi09J+TWgepr2ZoMP9ZqMJG4RHQ47mUpRVXXou1UycHkbHyzRucSL4XRs
W51QcKXvDXwfPWhc/7B/97ppHLVn0bFQUaSVF8+AaMGn/AnzuLA1sNFv6abA
0rXg/WXaDNtZzz0VjgqJPpP6mbQ3SPtZ3HKW8O/LbVoXXmz2pyGtbW/UiOWV
SJVdkq2xnYcYvSWnFhbTkeTdt5uqZUD3wc2uNyu5CF1gcWWSAQXVpToRo5Qb
kc85R1lvEcDT3K/DWJOBnoz7i326muHq1a13+ZWQ6DOpn0l7g7SfSfdBcctZ
wr8vr/Z76J/avwe0z7y4tTu335/o+XX8DC6OGTyO7smnIfC4Bvv+nBo81s+y
rlbnY1XMUaPZhgzIZMf0TVRrgXDQ4GNeDUKiz6R+Ju0N0n4m3QdJ7xvilrOE
f1/ueXu8oXI7hcFWJtnPFEqREMc9GXyLjQkc6vrERxSO9+31rtnKxPXn7gUh
akKiz6R+Ju0N0n4m3QdJ7xuk9zpxy/lX55Ry4oCc/n54+s3oVgCtCh/bN/Sp
1/DQMiveamYNDSYNZREtCRVQYubpdiryYK70jy+zv6/GByvImtuW46zG7e37
A7ngxmXcMuuiwZCtpV/lVAFj9vhxxr1cXEmZoByjSWHCn9dXDCxrgKNqj8aF
5QLYJvC+St2m48zyqo0aY8pR5/Ss6J4TF6sOPQ8sVGSAb1507kJqM8q7NUom
pQqJPpP6mbQ3SPuZdB8kvW+Q3utI78/i9r//6pwbxtYp8qKhMjOqTqBYjdaR
GVJjWDwUac0JHdTvbfThsrqpfjUY/zi/sVCPj/YmtSyld3S0TEvek7erHgPC
rbpNpAXQ22pE47tQeLk0wv9hCh23/ddY3t7Hge3mlDFzwyjc1jVZOqqQBtn0
6rx2Uw7aBunlnIihsGzO3AtBDU0oMFHJ3fee7LO45SbhP5c3Rhj4N/X3ycLB
yTq0a9X4aKR0qFOGj4C+EbP36FKwHVfzyP4JhRvrrR5PquQg1MG4N245hRWi
0S0vl1A4pO3O80nkYF/nyX1S1RQ+fJYaOy+kFGvrNP3t8tkY3cmVfdFCYfOQ
iNDSbiaCGAHJStuFRJ9J/SxuuUn4z+Ws9MTQ64Y0eK37+uYaqiA1/1OL+WMe
xkb5zzktw8DwxOTNBdqvkSofFeTjw0bygx1eBQ/7e/LOxEuHXcsw+MB9femP
bGR4D7t8qoxCrAuEc1OYaGAbXPQ1ExJ9JvUzaW+IW24S/nP5igtzDq1cQMe8
mRc1Q5m18NU9tvW4Hx+th5xYx9UoaFWoTDUMbsBWA9U350wF0Nk/ZXJCDYWZ
F6YXqtGZGGm7t+noSiHRZ1I/k/YGaT+LW24S/nP5tPEr1W2kKagY+8nn3KlH
czrzUaC8ACZ2xX49UgyslNsXc3BnM1otqqsnnhYSfSb1M2lvkPYz6T4obrlJ
+L/jSTrJigqPaTD7klnIr6uA5aqjh1N0eLijb/k5zKf/XrP/oJXWwzfIcHN6
uucmH9fkhp1vL6Qw8u2Z8pc9pTg57MZf0+rZSJOzSJJLotAQ6auQN5aJquU+
xyYOEBJ9JvUzaW+Q9jPpPkh63xC3/CX83/F8vfclTmPpWL5lgOJN3Qqcv2tg
4tnGxRLpNNmbWyhcvjPa9r3RWwge1DfeuySAaeL0wzNPUVArH3B01/EmNLQp
CKSbBESfxe28Ev578OtrZQI33KRQ7XDHxqO5DBpcpu/GERxITZLuOB5Iweyg
+d4woyb4LD3TO5UuIPpM6mdxO6+Eiye/WSLbUn6Chhnsj5xNW6pRKlvmKN3F
A+3lkHFfDlOIVr4dGGhMh38Qy5K3jgP4pTE33KGQyaqI9DFiIursCtrh0UKi
z6R+Ju0NcctHwsWT332/Lv/P4RQ+5g2izeuqR3hYfYG3mgAFTZxeT2cKprv0
xo6LfovhXOre81QB0WdxO5eE/978BFPTfJEdhZfvzJIaRY34xDf4PCdMQPSZ
1M/idi4J/735fwDqqULo
              "], {{0, 0}, {29, 29}}, {0, 1}], 
             AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5395", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.18236208761492698`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "246.74011002723392`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "173.2050807568876`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2.89650050028125`*^-13"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "20.973140123229342`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxF0ktIFFAUBuBjqZOa2ThKJFEEhUkkhAkGQWS4KRepUKvQfGwMG4QgCUoi
wgLDCqKNQ0GbHoiCuUmEhKBEpFUyoRtpIdEDISiGWdTXqgvf9h7+/5y93en2
SwURMRH/XyFb2Mp2athHPU0008pZuujnMrcZZ4q3ZPn270MDqjjAMc7QyxCj
POEV71llg8JNEbWcYoB7TLNMjl2bI47TzS2escgPkgIc4RxXyfCGzxQXRdTR
SpoHzJAlz+7iiBP0MsILlvjD4UREDw95R46DijrPGPP8ZH+J2dxhlu/sKY1o
4yYzrLOzLOI015hkjZTSW7jCc1YoL5eVQZ7ykcS2iKNcJMMHCioiGujjEQvk
OWSJndxnkiW+UpLUMS30cIPHzLFCjh2VEY10MMgYEyzyhURKXk5ygWEyzPKJ
31RXuR8aaKaNLtJc5y7jvOQ1C2RZ5xd5ojqiiFIqSJLiL95IWiU=
     "], CompressedData["

1:eJxTTMoPSmJiYGAQFmVgYATSTMwsrMiYjZ2Dk4ubh5ePn3YsAUEhYRFRMXEJ
SSlpGVk5eQVFJeVRsYETU1FVU9fQ1NLW0dXTNzA0MjYxNTO3sLSytrG1s3dw
dHJ2cXUbVTKqZFTJqJLBrcTdw9PL28fXzz8gMCg4JDQsPCIyKjomNi4+ITEp
OSU1LT0jMys7Jzcvv6CwqLiktKy8YlTHqI5RHaM6RnWM6hjVMapjVMdA66is
qq6pratvaGxqbmlta+/o7Oru6e3rnzBx0uQpU6eNyo7KjsrSWnb6jJmzZs+Z
O2/+goWLFi9ZOvy4y5avWLkKG7F6zeo1AFheSvI=
     "]}, CompressedData["
1:eJxUfHc81t8bt72F7E0ZGdmjcJ/72CNkVGQUMsoeoaKskm9JA22S0tZeyn3u
09AikkolpSiRMhJZeb7PV9fveT3/9vL6dFznut7rOqUeluATwcnBwSEpzcGh
67Fw4nxrPP44sZl314kI2trLIfMhdAlL4LLwddUxs//9ucbfn1OVTeD8KRZK
fyiel953excLfh7+fO3imZ8LaQmwzcoPpfAd+Hn483t2f7/333c34aF4MRO7
yjVYIBaLKEQnM6rvrW/xuZrO+DwYX7XjoyAe+HhTzunzQlz/M1xlcXoPa19o
ZQhP2iFG5JN9P+Z9mWIG+8feempYwYLvZP79Luv6/ap/OuKpuCse2Xs8lEo0
vHKtLahjRd1ZtSNR8g1DyERfJesfTRyGlt3q+MlFY0P8Tklk7Gcdm3uZ73a5
4P/OA9/h8pz5btwjuSCdoAcMZZf+glLVSKqWx5qQVxOmvId+Tl1RJYyR0btO
jU/WMhYLemqdf6OObQ+uMX4568z/fi84D3yn2nvmu1FN0zeMjkZQ6+XW082P
Q/Ec27D3Z5IliIWo/tph8XbGtbR6F8YabUo8e3b2eRWzoD7we8F54Dsf3Wa+
m+129HWUrxB6ZDfwenTKH9+NTebq04yif9SPcHY0P2BNKVq2q6iK/6/OUB/4
veA88J3k4zPf3eaV5x3WugTLi3dZG9ovx0eLfRZ3HhEmsxpTfe4wlCncF9QZ
6gO/F5wHvvNxbMF/3y0pmu4cvixAHkbs5recHUqrzu8u6BatYsC9w31BnaE+
8HvBeeA76QEz5zUOG0niaY/C2ybeY52eNyzoH7h3uC+oM9QHfi84D3xnhc/M
d/s85tQfCY3E0IfQP3DvcF9QZ6gP/F5wHvhOr9rMd9vHom3uqW/FC+JjFzVf
jsWDVYfVOD5GsDIfTG8Q75Gj668mivYklTGWfyqSMD+qihXmHTn5Ifwe49X+
MueXIdb0aVW3voz3KCu3u0utxYKTLvHxvHIq4g5rQbax9THuSwztuYxzAXKv
mBr9e79IG4hg1dO8JuKJPcximrDjG9dDVr1eoaTK+eOsM/MXh3z+1cX+Ocnk
yzl3nnXDlTQcze5gwrle/D2nU8Ch0hDNJOzwbWRV1soK1tbrJ1kqeqE0xPX+
V7LrPUOywbR0W6UO/XQp8LG72EdGxQrV0mQfA/qPpXUC/8dmlu/X5LvSkaqY
+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
B7vuzALNXTummcwSnYxPOiWMpRMHH+W6X2QUcK3Q9Qs7wvI4cTqvhNnEfrT0
jLSp3AdmzcF5yjH2dYwwRUHHTck3GJyhL/FQqDRuDtDyi+W/wpIXolqNLhz0
xdkJNevctwx7efnWk3c/Mr6Z724/mVzHFA9cnsi/eIg5ebbTofxMLzOsYH+m
XX0Hawf3B4F1pW3sHJVyydKEBwxh3iO7FNPb2IvqPs8JRy2s7S+SQtlHvjEb
q/zMLrz7ybrgm9vntIyyoB5Zf+tzzCd6KuVZMnXbXiEawWOA3qRQ+y0xYfTI
L7n+lfs1sKZkxh3ON18Zw7JSD6/xSdF0oyLG23tfWV8e7X9fxzbCJiVxexx3
2ZF5NxTNbT0GGBfGd4iudJHBpQ8FV/W90MSV/tNOvz5+Yaq2HeNWF+pmHNAO
U7vf38FYe/t0ccNtcbzW9r7AZTkdOvHu8/qo9j6G7cFnUT+uC9KzFqVH2/0G
WJ4OBRuH1/1hjjTaGT6KlKcPYxQn90dII5PiFgnZ0i7GkGFhNl8nB3o6YPz6
uMIsbPD4RYXGsXesJZy7CsR3drJrTI8+tPauZ/Xe1GqyZHSy6+2ET8mLdbBq
dYN4t2lMs3XLnW9kuJQwoT+gHoJpM/Xh9EG3tzxKxj0Gx2drq1ojyW/7Wl9t
FEf3szacNp6OwuE1A7dF8r+xXBK1BbT+nX+J5w/mvlq2DFUs9RuIGXbEX69P
vFo02xj7aD6U8s4fYlzfNX/p12W8ZKIy8/Wmdd8Yd6Ry3j6+rYQ3Z8Yk6/W6
0OCYhK7OvbOI8Mi96CUXRhkfzx5NjfpjTD2OnXxuonCDobx2R//b5n/x8iIH
KUmcYIls2miqsV2WTCf5PKyaNZca6Xx8/6NZjSZ55hupPuWhVR1Lrq4en2S8
uZghfS7yG1u8P6W9TPYrS/fdxOWOGmG8ZzhOjXvnEIPzMFfSfvkR5uhk0Eub
RGlytsRR4IPbz//NC/QH1CM2f8F/9al6mrHnbb8dns+a/yp+RSrmGe9+lnDF
gDybY3pofkYCfv98a/k/xjao3tf++OYNLrTc7YC56stAZLOX/eT49gHW/uXc
cfqf5DCecyZxW48PvXFxWihfx5WOMoKZOnrc6Kd7m1PEO1n0oyGzLuifAWaW
ZH2j+AV9ura9R4Qe+8kQ+n2vePUmCyr6JsNf5KQgeeLayf1jkQENXHLue5Ga
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
+BfQ66BPQY+B/gC+BX4BPAX8gHmB/oB65LrM1OeC+Nt/Psio0SyBkqBylyDM
nZz2zGLjUxb//FeLbe0SsXmoDH/jKlmU4+R6I/u4NA3kZ5zYui6YrjF1qV90
1AUdQNJ3/G0fMTqjjXbIFpoTt4i915TfqtPHD02uBgmZklVhKcwERzGq32aV
4ySrgRZs8HlTFaaK7dvz81e3mRCZQJu37g956agiLuQcm0shD4L8A/w++Fvw
c+BfQK+DPgU9BvoD+Bb4BfAU8APmBfoD6vFreIbfM4fSc5C7MCpZaMzS0LHC
KxViLK9uVSaa21dtmjvLHwsUHFwobLKQ7DiYZ7/h6VJSMBD/y5s3lLp8T5U7
Iy1Bf5dz3tmntpDWhOsnp4uaok2hjKQsRXs88SDMSHazPnklvjzvO58zfcqZ
ztQ57oYmCwttOTtN6ObYYx1aIjKkm3/imFeSJIF8DPIgyD/A74O/BT8H/gX0
+v/06V89BvoD+Bb4BfAU8APmBfoD6lGwe6Z/Ooqxe2SiA2ZqZIYzP/5mfZjd
6ZhqbYUTmfzLb1fMQV2WDyT3GBiQ4xl52p461vR+6oH8IqEkOsAacltTYIvJ
h08H9jupEfeWYgZWxXggq3pNV4Ymsh1j7X8goIGNU/awqncYkXkembsWIC3a
5yXZyLqI0aZrV10UTX6zIC+EfAzyIMg/wO+DvwU/B/4F9DroU9BjoD+Ab4Ff
AE8BP2BeoD+gHj88Z+rj9GV7j3uGN/bkXWuhnmyMfNtKEvLXpGDhRgmu83dt
6VEjzeZiXXnSE5Xite2nDmJ8CJW4oOCNtvxqjQ+M9MVyiWtSYgws0Yc+ESIs
PM3eu4Ksyi82QnvWPm95yRakd4ZyV72d8iI/gqt3X1b614/Wx71YXvmOCfkp
5IWQj0EeBPkH+H3wt+DnwL+AXgd9CnoM9AfwLfAL4CngB8wL9AfUQ3PBTH14
+wVadeXDaMXnJqvPx5TQY5OAHL0xV1TvPD22c5k2Tub1sWmzdKV1w1ajx4VD
Ke/l+TH8O8PQjmLB+DPb4qjtwJ+6t/ukSWGv+uimKQbWbSx2lQg3IXH/tC/b
WWhFaTbXxmU+fxj3D96QHZhlRyBPhvwU8kLIxyAPgvwD/D74W/Bz4F9Ar4M+
BT0G+gP4FvgF8BTwA+YF+gPqYbdqpj6XLiXZPG/2wr2xmpHVDStx5XSbzA8h
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
5ILERdcblx4mjZX2JW76F7iLo9s3Lpq/5985/Trshs+9d+52zSfRoeTQEh7/
MWKpRH5VlI70GmMuYzdf//FZduyI/+bman4fuiFrstSlUUdoouWssBnXg8iz
PRbXB+bv5WJEBpJ/Tj7Lrk/NuCJ8zpFEPZ2hlSsYTJNF/F5das5l04w+bUri
taC1vqtn5BlF0JJ+6vS1O428DlhpNza+hKzxa+3ZJBdMCqp0BUlkMhUxCKh1
NEqlMqe3P5h+PpRNlRUbs8W4lEb8TgyTlQ0kl5UPVKbK5pKFyl4rnNuqudOq
F6rDTZ6RljJTI/v4ZzTS0NjwcWkY2Whp0Ney7CpFPHFOrSM2w+f+1eVp7JJh
SdO3Bjgu1vYnO26eEVjyfgM18jn7y3hSHhvTaH49xt6TtFjp2qpcCqZtYkK5
DxIY8c/dc9wl0ouOPHtzzLdFodRH65STw8erJOR/AEf+cAp1Suzs/z3dm8m8
SZr/XaWYtGhZ5C0T9qK8PGlx0xa60V49DWuWnkC3PTM+svVCINFN+lrZd+Eu
WS/7anxPeAntN1NbLTnuIRszd2Fh792r3ET9wU13RXOoimWIVuz3ZJKwzsnS
SKiKhiw+OjB4JZTkH773forPQ3pJ68+2vY2FDPcW8cQ5T490GD73u/6l22Yn
xpBlLKj8t58rbbPfnaY5mjKH97E34y/uI/WNYr1TdYKo7Nx8Nbc1+eQSb4f4
wTcBdH3kTmNZjwCu+Z1FQbxzDosJUPv0o/4WVfT6Hdg9JpC9XqKT9mtSPXF6
Wta5sziEzj+a5poVnM+ljivt+aVWRm0N08eGvMgjrvPCX6hllZIn5KisxOsK
utQsJnLsqiY2VmPZohqfa5yetu+zk6OK6UxzWxcvmwKSsDRY60x4M3VreGJh
1JJMxB2kFk3Z0E4P9sq8Xiv0gCE/cW8RT5wz59jfe/611SL/oIw5OzWjiF72
DacBtbzu42IcaNKc1Lw3hZ5kIDfbIKE1jNs+d1pO+sgMluIsKVLrp09uf1nS
m+flzXUqrqx452LOfrTF6iwqt+Hmuj2XSbP34nR1e/g1YjzY50XRSnpWhSSA
b/G0jR8uEUkjF9M0qWi6pNijPcn9Ltfk51ftfS6JyIY0d6e2naISG5/3za+M
Jo+v7G1Qt04hnZXCp6KWMW4vj0Tkj/EVpLyyP9PPoZrurTkzquBqBBNN6lfw
XxhAUYeQn7i3iCfOaRK+Z/jc2xfe2FFhwUv0NCbZmr+/RLqCV2/tPeRP4/44
y7gMlpGtyT8mvNztRbsKPAS/frtIveaaVqeoJZEBhwB17vIWbrS1kJJD3Vkm
92jb3dryVCag/7qmSUebCx73WX7OiTi6quVC5OJCT05f1uz7jRvmzH0+199x
JpK0vtH9nEZDOKd17U11wjks/N1M2VHK9txPrSmxy45f5syCbrwSr9jJ5kbz
p7h0FHA6O9SGvq6JJPItZ3983ZTNzfMyfT+HphLUW9Qh5CfuLeKJcy7pOjd8
btXAjtEO8gvoDSXPEVWmkex4m5zIj9TzVOHge81rY3PZmjnvDG164tk449Ei
M25c5BaPKxQQk/BlaZ6uE32VQ+hylWafY/WJtHvyXD8jlX1E9myVV9nLeubm
P00nrjOJxardV+TZkM85ZgfffPuxne6YeWx7DU8F82vztHWccpVrG5sWE6ud
x0qvnhsdWXCXue7+oWQh/pzOSAioOOr6kU3NdfZZ2tjL/TxhOpGdXkb+VGYm
jfnjRdFXUG9Rh5CfuLeIJ855dvPfPtb5s/5PKLnEQj9n3F2oE8+JHeD/Nlsg
mJksDW593nqKyP3ZuuqbSgLXYDbNf+LmWHLMZXSeQNMxuvm94lj9keu4qQ3p
p5Y32LFm0xx7Xp0gssPkrOHn2Z6kRvPElxUKLlzDy/L3fAPO3JyV5pJzbfWJ
7dErXfri4fT8oV29S8sPMYkJqoFDvGnk0QcdbuLXEs7QJaN0SLqUpEn58vjN
qqBBeUVOM0y8SaZed8LSNxkU/RN9BfUWdQj5iXuLeOKc77cYDZ+7XkXatGfB
TZKvcyZI8nEi9U6YYrzjkzm93aPZqyAay+wSKk3X6idQvYPO+orWXqxy7blT
8inhREdo3Gv3Xgf6yPfPtJBNMXTDy0WN1/QSaUT7t7aj2WfJrNGjf/kKx5B9
z26M07sWTWdX1vkzvQLWnfa4zYj3BL2xsmjEmplpNF8nRtPyoxM5N1FyTERL
I5214MDuA85RrH5Qy32+dDzd/zBJbuuSyww4Af0TfQX1FnUI+Yl7i3jinFFR
UcPnjjgZJOKm8ZBY91bvbJ2ZR4zWCAnl7y7hzqVrTwnc0U4GxZQnKJeZ0NpC
a81vm+o5T3GFHxMelLAC63raP7KYbJO7m2l6JYjk6N3NHWTJtNqn8orhy1Tu
Y2JRQdqNAGKwQ/V3dGsoFajSCDj+6DyJal/+1O7lXcL2Xwlyf/uSmxxgu6x/
fDfhv7vFptX1O93mW3swoZ0R+Ylnw9Pj4zjgIeAE9E/0FdRb1CHkJ+4t4olz
SnzaPnxutf2blFNkSqjpHl7L4B8NJPBJ6Xzn/fnU+93ezCQ+L/L91KhDTqyE
XP/9rWnrtlBuyZ76iMU/KHX/ES7V/imL09Q7GfY07iorvh1S9cK3gvSr5xiI
et2j6bet315e1sKeNSgOfMiJ5+xD7Kp59t2nR0VcJNr2F5LlkqPXaaYmcqJ3
EuNLO2LIqujiDWEO0Zz6BivB5L4UAtwHPAScgP6JvoJ6izqE/MS9RTxxTrnN
1sPnPlIzINBETpHwg/PDct2z6IJLes0S3xOY8bd3G75zSaysIuOIosdx7pBI
6PNdayO4twr3WgwFSjiJkc7b14fksHEnanicHLOImm2N/KW3EXRpwogbnx5T
lvFc50LSJU+a9TvLb6tdDlewx/FFzfQgNnOLxPKYlwU04t6q96vtTrHOMQqG
Be9TqOsS11r25BIDvgXuAx4CTkD/RF9BvUUdQn7i3iKeOGfU9erhcy+S73rY
0FRLvvZ8nmN0K5K2VR4UW+yaxd068ikpKDyKlTT5j5TuamB2SrU7XUIjWM9x
K9HAz0Wc3f4d3/RM/ofLZvZ7O4e4Mca/wkpXPZtLEFv2nrYGsJmJuvT589ss
efWnGb/31tNfo5NC15TcYmnVpO6oeRVXxDt5T7tKOXNWviz34E8DBxwPfAvc
BzwEnID+ib6Ceos6hPzEvUU8cU5RW4Phc985r3bshUEeawpbxzftcjDr+Ghs
O2pPIHUpS7BesK+OjgzYvNAjNpuLiRa0LB8KZiIhlwyPnd5Kcq2UGs8Y5tAw
0YqcTa5ZZFmi29NVNyJoqFhWXZJ0ERdDht6npQQTla0/Wn5MYNyz0E51LYEi
Yl7hGOftnc397z/28MtVlQTzCnA88C1wH/AQcAL6J/oK6i3qEPIT9xbxxDlt
jm4bPnfMMcWLs30JjUm/0vXwUA6ZH2W2apppNtuh/02ddJ5nUwXUy1XeenO9
dlpn7TfGcZPNZTp6t60itbsep9X0R9AXD3ev7Wi6yM4JfnR0PGJImrf8lPN9
fJnrlixSXhZnTzbt3Zi5bXckJ7sqRn22exhhn7rWtXRnUcxlmFeA44FvgfuA
h4AT0D/RV1BvUYeQn7i3iCfOGRdlNnzuQxHt53cH5RHx6afmaa1tJ1LTDUYM
nM1g46/my/tItNH55svXHHiTybU0HSjoD3Ehj+8oyjgdTqW5z0Larm86ySb0
vbxs8+I2Y8dIt9mMGmqv0GT9adZNdvuBQNymgPucnKojGcUbSYSYhFjt1ccc
5k/MZZhXgOOBb4H7gIeAE9A/0VdQb1GHkJ+4t4gnzvk4YvPwuaOP/Irv7oyl
bU1mE/+459J2j4alvXuTSOiJD/s2y2aTRmd+641xSVzpIP8F1+ha1j3Tp0XO
J4o7+DJbMVwrg0bbvpvTHOhP9ke/qvYRrqOrI5c3S/McZ1ZCNfYvOsqpSJXS
lGWHSxjmbMyfmMswrwDHA98C9wEPASegf6KvoN6iDiE/cW8RT5xTa/NI7r9z
a95e1D39Riv15D89MG1yJbGvcW4oS24mZ5acW3955xNqKKzhpe3cydrvTQie
plLEBd5Plc9qqKaX+QfvdAfdI+d/Fl14X/uZnmz/pa18+jox7L1R1Db7K23Y
2SZk6P2KgU/AnI35E3MZ5hXgeOBb4D7gIeAE9E/0FdRb1CHkJ+4t4olzvmyi
f3HLyGWq75eGsbPOeZL+0i5k/atlAd8uMm6seOmtwcs3Ge/Ym/GDLju4M7Fy
xeN3xFExfdWOA3r+rHQEG3PlxCM6MjZ/pNfEOOJxxH9Vx/QgunGuyoHXNJmB
NwGfgDkb8yfmMswrwPHAt8B9wEPACeif6Cuot6hDyE/cW8QT57y+i3/58Dxm
NBB3ZV4NPXDh0CivZjdmsdBtxIvkCm5JUXvm0GMP9kFjNt9dm1iSfOH1qVNr
gulY2jrVctp9kt7/vebK4Qd0m+h7rqDFk0wvGDgV9Og+B34IvAn4BMzZmD8x
l2FeAY4HvgXuAx4CTkD/RF9BvUUdQn7i3iKeOOe7e13D585O734t9SmK8QW4
WQ2UZtI7JwZja1XPspWKtvv2vygjLVJdUec027nVvTNVn57vI0N5Uq1ztb/Q
E3tTTG1W5BEFhwfCwubtFDwY+CHwJuATMGdj/sRchnkFOB74FrgPeAg4Af0T
fQX1FnUI+Yl7i3jinBazVP/2b+ncw4buRUTzDK+v2OIgbq/Mj3P+cw9xPZom
4x5MsGKuFh5BgyWe1Nfp/Ud/q4GVdSsiq5U1LtGeZx3znnpTBr4PPBj4IfAm
4BMwZ2P+xFyGeQU4HvgWuA94CDgB/RN9BfUWdQj5iXv7L57/f86KmEat/84t
+O5XZHaTJ2kdMLG2X/CcabSu+MCkvlOJGeTMg918JeH606ujQ/lXnv19T7BU
oY6J6fAernF6wIHXBN8HHgz8EHgT8AmYszF/Yi7DvAIcD3wL3Ac8BJyA/om+
gnqLOoT8xL1FPHFO0VGuw/GOm5jw7vTxULp6+fE8jTQ/8vz9VO/7sxo4HdO4
D69mZrEL9YLtiiHh9NhE7XhV3kIG/ha8Jvg+8GDgh8CbgE/AnI35E3MZ5hXg
eOBb4D7gIeAE9E/0FdRb1CHkJ+4t4olzpid2DZ97XdRhv/bcCywr6o63XXkL
DR3FTXnCm0q+3+dVqrepp1YtF6vfGJYz8NTgb8Frgu8DDwZ+CLwJ+ATM2Zg/
MZdhXgGOB74F7gMeAk5A/0RfQb1FHUJ+4t4injhn64y/c+hq3gf6zgX5hN+A
7gnjz+ai/kiJZvNHkvWNVNny7XMKPh48Nfhb8Jrg+8CDgR8CbwI+AXM25k/M
ZZhXgOOBb4H7gIeAE9A/0VdQb1GHkJ+4t4gnzlkrOFnlv3OvtV2XKOeaS2bP
bV7YmviFFhf8qTty4DPD3gF8PHhq8LfgNcH3gQcDPwTeBHwC5mzMn5jLMK8A
xwPfAvcBDwEnoH+ir6Deog4hP3FvEU+cs97t6nAf+24wttR7ZzDTWNUo3uX3
mcN+BXsH8PHgqcHfgtcE3wceDPwQeBPwCZizMX9iLsO8AhwPfAvcBzwEnID+
ib6Ceos6hPzEvUU8cc6rZleH77luZUfCruobBHsk7FewdwAfD54a/C14TfB9
4MHAD4E3AZ+AORvzJ+YyzCvA8cC3wH3AQ8AJ6J/oK6i3qEPIT9xbxBPn9G1V
Hj63YKsfa7eOJfFBd4ruzA5hXu5K3Xw5mSRP/Davu9A9oqPI35EVEcQeH5i6
kb/agBXb5EupBoUxl0on+/GbLjLxJ3OSgm7dIYVJTyzefIkgTNu94veRbHKm
dZGVtV8++SKeIntqYSSrMF84+8kqRox9p4flxZT/+97VWDl93m3VrCrpQ/WD
BzFs4g+xdifHbPJmW0Xe9LJoNvZawxixcTfI16xp1kvWtrG9RjmvYwISiLWn
9GPjz5HkCq/zJ3qvnly/ktgjYNLB4hq9O6S77hOh/ZWbpdOj2Ilvtgte3C1h
PSv4XnUWtRCcD9/z3hU2+3P3IzLldTbfW4EOEtZave7T4mSWeXLmlIvMnUT0
HRyYJn+dfDyh/cbg4Q0yRnsD3+QF0aTMZPEnidZ0si00tzR01kPi/+aZ9dND
lSytRULEYFYpiXd55Zeo2ECeJ3Z49D+t//d74nz4nqduxkme7tdkn97t+Zuy
C1nfEqMLmTvLGGd7J8NVsop8XX3lxLqHDUR+Jn+UvT9jJaEn34S6pxKBXSuV
tS8+IB8TM87No72MR/j1r3lyrcToR9/63tZ6cryxQi1V+SVD/PB74nz43ly/
+MBi9XwSwnYJ5PbGM86z4kLshUp2wMqO5+aam8T3o4zV10u2zEVCebzh+gSy
YWaM1/XKPlbwewbvhERGJNcn6b02iSVPHWxiXU92ssa+D+k1X6r+3RfED78n
zofv6S7VeKL+gpFkP3nvP3o5xGX/oWWWgetJbU3ci1Ddu0zVTHdK0+oQVn/b
53LHhkpWv9HtnvaXN+zU2FSHMAdK7EfMV8sfF8MGeRdmSrZl/7ufuC+IH35P
nA/fG1FUOO5U6mc2a7PtHHPVILLRN098ct8tYtOo+nN72H0Str6+fKJFPzuj
FN758nIukdsxT8XwbR75/GhZX69tFzH12vrhzMyof/mA+4n7gvjh98T58L2I
BfI33mo6sLr07c9fnckhi2QdwrdfKyaJUmMkRucMkfXmQXMut4aQ34Ybjgq+
C2Hd/X+qirY9JZf6BNpd8pP/5R/yAfcT9wXxw++J8+F7pW4pp88alLKZH59G
CszPYBPEbmdk3vIkn1dVi+0UzCRJvdquoz4WkNOnLRuWVpxmQ9Z1ZeE2LQz5
jvxDPuB+4r4gfvg9cT58r991SOZLcQGLEvfI15N7T2pTpCr562JY9chYRSnv
dDLSfo1rwfsmJtXYWSZ0OZqhviDfkX/IB9xP3BfED78nzofv+U4pT+y5+4mF
BY7c+1Cvg91U5aKbneqIme7tzT99BTXNSqeeV5B+y1DPUF+Q78g/5APuJ+4L
4offE+fD9yZ1WM7ZlPaZRX77cbyjMI1UWKb5nDd7wzyaZU6rlI0qQf1EPUN9
Qb4j/5APuJ+4L4gffk+cD9/jPxC+JS24gkw8Pn3BakcPliCSGPpTLZmgXqN+
op6hviDfkX/IB9xP3BfED78nzofvaYyzfxYtMkEzxijva8Kvgwz9AfUa9RP1
DPUF+Y78Qz7gfuK+IH74PXE+fM/ktmVZ78AH9s7VSmSnaA7TmHHHVDTvMRHY
OE8vVIkxyXC/TSIV90m438/+zoFsgj+/UbVAqsA3jakKFm/gseonSto3a3me
DJLqxzGHvS90Mfx9/Hn2OfVJ9AwjrlXBkvatH4jhy562U7LN//79+Pv484Qu
y/WFn4ZIuf60WXUrR5Tg+/j34+/jz39tctjVIODHDHnv2A24drC6htCFCj/v
E/wz3HlwMMxYQPP/ANdzbcc=
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8370057200817957`*^9, 3.837065870915414*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"e62b4ad3-cb40-4ba9-abce-da2d6628d457"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Local Hamiltonians", "Section",
 CellChangeTimes->{{3.83700164681558*^9, 3.8370016492172956`*^9}, {
   3.8370058976419687`*^9, 3.837005899986371*^9}, 
   3.837006147624139*^9},ExpressionUUID->"a06ae6fe-3659-452e-95cd-\
e5c3154fc55d"],

Cell[TextData[{
 "The continuous part of the Hamiltonian ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["H", "c"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c4b98fbc-722e-407e-a9e0-3f17e1604cf7"],
 " is a sum over kinetic, interaction, and potential energies in each segment \
(where one doesn\[CloseCurlyQuote]t have long-range terms).  Thus, we simply \
add the \[OpenCurlyDoubleQuote]on-site\[CloseCurlyDoubleQuote] energies."
}], "Text",
 CellChangeTimes->{{3.837005922555674*^9, 
  3.8370060701384478`*^9}},ExpressionUUID->"2c19188e-2f0c-4701-a671-\
214c75d6f217"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Hsitebox", "=", 
   RowBox[{"kin", "+", "int"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.837006072652254*^9, 3.837006086505344*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"91c988a9-2e44-4d22-a4db-691b09a6fab2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000056`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
                "], {{0, 0}, {29,
                 29}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> 
               False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5388", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1: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
                "], {{0, 0}, {29,
                 29}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> 
               False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5388", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.18212547322877232`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2400.0000000000045`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.4616600552637851`*^-10"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3666.0605559641913`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.4616645479483943`*^-10"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxV0j9IFAAUB+CXltl1ml1KLUlGFIQFBYGkuFSDIiQOoaYNKiJC/wgqIkKF
wgqixaOgJYtQSJckKAhURJyKC1vCQSSLIDCOGzKo/MCpB9/83vvxq+i42HRh
Q0SMxf+TTwFb2MFuDnCEak5xmhY6OU8/Q4zyjgzLrFJkSQXHqKOdy9zmMWNM
8Ynv/GFPXsQJurnLSz6QpcyBVZzlFk+Z4RuJjRGHaOQKad6wwD/2bnI/Pdxn
nAw5dnr6OO308YxZfnFwc0QbD5gky77CiDMM8pYflAutkQEm+MquREQ9Nxln
kdTWiJNcZYTPJJMRtVximHkKivxKL094TxRHHKWLNHP8pnJbxDkeMk2O/SUR
zdxjhFm+kLddxtTSxg0e8Zp5spSkIg7TQC+DvGCGpdR6OcqpoZXrpJngIz8p
LtUfKqmmnhZ6uMYdhnjOK6bJsMgKOVb5S35ZRCEJkqwBEnhbeA==
       
       "], CompressedData["
1:eJxTTMoPSmJiYGDgEWVgYATSzCysEMTGzsHJxc3Dy8dPO5aAoJCwiKiYuISk
lLSMrJy8gqKS8qjYwImpqKqpa2hqaevo6ukbGBoZm5iamVtYWlnb2NrZOzg6
Obu4uo0qGVUyqmRUyeBW4u7h6eXt4+vnHxAYFBwSGhYeERkVHRMbF5+QmJSc
kpqWnpGZlZ2Tm5dfUFhUXFJaVl4xqmNUx6iOUR2jOkZ1jOoY1TGqY6B1VFZV
19TW1Tc0NjW3tLa1d3R2dff09vVPmDhp8pSp00ZlR2VHZWktO33GzFmz58yd
N3/BwkWLlywdftxly1esXIWNWL1m9RoAEqBK1w==
       "]}, CompressedData["
1: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
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.837006078743536*^9, 3.837006095872265*^9}, {
  3.837065876607563*^9, 3.837065881696834*^9}},
 CellLabel->
  "Out[340]=",ExpressionUUID->"151562b9-adbd-466c-aa43-090c73754b6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Hsite", "[", "j", "]"}], "=", 
      RowBox[{"Hsitebox", "+", 
       RowBox[{"pots", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "numsegments"}], "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.8370061128761597`*^9, 3.837006121033255*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"82b39464-8227-4592-a4cb-1479c9fc41c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000882`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.837006122670145*^9, 3.837006129193087*^9}, {
  3.837065884824894*^9, 3.837065896082601*^9}},
 CellLabel->
  "Out[347]=",ExpressionUUID->"071282f8-3c75-4d54-a94b-9a36091fa34a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hsite", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.8370061314339323`*^9, 3.8370061339045067`*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"304301de-120b-4b3e-8135-74ee2ec1db52"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1: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
/V84QVpr
              "], {{0, 0}, {29, 29}}, {0, 1}], AspectRatio -> 1, 
             Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5395", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1: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
/V84QVpr
              "], {{0, 0}, {29, 29}}, {0, 1}], AspectRatio -> 1, 
             Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5395", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.18236208761492698`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "246.74011002723398`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "173.20508075688784`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "6.813352007396475`*^-13", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "20.973140123229342`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxF0ktIFFAUBuBjqZOa2ThKJFEEhUkkhAkGQWS4KRepUKvQfGwMG4QgCUoi
wgLDCqKNQ0GbHoiCuUmEhKBEpFUyoRtpIdEDISiGWdTXqgvf9h7+/5y93en2
SwURMRH/XyFb2Mp2athHPU0008pZuujnMrcZZ4q3ZPn270MDqjjAMc7QyxCj
POEV71llg8JNEbWcYoB7TLNMjl2bI47TzS2escgPkgIc4RxXyfCGzxQXRdTR
SpoHzJAlz+7iiBP0MsILlvjD4UREDw95R46DijrPGPP8ZH+J2dxhlu/sKY1o
4yYzrLOzLOI015hkjZTSW7jCc1YoL5eVQZ7ykcS2iKNcJMMHCioiGujjEQvk
OWSJndxnkiW+UpLUMS30cIPHzLFCjh2VEY10MMgYEyzyhURKXk5ygWEyzPKJ
31RXuR8aaKaNLtJc5y7jvOQ1C2RZ5xd5ojqiiFIqSJLiL95IWiU=
     "], CompressedData["

1:eJxTTMoPSmJiYGAQFmVgYATSTMwsrEDEBMNs7BycXNw8vHz8tGMJCAoJi4iK
iUtISknLyMrJKygqKY+KDZyYiqqauoamlraOrp6+gaGRsYmpmbmFpZW1ja2d
vYOjk7OLq9uoklElo0pGlQxuJe4enl7ePr5+/gGBQcEhoWHhEZFR0TGxcfEJ
iUnJKalp6RmZWdk5uXn5BYVFxSWlZeUVozpGdYzqGNUxqmNUx6iOUR2jOgZa
R2VVdU1tXX1DY1NzS2tbe0dnV3dPb1//hImTJk+ZOm1UdlR2VJbWstNnzJw1
e87cefMXLFy0eMnS4cddtnzFylXYiNVrVq8BAFhwSvI=
     "]}, CompressedData["
1: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
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.837006134445095*^9, 3.837065898271542*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"6914cf2a-a1df-424e-8df9-cf7a22f8ad78"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Initial state", "Chapter",
 CellChangeTimes->{{3.837006360828476*^9, 
  3.8370063666851397`*^9}},ExpressionUUID->"da108f75-8b87-43c7-9381-\
6546ce355cb9"],

Cell["We start the particles in roughly equally spaced segments.", "Text",
 CellChangeTimes->{{3.837007964993541*^9, 3.837008006074288*^9}, 
   3.837008705569446*^9},ExpressionUUID->"d6ddcf1c-8798-4b73-a0a1-\
e26247cfa798"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equispacedpos", "[", "particles_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"particles", "\[Equal]", "0"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Ceiling", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Range", "@", "particles"}], "-", 
         RowBox[{"1", "/", "2"}]}], ")"}], "*", 
       RowBox[{"numsegments", "/", "particles"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837008019806196*^9, 3.837008023697427*^9}, {
  3.8370085176671963`*^9, 3.837008519059615*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"642217f3-8698-49a2-9944-cc0b99e9af35"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numsegments", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"equispacedpos", "[", "5", "]"}]}], "Input",
 CellChangeTimes->{{3.8370091324415216`*^9, 3.837009141046692*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"8c69f281-21f6-418a-ac13-ec3c1b92bf98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "6", ",", "10", ",", "14", ",", "18"}], "}"}]], "Output",
 CellChangeTimes->{3.837009141500187*^9, 3.837061069970026*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"750445cb-7a09-426c-938d-bcfdd7001af3"]
}, Open  ]],

Cell["\<\
Below is a routine that gives the position of the basis state that is \
occupied in each segment.\
\>", "Text",
 CellChangeTimes->{{3.837008851140723*^9, 3.8370088946436768`*^9}, {
  3.837009399856036*^9, 
  3.8370094075974617`*^9}},ExpressionUUID->"039e8b80-856f-4b9e-b4bf-\
1655c0134b86"],

Cell[BoxData[
 RowBox[{"equispacedvec", ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "filling", ",", "remainder", ",", "occupations", ",", "posrules"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"filling", ",", "remainder"}], "}"}], "=", 
      RowBox[{"QuotientRemainder", "[", 
       RowBox[{"particles", ",", "numsegments"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "If", " ", "there", " ", "are", " ", "more", " ", "particles", " ", 
        "than", " ", "segments"}], ",", " ", 
       RowBox[{
       "fill", " ", "each", " ", "site", " ", "with", " ", "the", " ", 
        "quotient"}], ",", " ", 
       RowBox[{
       "then", " ", "equally", " ", "space", " ", "remaining", " ", 
        "particles"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"occupations", "=", 
      RowBox[{"MapAt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "+", "1"}], "&"}], ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"filling", ",", "numsegments"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"equispacedpos", "[", "remainder", "]"}], "}"}], "]"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"occupation", " ", "in", " ", "each", " ", "segment"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"posrules", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", "->", "1"}], "}"}], ",", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "->", "#1"}], "&"}], ",", 
          RowBox[{"Most", "[", 
           RowBox[{
            RowBox[{"Accumulate", "[", "basisdims", "]"}], "+", "1"}], 
           "]"}]}], "]"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "If", " ", "there", " ", "are", " ", "n", " ", "particles", " ", "in", 
        " ", "a", " ", "segment"}], ",", " ", 
       RowBox[{
        RowBox[{"we", " ", "populate", " ", "the", " ", "first", " ", "n"}], 
        "-", 
        RowBox[{"body", " ", "basis", " ", "state"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"occupations", "/.", "posrules"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.837008636254765*^9, 3.83700865775145*^9}, {
  3.8370087092632113`*^9, 3.837008793685464*^9}, {3.837008903830701*^9, 
  3.837009019588935*^9}, {3.837009077025703*^9, 3.837009096431971*^9}, {
  3.8370610741604557`*^9, 3.837061075557419*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"b31b98c4-7a0d-468d-9a84-6c4b659d0f71"],

Cell["Here is an example for 10 particles in 20 segments.", "Text",
 CellChangeTimes->{{3.837008851140723*^9, 3.8370088946436768`*^9}, {
  3.837009169763748*^9, 
  3.837009320207567*^9}},ExpressionUUID->"b1978827-9124-4b29-b9a6-\
ab7573405a2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numsegments", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"particles", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.837009149602545*^9, 3.837009155036831*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"d59c8d83-7fd9-43d4-a934-6ef608e11618"],

Cell[CellGroupData[{

Cell[BoxData["equispacedvec"], "Input",
 CellChangeTimes->{{3.8370091022221413`*^9, 3.83700910368279*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"b9719203-7369-43ba-b121-e9b9e7c08673"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1", 
   ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", 
   "1", ",", "2", ",", "1", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8370091044239683`*^9, 3.83700915644208*^9, 
  3.837061080380149*^9, 3.837065745908205*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"cae9f9af-8c9b-48be-9e94-93571377eb6c"]
}, Open  ]],

Cell["\<\
So the 1st segment is in state 2, the 2nd segment is in state 1, the 3rd \
segment is in state 2,... 
State 1 is the first basis state, i.e, the vacuum. State 2 is the 2nd basis \
state, i.e., the flat single-particle state.\
\>", "Text",
 CellChangeTimes->{{3.837009325255104*^9, 3.837009328439765*^9}, {
  3.837009369493981*^9, 
  3.837009521410079*^9}},ExpressionUUID->"4e071cad-3a72-488a-8b8c-\
ab67ee080479"]
}, Closed]],

Cell[CellGroupData[{

Cell["Other inputs and file name", "Chapter",
 CellChangeTimes->{{3.837006360828476*^9, 3.8370063666851397`*^9}, {
  3.8370108669220467`*^9, 3.837010868538576*^9}, {3.837011109806264*^9, 
  3.837011112046528*^9}},ExpressionUUID->"ca9c7a10-d543-4378-84ce-\
27ead0fd6786"],

Cell[CellGroupData[{

Cell["Basis, DMRG, and save parameters", "Section",
 CellChangeTimes->{{3.8387412973059177`*^9, 
  3.838741301569737*^9}},ExpressionUUID->"c1b3ecb8-2fe9-44b2-9f24-\
fdae0eb1d6db"],

Cell["\<\
We store the parameters specifying the local basis, DMRG sweeps, and what \
results to save in separate files in the \[OpenCurlyDoubleQuote]Parameters\
\[CloseCurlyDoubleQuote] directory: \[OpenCurlyDoubleQuote]basistable.m\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]epstable.m\
\[CloseCurlyDoubleQuote], and \[OpenCurlyDoubleQuote]savetable.m\
\[CloseCurlyDoubleQuote].  Each set of parameters has a unique integer \
pointer or ID.

Please see \[OpenCurlyDoubleQuote]cDMRG_inputIDgen.nb\[CloseCurlyDoubleQuote] \
for how to store/update these entries and what each parameter describes.\
\>", "Text",
 CellChangeTimes->{{3.838736849618664*^9, 3.8387368509059668`*^9}, {
  3.838737411884898*^9, 3.8387374624234533`*^9}, {3.838740728640622*^9, 
  3.838740885491454*^9}, {3.838740919466579*^9, 3.838740937480756*^9}, {
  3.838741473866485*^9, 
  3.8387415361320744`*^9}},ExpressionUUID->"5722bbee-69e2-4e68-b6de-\
033289fa333b"],

Cell["Below is how the files look like.", "Text",
 CellChangeTimes->{{3.838740888587885*^9, 
  3.8387409137951508`*^9}},ExpressionUUID->"39ee1041-beb2-4886-81cf-\
dee17080e0f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8387409485847607`*^9, 3.838740950530773*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"cc3b3eda-575f-4fe2-946b-b67ba1fbb8a7"],

Cell[TextData[{
 "Stored basis parameters with IDs.  Each set is an list of pairs -- the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "68e0e9ed-58d5-4abd-b741-7b1b2aa6763b"],
 "-th pair specifies the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8759c6a3-20f6-4c6a-95cf-999eb8b64b28"],
 "-particle basis:  the first number sets the maximum monomial degree  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "max"], TraditionalForm]],ExpressionUUID->
  "1531baf1-b7ab-4e40-aca6-60029ca193b5"],
 " and the second number gives the number of basis states to be retained."
}], "Text",
 CellChangeTimes->{{3.838740982491818*^9, 3.838741118820819*^9}, {
  3.8387411877125273`*^9, 
  3.838741265672247*^9}},ExpressionUUID->"79771272-10b4-4e64-9971-\
3e152ce419b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "/@", 
   RowBox[{"Import", "[", "\"\<Parameters/basistable.m\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8387409681345863`*^9, 3.838740974304882*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"71efde06-4500-43c9-ad37-53a40c8b370b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "10"}], "}"}]}], "}"}]}]], "Print",
 CellChangeTimes->{{3.838740969653973*^9, 3.838740974715988*^9}},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"fa36c2ea-5418-485e-86e4-b4005aa25342"],

Cell[BoxData[
 RowBox[{"2", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "50"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "30"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}]}], "}"}]}]], "Print",
 CellChangeTimes->{{3.838740969653973*^9, 3.8387409747182817`*^9}},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"e8cdcccc-e848-44a0-98dd-181d51837542"],

Cell[BoxData[
 RowBox[{"3", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "56"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "70"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "60"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "50"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}]], "Print",
 CellChangeTimes->{{3.838740969653973*^9, 3.838740974722251*^9}},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"02419f3d-00db-44e8-bc3c-3bf5842da417"],

Cell[BoxData[
 RowBox[{"4", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "70"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "90"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "50"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}]], "Print",
 CellChangeTimes->{{3.838740969653973*^9, 3.838740974724618*^9}},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"36717d7f-13e7-42fb-a78d-c219fdf5ee6d"],

Cell[BoxData[
 RowBox[{"5", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "2"}], "}"}]}], "}"}]}]], "Print",
 CellChangeTimes->{{3.838740969653973*^9, 3.838740974726905*^9}},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"885a77c1-f677-467f-8ff5-489c64869fd4"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Stored DMRG parameters with IDs.  We execute multiple DMRG cycles with \
increasing energy penalty \[CapitalLambda] for discontinuities.  In the DMRG \
code, \[CapitalLambda] is called 1/eps.  Each of these eps sweeps has its own \
set of numerical parameters, given by the lists in each set.\
\>", "Text",
 CellChangeTimes->{{3.8387412536053553`*^9, 3.8387412684019747`*^9}, {
  3.838741412491803*^9, 
  3.838741437190488*^9}},ExpressionUUID->"96c811cb-98ad-42e7-8150-\
22a3f128589b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "/@", 
   RowBox[{"Import", "[", "\"\<Parameters/epstable.m\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.838741274060216*^9, 3.8387412751195173`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"a48f9db9-848b-4d96-abbd-896dab2744b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"targetdisc\"\>", "\[Rule]", "1.`*^-12"}], ",", 
    RowBox[{"\<\"eps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.1`", ",", "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", 
       ",", "1.`*^-6"}], "}"}]}], ",", 
    RowBox[{"\<\"MaxIters\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "40", ",", "40", ",", "40", ",", "30", ",", "20"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"cutoffs\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", 
       "1.`*^-14", ",", "1.`*^-14"}], "}"}]}], ",", 
    RowBox[{"\<\"MaxDim\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30", ",", "40", ",", "50", ",", "100", ",", "200"}],
       "}"}]}], ",", 
    RowBox[{"\<\"epsthresh\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.001`", ",", "0.0001`", ",", "0.00001`", ",", "1.`*^-6", ",", 
       "1.`*^-7", ",", "1.`*^-8"}], "}"}]}], ",", 
    RowBox[{"\<\"maxsweeps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "10", ",", "20", ",", "30", ",", "50"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"Noise\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"minsweeps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"MinDim\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}]}]}], "}"}]}]], "Print",
 CellChangeTimes->{3.838741275434517*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"6b27e85e-df13-49c6-95bf-528b0c46cec9"],

Cell[BoxData[
 RowBox[{"2", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"targetdisc\"\>", "\[Rule]", "1.`*^-12"}], ",", 
    RowBox[{"\<\"eps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.1`", ",", "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", 
       ",", "1.`*^-6"}], "}"}]}], ",", 
    RowBox[{"\<\"MaxIters\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30", ",", "30", ",", "30", ",", "20", ",", "10"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"cutoffs\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", 
       "1.`*^-14", ",", "1.`*^-14"}], "}"}]}], ",", 
    RowBox[{"\<\"MaxDim\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30", ",", "40", ",", "50", ",", "70", ",", "120"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"epsthresh\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.0001`", ",", "0.00001`", ",", "1.`*^-6", ",", "1.`*^-7", ",", 
       "1.`*^-8", ",", "1.`*^-8"}], "}"}]}], ",", 
    RowBox[{"\<\"maxsweeps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "10", ",", "15", ",", "20", ",", "25"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"Noise\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"minsweeps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"MinDim\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}]}]}], "}"}]}]], "Print",
 CellChangeTimes->{3.8387412754386187`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"cd281510-bfd5-45f0-85bc-80c08d647a8e"],

Cell[BoxData[
 RowBox[{"3", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"targetdisc\"\>", "\[Rule]", "1.`*^-12"}], ",", 
    RowBox[{"\<\"eps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.1`", ",", "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", 
       ",", "1.`*^-6"}], "}"}]}], ",", 
    RowBox[{"\<\"MaxIters\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "40", ",", "40", ",", "40", ",", "30", ",", "20"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"cutoffs\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", 
       "1.`*^-14", ",", "1.`*^-14"}], "}"}]}], ",", 
    RowBox[{"\<\"MaxDim\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "60", ",", "100"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"epsthresh\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.0001`", ",", "0.00001`", ",", "1.`*^-6", ",", "1.`*^-7", ",", 
       "1.`*^-7", ",", "1.`*^-8"}], "}"}]}], ",", 
    RowBox[{"\<\"maxsweeps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "10", ",", "15", ",", "20", ",", "25"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"Noise\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"minsweeps\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"MinDim\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}]}]}], "}"}]}]], "Print",
 CellChangeTimes->{3.8387412754542027`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"7c1c4129-9091-48b3-9deb-ca2a2eceef28"]
}, Open  ]]
}, Open  ]],

Cell["Stored save parameters with IDs.", "Text",
 CellChangeTimes->{{3.8387412536053553`*^9, 
  3.838741282137443*^9}},ExpressionUUID->"3138a619-3046-4f0a-bc14-\
9bfaa83a0fa8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "/@", 
   RowBox[{"Import", "[", "\"\<Parameters/savetable.m\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8387412871362457`*^9, 3.838741287868882*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"14b3db09-65e7-44eb-9e37-fdf3eaf4d6b1"],

Cell[BoxData[
 RowBox[{"1", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"maxpower\"\>", "\[Rule]", "\[Infinity]"}], ",", 
    RowBox[{"\<\"savefinalmeas\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"savewf\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"savewfMMA\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"savespcorr\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"savennavg\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"saveentropy\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"savelocaldms\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"saveenergyhistory\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"store_local_history\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"store_local_history_eps\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"savethresh\"\>", "\[Rule]", "1.`*^-8"}]}], "}"}]}]], "Print",\

 CellChangeTimes->{3.8387412882480307`*^9},
 CellLabel->
  "During evaluation of \
In[101]:=",ExpressionUUID->"00446f84-97a6-4185-8a3a-ae4715170c13"]
}, Open  ]],

Cell["\<\
New entries can be added using the notebook \
\[OpenCurlyDoubleQuote]cDMRG_inputIDgen.nb\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.8387412536053553`*^9, 3.838741282137443*^9}, {
  3.838741334730761*^9, 
  3.838741354719839*^9}},ExpressionUUID->"d6ea55e5-0e36-489f-82c1-\
a5eeef218897"]
}, Closed]],

Cell[CellGroupData[{

Cell["File name", "Section",
 CellChangeTimes->{{3.8370171000206757`*^9, 
  3.837017102403983*^9}},ExpressionUUID->"73069d71-3939-48a9-a0fe-\
3e5b8476812b"],

Cell["\<\
The file name is uniquely identified by a given set of parameters.  Below is \
an example.  We do not include the save ID in the file name -- this is just a \
choice.\
\>", "Text",
 CellChangeTimes->{{3.837017290792967*^9, 3.837017406925048*^9}, {
  3.838741580775865*^9, 
  3.8387416029706173`*^9}},ExpressionUUID->"0ca14e0e-1eb7-469f-aeb9-\
61ed950807f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"particles", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numwells", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0byEr", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numsegments", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basisid", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsid", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saveid", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.837017384550881*^9, 3.8370174594245567`*^9}, {
  3.837078476234994*^9, 3.8370784768515797`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"8536e34f-f4c3-41e3-a262-3914fc2f0814"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"id", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<N\>\"", ",", "particles"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<gamma\>\"", ",", "gamma"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Nwells\>\"", ",", "numwells"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<V0\>\"", ",", "V0byEr"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<M\>\"", ",", "numsegments"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<basisparams\>\"", ",", "basisid"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<sweepparams\>\"", ",", "epsid"}], "}"}]}], "}"}]}]], "Input",\

 CellChangeTimes->{
  3.837017285398649*^9, {3.837017512289702*^9, 3.8370175146464863`*^9}, {
   3.837078481478006*^9, 3.8370784817572803`*^9}, {3.837193484124917*^9, 
   3.837193484401642*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"2ed76bc1-dcd7-48ee-b521-97943fb3eeb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"N\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"gamma\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nwells\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"V0\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"M\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"basisparams\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"sweepparams\"\>", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8370174638255243`*^9, 3.83701751575721*^9, 
  3.8370686680956917`*^9, 3.8370784822511053`*^9, 3.8371934851706676`*^9, 
  3.838741614114006*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"f8a4c214-87a3-4e09-927a-1cd990dd28e5"]
}, Open  ]],

Cell["We convert this ID to a string for use as a file name.", "Text",
 CellChangeTimes->{{3.837017564117988*^9, 
  3.837017595796995*^9}},ExpressionUUID->"2405c1a4-79fa-406f-a9d2-\
7d3796f9124a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"namestr", "[", 
    RowBox[{
     RowBox[{"x_", "?", "StringQ"}], ",", 
     RowBox[{"y_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"\"\<_\>\"", "<>", "x", "<>", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0", "<", "y", "<", "0.001"}], "||", 
       RowBox[{"y", "\[GreaterEqual]", 
        RowBox[{"10", "^", "4"}]}]}], ",", 
      RowBox[{"\"\<_1E\>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"Rationalize", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", "y"}], "]"}], ",", "0"}], "]"}]}]}], ",", 
      RowBox[{"\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "y", "]"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"namestr", "[", 
    RowBox[{
     RowBox[{"x_", "?", "StringQ"}], ",", 
     RowBox[{"y_", "?", "StringQ"}]}], "]"}], ":=", 
   RowBox[{"\"\<_\>\"", "<>", "x", "<>", "\"\<_\>\"", "<>", "y"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"namestr", "[", 
    RowBox[{"list_", "?", "MatrixQ"}], "]"}], ":=", 
   RowBox[{"StringDrop", "[", 
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"namestr", "@@@", "list"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.83701762725486*^9, 3.837017636035788*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"0302e9a8-6357-4ac3-a5c0-daa401179c84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"name", "=", 
  RowBox[{"\"\<Runs/\>\"", "<>", 
   RowBox[{"namestr", "[", "id", "]"}], "<>", "\"\<_ITensor\>\""}]}]], "Input",\

 CellChangeTimes->{{3.8370172245934763`*^9, 3.837017229835711*^9}, {
  3.837017650276746*^9, 3.837017653808844*^9}, {3.837017686384074*^9, 
  3.8370176952003317`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"8389e199-bfb7-4e22-a431-4bd90edc6147"],

Cell[BoxData["\<\"Runs/N_10_gamma_10_Nwells_20_V0_1_M_20_basisparams_2_\
sweepparams_1_ITensor\"\>"], "Output",
 CellChangeTimes->{3.837017655268899*^9, 3.8370176959135857`*^9, 
  3.837068670288525*^9, 3.837078487528852*^9, 3.837193489366806*^9, 
  3.83874161807306*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"0487c37c-49e5-4337-b6f2-60ad43b609b4"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating input file for DMRG in C++", "Chapter",
 CellChangeTimes->{{3.837006360828476*^9, 3.8370063666851397`*^9}, {
  3.8370108669220467`*^9, 3.837010868538576*^9}, {3.837011109806264*^9, 
  3.837011112046528*^9}, {3.837017754214486*^9, 3.837017789728039*^9}, {
  3.837017925936657*^9, 
  3.837017934560561*^9}},ExpressionUUID->"20833fb7-725e-419b-8890-\
41481dea28eb"],

Cell["\<\
We write the parameters and matrices to a text file which will be the input \
for ITensor.\
\>", "Text",
 CellChangeTimes->{{3.837061406282988*^9, 3.8370614474100523`*^9}, {
  3.837061589246047*^9, 3.837061591101121*^9}, {3.837062094148983*^9, 
  3.837062109299288*^9}},ExpressionUUID->"34c363a2-ec7c-4a8b-8a2b-\
5200e1c4950f"],

Cell[CellGroupData[{

Cell["Convert to C format", "Section",
 CellChangeTimes->{{3.837062049621099*^9, 
  3.837062070062499*^9}},ExpressionUUID->"6f6fd71e-3b02-4b1f-bc78-\
b8edeaee9948"],

Cell["\<\
Convert numbers and boolean variables to strings of C format.\
\>", "Text",
 CellChangeTimes->{{3.83706120371656*^9, 3.837061216717145*^9}, {
  3.8370613019820213`*^9, 
  3.837061312575139*^9}},ExpressionUUID->"574da26d-29f6-49a0-be98-\
e9b7fb554459"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cfloat", "[", 
    RowBox[{"q_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"ToString", "[", 
    RowBox[{"CForm", "[", 
     RowBox[{"N", "@", "q"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cformat", "[", "val_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"N", "@", "val"}], "]"}], "\[Equal]", "Real"}], " ", "&&", 
         " ", 
         RowBox[{"Not", "[", 
          RowBox[{
           RowBox[{"Head", "[", "val", "]"}], "===", "Integer"}], "]"}]}], 
        ",", 
        RowBox[{"Return", "@", 
         RowBox[{"cfloat", "[", 
          RowBox[{"N", "@", "val"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"val", "\[Equal]", "True"}], ",", 
        RowBox[{"Return", "[", "\"\<true\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"val", "\[Equal]", "False"}], ",", 
        RowBox[{"Return", "[", "\"\<false\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ToString", "[", "val", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[206]:=",ExpressionUUID->"3f8d0b6c-31e3-489f-b9f0-1e5bce6d29c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cformat", "/@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "True"}], "}"}]}], "//", 
  "InputForm"}]], "Input",
 CellChangeTimes->{{3.837061226013076*^9, 3.837061265259883*^9}, {
  3.8370613238684797`*^9, 3.8370613570704813`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"f33070da-c696-42bb-8f83-97d655501b1f"],

Cell["{\"1\", \"1.2\", \"true\"}", "Output",
 CellChangeTimes->{{3.837061229243697*^9, 3.837061265607416*^9}, {
  3.8370613405966797`*^9, 3.8370613576238956`*^9}},
 CellLabel->
  "Out[218]//InputForm=",ExpressionUUID->"db49d64c-3b54-4413-b41c-\
267f518f2457"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Write scalar parameters", "Section",
 CellChangeTimes->{{3.837062115548827*^9, 
  3.837062125231865*^9}},ExpressionUUID->"b1c4431a-73cf-43b4-b48f-\
50630ab0f0ee"],

Cell["\<\
The following code writes an Input Group as follows -- see the .txt file in \
the \[OpenCurlyDoubleQuote]Runs\[CloseCurlyDoubleQuote] directory for an \
actual example.

Group_name
{
param1=param1_value
param2=param2_value
...
}\
\>", "Text",
 CellChangeTimes->{{3.837061572821394*^9, 3.8370616018474827`*^9}, {
   3.8370616335326033`*^9, 3.837061867014571*^9}, 
   3.83706213818268*^9},ExpressionUUID->"2f52bece-5115-46ba-9c36-\
a53d46617ced"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"outputParams", "[", 
    RowBox[{"file_OutputStream", ",", "name_String", ",", "parameters_List"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "name"}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"Group", " ", "name"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<{\>\""}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"opening", " ", "brace"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"writeParam", "[", 
         RowBox[{"file", ",", "#"}], "]"}], "&"}], "/@", "parameters"}], ";", 
      " ", 
      RowBox[{"(*", 
       RowBox[{"list", " ", "of", " ", "parameters"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<}\>\""}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"closing", " ", "brace"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<\>\""}], "]"}], ";"}]}], "  ", 
    RowBox[{"(*", 
     RowBox[{"vertical", " ", "space"}], "*)"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"writeParam", "[", 
    RowBox[{"file_OutputStream", ",", "prule_Rule"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"param", "=", 
        RowBox[{"prule", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"val", "=", 
        RowBox[{"prule", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WriteString", "[", 
       RowBox[{"file", ",", 
        RowBox[{"param", "<>", "\"\<=\>\""}]}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"param", "="}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", 
        RowBox[{"cformat", "[", "val", "]"}]}], "]"}], ";"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"value", " ", "in", " ", "C", " ", "format"}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.837061387908916*^9, 3.8370613883302517`*^9}, {
  3.837061877947103*^9, 3.837061920467342*^9}, {3.8370621901345*^9, 
  3.837062199839724*^9}, {3.83706337763783*^9, 3.83706337770568*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"b784c8ce-823e-4824-b3f2-be764d5f40d2"],

Cell["\<\
Note the parameter list in Mathematica is a set of rules.  Here is an example.\
\>", "Text",
 CellChangeTimes->{{3.837062212580621*^9, 
  3.8370622611622953`*^9}},ExpressionUUID->"52389cc3-fc5d-4320-91eb-\
c959951348da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"paramlist", ":=", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<numsites\>\"", "\[Rule]", "numsegments"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"number", " ", "of", " ", "segments"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
     "\"\<targetdiscontinuity\>\"", "\[Rule]", "targetdiscontinuity"}], ",", 
     " ", 
     RowBox[{"(*", 
      RowBox[{
      "stop", " ", "if", " ", "discontinuity", " ", "reaches", " ", "below", 
       " ", "this", " ", "threshold"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<numeps\>\"", "\[Rule]", "numeps"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"number", " ", "of", " ", "DMRG", " ", "cycles"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<numstates\>\"", "\[Rule]", 
      RowBox[{"Total", "[", "basisdims", "]"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "total", " ", "number", " ", "of", " ", "basis", " ", "states"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<maxorder\>\"", "\[Rule]", 
      RowBox[{"Max", "[", 
       RowBox[{"apsimaxlen", ",", "adensmaxlen"}], "]"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "maximum", " ", "length", " ", "of", " ", "coefficients", " ", "in", 
       " ", "psi", " ", "or", " ", "density"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<loadfromfile\>\"", "\[Rule]", "loadfromfile"}]}], "  ", 
    RowBox[{"(*", 
     RowBox[{
     "whether", " ", "to", " ", "load", " ", "initial", " ", "state", " ", 
      "from", " ", "a", " ", "file"}], "*)"}], "\[IndentingNewLine]", "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.837062238348155*^9, 3.837062268526825*^9}, {
   3.837062317999941*^9, 3.837062392100576*^9}, {3.8370624447031527`*^9, 
   3.837062511695475*^9}, {3.8370631231198883`*^9, 3.837063129929926*^9}, {
   3.837065429669883*^9, 3.837065484308921*^9}, 3.837082952007243*^9},
 CellLabel->
  "In[456]:=",ExpressionUUID->"49293fbc-e354-47d2-b573-336c41596762"],

Cell["The parameters have to be set first.", "Text",
 CellChangeTimes->{{3.837062212580621*^9, 3.8370622611622953`*^9}, {
  3.837062757117094*^9, 
  3.837062763296031*^9}},ExpressionUUID->"4a5221fd-2e56-4930-bceb-\
cc1db0b91764"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numsegments", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"epsid", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"ID", " ", "for", " ", "the", " ", "DMRG", " ", "parameters"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"basisid", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"ID", " ", "for", " ", "the", " ", "basis"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadfromfile", "=", "False"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8370625386798973`*^9, 3.837062559138695*^9}, {
  3.837062787109603*^9, 3.837062862585457*^9}, {3.837065463959146*^9, 
  3.837065466699883*^9}, {3.8370829568848352`*^9, 3.837082957021957*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"4e2f2bb7-98b4-49b4-b10e-ce62bea9ba9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"basisparams", "=", 
  RowBox[{
   RowBox[{"Import", "[", "\"\<basistable.m\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"basisid", ",", "2"}], "]"}], "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"selected", " ", "basis"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.837062712448906*^9, 3.837062722251771*^9}, {
   3.837062909891375*^9, 3.837062965188366*^9}, 3.8370661395802317`*^9},
 CellLabel->
  "In[364]:=",ExpressionUUID->"e471124e-ff0a-4b2b-bfb2-093521676769"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.837062722952303*^9, 3.837062741271119*^9}, {
   3.837062914263528*^9, 3.837062938727482*^9}, 3.8370629742446327`*^9, 
   3.837065469770382*^9, 3.837066143657043*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"7cda60a2-b3ec-4038-a65b-1f3acb08033e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"basisdims", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"basisparams", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"basis", " ", "dimensions"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.83706294415177*^9, 3.837062971666318*^9}, {
   3.837063102950631*^9, 3.837063110509386*^9}, 3.8370661406802893`*^9},
 CellLabel->
  "In[365]:=",ExpressionUUID->"4cf57865-e0df-4570-988c-7e0d3c02496c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "10", ",", "20", ",", "35", ",", "50", ",", "30", ",", 
   "15", ",", "5", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.837062948426894*^9, 3.8370629748047123`*^9}, 
   3.837063111485778*^9, 3.837065470620194*^9, 3.837066144156939*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"595b47bd-6790-40ef-a220-85ac0faa6b96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sweepparams", "=", 
  RowBox[{
   RowBox[{"Import", "[", "\"\<epstable.m\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"epsid", ",", "2"}], "]"}], "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"selected", " ", "DMRG", " ", "parameters"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.837062980189086*^9, 3.837062998202876*^9}, {
  3.837066119359899*^9, 3.8370661416589823`*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"623bd3a8-42ee-49c6-abad-0ebb4b2af0d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"targetdisc\"\>", "\[Rule]", "1.`*^-12"}], ",", 
   RowBox[{"\<\"eps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.1`", ",", "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", 
      ",", "1.`*^-6"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxIters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"30", ",", "40", ",", "40", ",", "40", ",", "30", ",", "20"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"cutoffs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", 
      "1.`*^-14", ",", "1.`*^-14"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxDim\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"20", ",", "30", ",", "40", ",", "50", ",", "100", ",", "200"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"epsthresh\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.001`", ",", "0.0001`", ",", "0.00001`", ",", "1.`*^-6", ",", 
      "1.`*^-7", ",", "1.`*^-8"}], "}"}]}], ",", 
   RowBox[{"\<\"maxsweeps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "10", ",", "10", ",", "20", ",", "30", ",", "50"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"Noise\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    ",", 
   RowBox[{"\<\"minsweeps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}],
    ",", 
   RowBox[{"\<\"MinDim\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.837062998751464*^9, 3.837065471272409*^9, {3.837066121980591*^9, 
   3.83706614473367*^9}},
 CellLabel->
  "Out[366]=",ExpressionUUID->"fe29f851-121e-4d60-aa0a-ef9f9627fd77"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"targetdiscontinuity", "=", 
   RowBox[{"\"\<targetdisc\>\"", "/.", "sweepparams"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numeps", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"\"\<eps\>\"", "/.", "sweepparams"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.837063006067342*^9, 3.837063013024457*^9}, {
  3.8370630679722424`*^9, 3.837063068597929*^9}, {3.837066126008727*^9, 
  3.837066126783903*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"cc62d355-41bc-43d4-8f35-f06cf6a7c864"],

Cell[CellGroupData[{

Cell[BoxData["paramlist"], "Input",
 CellChangeTimes->{{3.837062568188826*^9, 3.837062568983707*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"bc06b858-3840-4231-bf99-26f73d899c59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"numsites\"\>", "\[Rule]", "20"}], ",", 
   RowBox[{"\<\"targetdiscontinuity\"\>", "\[Rule]", "1.`*^-12"}], ",", 
   RowBox[{"\<\"numeps\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"numstates\"\>", "\[Rule]", "172"}], ",", 
   RowBox[{"\<\"maxorder\"\>", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"loadfromfile\"\>", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.837062569448402*^9, {3.8370630477070312`*^9, 3.8370630721912537`*^9}, {
   3.837063115083145*^9, 3.837063134422676*^9}, {3.837065472524489*^9, 
   3.8370654873483458`*^9}, {3.8370661283566732`*^9, 3.837066148101214*^9}, 
   3.837082966573365*^9},
 CellLabel->
  "Out[461]=",ExpressionUUID->"93429559-9efe-48af-8ebc-f3196041a253"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Write lists", "Section",
 CellChangeTimes->{{3.837062613244605*^9, 
  3.837062623796208*^9}},ExpressionUUID->"0ad3b3cb-75d8-44e3-850e-\
1329e324ab39"],

Cell["Write a list of numbers for an Input Group.", "Text",
 CellChangeTimes->{{3.837063336026956*^9, 
  3.837063363938508*^9}},ExpressionUUID->"f91924d0-1f2b-4ec2-8747-\
a0c15fb877d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"outputVec", "[", 
    RowBox[{"file_OutputStream", ",", "name_String", ",", "vec_List"}], "]"}],
    ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "name"}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"Group", " ", "name"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<{\>\""}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"opening", " ", "brace"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"WriteString", "[", 
         RowBox[{"file", ",", 
          RowBox[{"cformat", "[", "#", "]"}], ",", "\"\< \>\""}], "]"}], 
        "&"}], "/@", "vec"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "list", " ", "of", " ", "horizontally", " ", "spaced", " ", 
        "numbers"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<\>\""}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"next", " ", "line"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<}\>\""}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"closing", " ", "brace"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<\>\""}], "]"}], ";"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"vertical", " ", "space"}], "*)"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837063369664735*^9, 3.837063467937667*^9}, {
  3.837064625918776*^9, 3.837064632354108*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"60753193-3036-4c92-93f9-56df2541d164"],

Cell["\<\
For example, we have the DMRG parameters for different cycles.\
\>", "Text",
 CellChangeTimes->{{3.837063336026956*^9, 3.837063363938508*^9}, {
  3.837063522673996*^9, 
  3.837063548188691*^9}},ExpressionUUID->"0d1fd978-19e0-4bb4-b1da-\
552692a065f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"epsparams", "=", 
  RowBox[{"Rest", "[", "sweepparams", "]"}]}]], "Input",
 CellChangeTimes->{{3.83706354907948*^9, 3.8370635857452297`*^9}, {
  3.837066157979494*^9, 3.837066162921063*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"9d906292-bb62-4a96-bad9-c64d4a5d6c74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"eps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.1`", ",", "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", 
      ",", "1.`*^-6"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxIters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"30", ",", "40", ",", "40", ",", "40", ",", "30", ",", "20"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"cutoffs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", "1.`*^-14", ",", 
      "1.`*^-14", ",", "1.`*^-14"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxDim\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"20", ",", "30", ",", "40", ",", "50", ",", "100", ",", "200"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"epsthresh\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.001`", ",", "0.0001`", ",", "0.00001`", ",", "1.`*^-6", ",", 
      "1.`*^-7", ",", "1.`*^-8"}], "}"}]}], ",", 
   RowBox[{"\<\"maxsweeps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "10", ",", "10", ",", "20", ",", "30", ",", "50"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"Noise\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    ",", 
   RowBox[{"\<\"minsweeps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}],
    ",", 
   RowBox[{"\<\"MinDim\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.837063551024458*^9, {3.8370635822305117`*^9, 3.83706358626752*^9}, 
   3.837066163369364*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"e81b012f-8ef8-4266-a1aa-467ff95a5051"]
}, Open  ]],

Cell["\<\
Acting \[OpenCurlyDoubleQuote]outputVec\[CloseCurlyDoubleQuote] on the second \
entry will produce
MaxIters
{
30  40  40  40  30  20
}
See the .txt file in the \[OpenCurlyDoubleQuote]Runs\[CloseCurlyDoubleQuote] \
directory for an actual example.\
\>", "Text",
 CellChangeTimes->{{3.837063336026956*^9, 3.837063363938508*^9}, {
  3.837063522673996*^9, 3.837063548188691*^9}, {3.837063593545079*^9, 
  3.837063770253223*^9}},ExpressionUUID->"10ccccea-cca6-41dd-934f-\
93b783dfe073"]
}, Closed]],

Cell[CellGroupData[{

Cell["Write matrices / arrays", "Section",
 CellChangeTimes->{{3.837062613244605*^9, 3.837062623796208*^9}, {
  3.837063811228619*^9, 
  3.837063832338914*^9}},ExpressionUUID->"56098d0d-4420-46a5-9ccb-\
5431a7351ee5"],

Cell["\<\
We write the matrices representing the local operators -- local Hamiltonians, \
psiL, psiR, psi(x), and density(x) -- calculated above.  We store the array \
rules, i.e., the position and magnitude of the nonzero elements.\
\>", "Text",
 CellChangeTimes->{{3.837063336026956*^9, 3.837063363938508*^9}, {
  3.8370638619018*^9, 3.837063920534895*^9}, {3.837063973089525*^9, 
  3.837063995369512*^9}, {3.83706403107341*^9, 3.837064074932589*^9}, {
  3.837064171154055*^9, 3.8370641751373577`*^9}, {3.837064216728538*^9, 
  3.8370642273060417`*^9}, {3.837064304761284*^9, 3.837064310786343*^9}, {
  3.837064361220851*^9, 
  3.837064376238909*^9}},ExpressionUUID->"15bb404c-b495-47e4-98bc-\
aa102f15eacc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"outputMat", "[", 
    RowBox[{"file_OutputStream", ",", "name_String", ",", "rules_List"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"numrules", "=", 
       RowBox[{"Length", "[", "rules", "]"}]}], "}"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"number", " ", "of", " ", "rules"}], ",", " ", 
       RowBox[{"i", ".", "e", "."}], ",", " ", 
       RowBox[{"nonzero", " ", "entries"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "name"}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"array", " ", "name"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<{\>\""}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"opening", " ", "brace"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", 
        RowBox[{"ToString", "[", "numrules", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"number", " ", "of", " ", "rules"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"writeRule", "[", 
         RowBox[{"file", ",", "#"}], "]"}], "&"}], "/@", "rules"}], ";", " ", 
      
      RowBox[{"(*", 
       RowBox[{"all", " ", "rules"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<}\>\""}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"closing", " ", "brace"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<\>\""}], "]"}], ";"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"vertical", " ", "space"}], "*)"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"writeRule", "[", 
    RowBox[{"file_OutputStream", ",", "line_Rule"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dat", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"List", "@@", "line"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"convert", ",", " ", 
       RowBox[{"e", ".", "g", "."}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "7"}], "}"}], "->", 
        RowBox[{"1.5", " ", "to", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "7", ",", "1.5"}], "}"}]}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"WriteString", "[", 
         RowBox[{"file", ",", 
          RowBox[{"cformat", "[", "#", "]"}], ",", "\"\< \>\""}], "]"}], 
        "&"}], "/@", "dat"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"write", " ", "3", " ", "7", " ", "1.5"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "\"\<\>\""}], "]"}], ";"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"next", " ", "line"}], "*)"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.83706438116632*^9, 3.8370644654305363`*^9}, {
  3.837064499451977*^9, 3.837064584459258*^9}, {3.837064685445259*^9, 
  3.8370646893599787`*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"53c6723d-01b5-408b-8e3a-55e1b6150981"],

Cell["\<\
For example, for if we have a matrix A = {{0,-1},{-1,2.4}}, we store
A
{
3
1  2  -1.
2  1  -1.
2  2  2.4
}
See the .txt file in the \[OpenCurlyDoubleQuote]Runs\[CloseCurlyDoubleQuote] \
directory for an actual example.\
\>", "Text",
 CellChangeTimes->{{3.837065015193284*^9, 3.837065150417644*^9}, {
  3.837065211916782*^9, 
  3.837065212131031*^9}},ExpressionUUID->"ba335f4c-2083-439d-8b92-\
29e42db4c29e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create the full input file", "Section",
 CellChangeTimes->{{3.837065251304421*^9, 
  3.837065258591449*^9}},ExpressionUUID->"72131152-9a2f-4e26-91a3-\
45c4193189d8"],

Cell["\<\
We store all parameters in \[OpenCurlyDoubleQuote]paramset\
\[CloseCurlyDoubleQuote] and then write them to the input file.\
\>", "Text",
 CellChangeTimes->{{3.8370659242191553`*^9, 
  3.837065943528009*^9}},ExpressionUUID->"cd9037ae-f9f7-432d-966e-\
ca3342581143"],

Cell[BoxData[
 RowBox[{
  RowBox[{"paramset", ":=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<parameters\>\"", "\[Rule]", 
      RowBox[{"Join", "[", 
       RowBox[{"paramlist", ",", 
        RowBox[{"Rest", "[", "saveparams", "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{"loadfromfile", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<loadfromfilename\>\"", "\[Rule]", "loadfromfilename"}], "}"}],
           ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<vecparams\>\"", "\[Rule]", 
      RowBox[{"Join", "[", 
       RowBox[{"epsparams", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<qns\>\"", "\[Rule]", "localqn"}], ",", 
          RowBox[{"\"\<initialvec\>\"", "\[Rule]", "equispacedvec"}]}], 
         "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<localmats\>\"", "\[Rule]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<psiL\>\"", "\[Rule]", "psiL"}], ",", 
          RowBox[{"\"\<psiR\>\"", "\[Rule]", "psiR"}], ",", 
          RowBox[{"\"\<psi\>\"", "\[Rule]", "psicoef"}], ",", 
          RowBox[{"\"\<n\>\"", "\[Rule]", "denscoef"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<H\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], "\[Rule]", 
           RowBox[{"Hsite", "[", "#", "]"}]}], "&"}], "/@", 
         RowBox[{"Range", "[", "numsegments", "]"}]}]}], "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837065366950699*^9, 3.837065369315414*^9}, {
  3.837065588931046*^9, 3.837065640016821*^9}, {3.837065768705847*^9, 
  3.837065769924123*^9}, {3.837067489213256*^9, 3.837067491685858*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"4c43c260-5d28-4a3f-910c-8eb5e0985df5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"paramset", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.8370659758813763`*^9, 3.837066028764215*^9}, {
  3.837066177421097*^9, 3.837066179202929*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"34ee1980-ee44-468c-93b4-935bf85228f7"],

Cell[BoxData[
 TagBox[
  RowBox[{"\<\"parameters\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"numsites\"\>", "\[Rule]", "20"}], ",", 
     RowBox[{"\<\"targetdiscontinuity\"\>", "\[Rule]", "1.`*^-12"}], ",", 
     RowBox[{"\<\"numeps\"\>", "\[Rule]", "6"}], ",", 
     RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], ",", 
     RowBox[{"\<\"store_local_history_eps\"\>", "\[Rule]", "False"}], ",", 
     RowBox[{"\<\"savethresh\"\>", "\[Rule]", "1.`*^-8"}]}], "}"}]}],
  Short]], "Output",
 CellChangeTimes->{
  3.837065982339613*^9, {3.83706601508657*^9, 3.837066029116482*^9}, 
   3.8370661796341343`*^9, 3.837067498553493*^9},
 CellLabel->
  "Out[383]//Short=",ExpressionUUID->"830ce0ed-fb82-418e-a5e6-e69d6796c536"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"paramset", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.8370660344699697`*^9, 3.837066066671886*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"a712c0b7-7708-447b-9a4a-daacf412ba08"],

Cell[BoxData[
 TagBox[
  RowBox[{"\<\"vecparams\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"eps\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "0.1`", ",", "0.01`", ",", "0.001`", ",", "0.0001`", ",", "0.00001`", 
        ",", "1.`*^-6"}], "}"}]}], ",", 
     RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
     RowBox[{"\<\"initialvec\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", 
        "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", 
        "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1"}], "}"}]}]}], 
    "}"}]}],
  Short]], "Output",
 CellChangeTimes->{3.837066036588626*^9, 3.837066067066448*^9, 
  3.83706617236744*^9},
 CellLabel->
  "Out[371]//Short=",ExpressionUUID->"d5b56432-ec0f-4a40-b6a2-bef01479d9f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"paramset", "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", "0.7"}], "]"}]], "Input",
 CellChangeTimes->{{3.837066051630292*^9, 3.837066058180151*^9}, {
  3.8370663263071547`*^9, 3.837066362331048*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"7c1e2af3-a886-44e1-ab2d-dca171a2ff4a"],

Cell[BoxData[
 TagBox[
  RowBox[{"\<\"localmats\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"psiL\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["SparseArray",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  RasterBox[CompressedData["
1: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
GJ2Tf417X+b6/83/BdfmY50=
                   "], {{0, 0}, {29, 29}}, {0, 1}], 
                  AspectRatio -> 1, Axes -> False, Frame -> False, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
                 GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4729", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  RasterBox[CompressedData["
1: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
GJ2Tf417X+b6/83/BdfmY50=
                   "], {{0, 0}, {29, 29}}, {0, 1}], 
                  AspectRatio -> 1, Axes -> False, Frame -> False, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
                 GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4729", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.1598499188750676`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "4.47213595499958`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "7.745966692414834`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "10.000000000000533`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "11.8321595661971`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxN0T1IFQAUBtCrlb7sZRlWEi2JhUnooIQEQVioQ0sPkUgCk5SQyH8rCBIJ
J0uRBpck9E2SIU2BISLSoBJOQSEiTSkiDVEREh5o8cJZ7/dd7pmmttSDjIiY
iv+zn1wKKOQCV6jjHk8YJs17llnnJyctusRt+pjgIxskMyPKSNHDKDOskbEv
oogaWnnONN/IV6iaR0yySu4BnegkzWcSWbK5zxgrZGZHVNDCKIvsUJqIaGSE
BX5RfDDiFoPM8oPCHHczQJp51vnH6UPyuEkvL3nHCtskkxEl1NLCM8aZY40d
Th2OqKSebkaY5hNb5HhEMdXcpZ/XzLLKXwqORFykjk6GecsymySORpzjGk10
0McQY0zxgSW+ssEfsvMiTnCWCq6S4g7tPOUFr3jDDIt84Tu/yToWcZwizlNK
OZVcpooarnODehpopJlW2uigix4e8niPXWZ/Wt4=
          "], CompressedData["
1:eJxTTMoPSmJiYGCoFGJgYATSTMwsrGzsHJxc3Dy8fPz4WQKCQsIiomLiEpJS
0jKycvIKikrKQ1FMRVVNXUNTS1tHV0/fwNDI2MTUzNzC0sraxtbO3sHRydnF
1W1UyaiSQanE3cPTy9vH188/IDAoOCQ0LDwiMio6JjYuPiExKTklNS09IzMr
Oyc3L7+gsKi4pLSsvGJUx6iOUR2jOkZ1jOoYrDoqq6prauvqGxqbmlta29o7
Oru6e3r7+idMnDR5ytRpo7KjsqOyo7KjskNRdvqMmbNmz5k7b/6ChYsWL1k6
yh1y3GXLV6xcRR1i9RoYBADhOJ2W
          "]}, CompressedData["
1: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
/UqBxtMSySOoxPc1iBIsQLPPoSrHGtuBUb1R8aJvHOr43o6XTx4E5qq5l5zJ
vShWuuGs/L5J1vxx2W5QVo20MjFh2/UpKD+ySZ52fxxJK8MD+0u7gJ699gyT
+wvQjxb/W+vvhPTKsLzu0fegs8zDaFVcLi66zlQ3ZaYhM5P6tv1GCOpUpJo1
3GyGoP2Djm9zvZGuo/3gbm4MVgUmDx66W4KXSiIXz52gUHuXhupkTj6YRY1e
MrhM4Y77JrdpVxk4aOlUw7YxBYgH289x8GWA2458m29OmaB1RkMZ/ivAuvzI
4z35iMJkEW+BbA983LLitMGNRggvO3P/nG8lVElf3ntv5AfSPUyFvarSgGYi
soGT2QQZ6zbdtjvI4lvbk+7BEIRj8X+VeISrUUij1WJqlgFB3o0t1JV88OOe
WSb8sAAIs0vPV+4CoLek3V/5mjWnNY5fcTz1Ck9xix3C+BC49PzIxBmrJHSY
jI79XpWHEnclyk/xJaFi66xOh3YzEvTaRuP8h8j7yEmqaTgGGAd1qsNk/UCo
PMDE6lQi0sqX7lxJiEV+BVFzTf9asNVPhoiGRKALtdy1KCvFZJWQ0abrDUBU
OoVeORyKXsGc0n8ftKGfRvzNyZARoOk9c/OwjUPb4/xPPAPycZ+e4wvVijxw
kxP0WOroQnJMIvMUbyL6KKvu+PW+Cway7t41W1mFpucvP9ftG8Kic09jon+M
AN3WVSOm0gfVPjC3rWXG4LZOg2FxvzQk5fbXHVGKwVv3LII647KBPulJf3LU
HgRf+hkqXImH/yY8VDJyMoB6JCv13tEPSMG7Q2W27qjm3xR4+R3ClagnsVOP
vmL4J4mMex3hSHOtundk52O89acykfkCkf3Zfa1w0SCo03M6aTqTir37/faL
vowEpU1JwSLHEPwixY9UDhSDPZfZc0O1eHy77smC4SpW3rBd2yF49AYwcnx8
r/R9A06Bnf17f1eh9Zj1R0tGMxbdWzdxhKBg6anAWs31RWATstA65FMFl1Zo
yBjotoCx+ss1GSXRSHCLY+h6FaQPf15/iuM2mpm7q4jM2oPbZMaH/Q1vgXJA
CyNrJ1Yu/foTscISGdUp7W/kXiDxQtQmzi8KeCsGg7uks/FbhW35nmcf8FLt
90fxyiy+Xnu+xGG3BX56MBD1PiMNzYYcDRIVUoHGle3ibeyOggc1gviDCkCu
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
/x+paKQG
         "]}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}], ",", 
     RowBox[{"\<\"H20\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["SparseArray",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  RasterBox[CompressedData["
1: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
tv8Xc/ty9w==
                   "], {{0, 0}, {29, 29}}, {0, 1}], AspectRatio -> 
                  1, Axes -> False, Frame -> False, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
                 GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5395", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  RasterBox[CompressedData["
1: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
tv8Xc/ty9w==
                   "], {{0, 0}, {29, 29}}, {0, 1}], AspectRatio -> 
                  1, Axes -> False, Frame -> False, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
                 GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5395", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"172", ",", "172"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.18236208761492698`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "246.74011002723304`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "173.20508075688784`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.031973986341044`*^-12", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "20.973140123229342`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       SparseArray[Automatic, {172, 172}, 0., {1, {CompressedData["
1:eJxF0ktIFFAUBuBjqZOa2ThKJFEEhUkkhAkGQWS4KRepUKvQfGwMG4QgCUoi
wgLDCqKNQ0GbHoiCuUmEhKBEpFUyoRtpIdEDISiGWdTXqgvf9h7+/5y93en2
SwURMRH/XyFb2Mp2athHPU0008pZuujnMrcZZ4q3ZPn270MDqjjAMc7QyxCj
POEV71llg8JNEbWcYoB7TLNMjl2bI47TzS2escgPkgIc4RxXyfCGzxQXRdTR
SpoHzJAlz+7iiBP0MsILlvjD4UREDw95R46DijrPGPP8ZH+J2dxhlu/sKY1o
4yYzrLOzLOI015hkjZTSW7jCc1YoL5eVQZ7ykcS2iKNcJMMHCioiGujjEQvk
OWSJndxnkiW+UpLUMS30cIPHzLFCjh2VEY10MMgYEyzyhURKXk5ygWEyzPKJ
31RXuR8aaKaNLtJc5y7jvOQ1C2RZ5xd5ojqiiFIqSJLiL95IWiU=
          
          "], CompressedData["
1:eJxTTMoPSmJiYGAQFmVgYATSTMwsrEDEBMNs7BycXNw8vHz8tGMJCAoJi4iK
iUtISknLyMrJKygqKY+KDZyYiqqauoamlraOrp6+gaGRsYmpmbmFpZW1ja2d
vYOjk7OLq9uoklElo0pGlQxuJe4enl7ePr5+/gGBQcEhoWHhEZFR0TGxcfEJ
iUnJKalp6RmZWdk5uXn5BYVFxSWlZeUVozpGdYzqGNUxqmNUx6iOUR2jOgZa
R2VVdU1tXX1DY1NzS2tbe0dnV3dPb1//hImTJk+ZOm1UdlR2VJbWstNnzJw1
e87cefMXLFy0eMnS4cddtnzFylXYiNVrVq8BAFhwSvI=
          "]}, CompressedData["
1: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
szIttPOibPp5ccrnC/nfxgtPluotraj/ARyI994=
         "]}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}]}], "}"}]}],
  Short[#, 0.7]& ]], "Output",
 CellChangeTimes->{{3.8370660548360167`*^9, 3.8370660589772673`*^9}, {
  3.837066330898808*^9, 3.8370663633783083`*^9}},
 CellLabel->
  "Out[377]//Short=",ExpressionUUID->"036a85fd-812e-4498-84e6-fbb6edd57466"]
}, Open  ]],

Cell["\<\
Here is a routine for creating the input text file with all the parameters.\
\>", "Text",
 CellChangeTimes->{{3.837066414906057*^9, 
  3.8370664585990334`*^9}},ExpressionUUID->"03c53880-423b-41c5-981c-\
f8a02aaab49e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"createInputFile", "[", 
    RowBox[{"filename_String", ",", "paramset_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"file", ",", "\[IndentingNewLine]", 
       RowBox[{"parameters", "=", 
        RowBox[{"\"\<parameters\>\"", "/.", "paramset"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{"scalar", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"vecparams", "=", 
        RowBox[{"\"\<vecparams\>\"", "/.", "paramset"}]}], ",", " ", 
       RowBox[{"(*", "lists", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"localmats", "=", 
        RowBox[{"\"\<localmats\>\"", "/.", "paramset"}]}]}], "}"}], ",", " ", 
     
     RowBox[{"(*", "matrices", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"file", "=", 
       RowBox[{"OpenWrite", "[", "filename", "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "create", " ", "file", " ", "and", " ", "open", " ", "for", " ", 
        "writing"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"outputParams", "[", 
       RowBox[{"file", ",", "\"\<parameters\>\"", ",", "parameters"}], "]"}], 
      ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "write", " ", "all", " ", "scalar", " ", "parameters", " ", "inside", 
        " ", "the", " ", "group", " ", "\"\<parameters\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"outputVec", "[", 
         RowBox[{"file", ",", "#1", ",", "#2"}], "]"}], "&"}], "@@@", 
       "vecparams"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "write", " ", "all", " ", "lists", " ", "with", " ", "their", " ", 
        "own", " ", "names"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"outputMat", "[", 
         RowBox[{"file", ",", "#1", ",", 
          RowBox[{"Most", "@", 
           RowBox[{"ArrayRules", "@", 
            RowBox[{"Transpose", "[", "#2", "]"}]}]}]}], "]"}], "&"}], "@@@", 
       "localmats"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "write", " ", "all", " ", "nonzero", " ", "array", " ", "elements"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "file", "]"}], ";"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"close", " ", "file"}], "*)"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837065276439561*^9, 3.83706531586045*^9}, {
  3.837066472286181*^9, 3.8370666374333467`*^9}},
 CellLabel->
  "In[378]:=",ExpressionUUID->"bfb41606-a1ea-4028-a2c6-d1cd3453f02d"],

Cell["\<\
See the .txt file in the \[OpenCurlyDoubleQuote]Runs\[CloseCurlyDoubleQuote] \
directory for a full example.\
\>", "Text",
 CellChangeTimes->{{3.837066414906057*^9, 3.8370664585990334`*^9}, {
  3.837066663390171*^9, 
  3.837066669173115*^9}},ExpressionUUID->"ad611e58-0317-4402-82b8-\
c6883591c374"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Post processing", "Chapter",
 CellChangeTimes->{{3.837006360828476*^9, 3.8370063666851397`*^9}, {
  3.8370108669220467`*^9, 3.837010868538576*^9}, {3.837011109806264*^9, 
  3.837011112046528*^9}, {3.837017754214486*^9, 3.837017789728039*^9}, {
  3.837017925936657*^9, 3.837017934560561*^9}, {3.837066823174198*^9, 
  3.8370668331612997`*^9}},ExpressionUUID->"66cb1463-a7b3-4205-8e51-\
3558b23eb56a"],

Cell["\<\
It is useful to do some additional processing after we have the DMRG result \
to save later effort and memory usage.\
\>", "Text",
 CellChangeTimes->{{3.8370681177477303`*^9, 
  3.837068182495969*^9}},ExpressionUUID->"6f2991cb-9daf-4fdf-95c2-\
1637905ac92e"],

Cell[CellGroupData[{

Cell["Local distribution among basis states", "Section",
 CellChangeTimes->{{3.837068198707512*^9, 3.83706821626794*^9}, {
  3.8370697103294907`*^9, 
  3.8370697333719883`*^9}},ExpressionUUID->"b9d4f98f-d410-4495-81e7-\
ce5f667992f2"],

Cell["\<\
If we store the reduced density matrices describing each segment, then one \
can easily compute the average distribution among the basis states.
Here is an example.  Suppose we have imported the density matrices from  \
\[OpenCurlyDoubleQuote]...localdms.m\[CloseCurlyDoubleQuote].  Here we just \
make these up.\
\>", "Text",
 CellChangeTimes->{{3.837068240104027*^9, 3.837068303951494*^9}, {
  3.837069346157667*^9, 3.837069346416031*^9}, {3.8370693894519987`*^9, 
  3.837069408888604*^9}, {3.837069498577433*^9, 3.837069500155972*^9}, {
  3.83719353882544*^9, 
  3.8371935391215477`*^9}},ExpressionUUID->"5d97056e-38cb-4249-91b8-\
69fb4c131b2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"localdms", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "+", 
        RowBox[{"Transpose", "[", "#", "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"Tr", "[", "#", "]"}]}], ")"}]}], "&"}], "/@", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"numsegments", ",", 
         RowBox[{"Total", "[", "basisdims", "]"}], ",", 
         RowBox[{"Total", "[", "basisdims", "]"}]}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8370685610212*^9, 3.837068594496986*^9}, {
  3.837068740282483*^9, 3.837068763260108*^9}, {3.837068794241943*^9, 
  3.837068829698469*^9}, {3.837068910491899*^9, 3.8370689274392776`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"3d033be6-d848-47b5-8414-def9d2199539"],

Cell["\<\
We average the diagonal elements over all segments to get the average weights.\
\>", "Text",
 CellChangeTimes->{{3.837068958106908*^9, 
  3.837068980012204*^9}},ExpressionUUID->"08d796f7-2341-4b77-8b23-\
86a5d09e79c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"Mean", "[", 
     RowBox[{"Diagonal", "/@", "localdms"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"weights", "//", "Short"}]}], "Input",
 CellChangeTimes->{{3.837068946014194*^9, 3.837068947036538*^9}, {
  3.8370689835022*^9, 3.8370690126551237`*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"b4c11f20-5197-408e-9817-23c832265795"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
   "0.004424612113311343`", ",", "0.006372550671386428`", ",", 
    "0.005451493439423974`", ",", 
    RowBox[{"\[LeftSkeleton]", "166", "\[RightSkeleton]"}], ",", 
    "0.005599463684689547`", ",", "0.004678210866299206`", ",", 
    "0.006179183564016414`"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.837068942980131*^9, 3.837068947594865*^9}, {
  3.837068986144664*^9, 3.8370690130858583`*^9}},
 CellLabel->
  "Out[420]//Short=",ExpressionUUID->"abcfc3b8-3c71-49bd-85f0-310582f41d58"]
}, Open  ]],

Cell["\<\
Then we partition the weights in the different particle-number sectors.\
\>", "Text",
 CellChangeTimes->{{3.837069165238653*^9, 
  3.837069189851057*^9}},ExpressionUUID->"a422fe90-90f0-4caa-ba4e-\
9cce8e180b93"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"varPartition", "[", 
     RowBox[{"l_", ",", "p_"}], "]"}], ":=", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "[", 
        RowBox[{"[", 
         RowBox[{"#", ";;", "#2"}], "]"}], "]"}], "&"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "0", "}"}], "~", "Join", "~", 
            RowBox[{"Most", "@", "#"}]}], "+", "1"}], ",", "#"}], "}"}], 
        "&"}], "@", 
       RowBox[{"Accumulate", "@", "p"}]}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "routine", " ", "for", " ", "partitioning", " ", "into", " ", "unequal", 
    " ", "lengths"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.837069201454591*^9, 3.837069253521895*^9}, {
  3.8370695873751163`*^9, 3.837069590943522*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"5c07c2df-96aa-4487-9613-572d7020324a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"varPartition", "[", 
    RowBox[{"weights", ",", "basisdims"}], "]"}], ",", "2"}], "]"}]], "Input",\

 CellChangeTimes->{{3.8370692744338827`*^9, 3.837069288051046*^9}, 
   3.83706959679817*^9},
 CellLabel->
  "In[432]:=",ExpressionUUID->"6a2c8197-438f-4d4c-ad73-7784ec824323"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "0.004424612113311343`", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.006372550671386428`", ",", "0.005451493439423974`", ",", 
      "0.006668319175941267`", ",", "0.005950149842598346`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.004678210866299206`", ",", "0.006179183564016414`"}], "}"}]}],
    "}"}],
  Short[#, 2]& ]], "Output",
 CellChangeTimes->{{3.837069278539806*^9, 3.837069288365456*^9}, 
   3.837069597265039*^9},
 CellLabel->
  "Out[432]//Short=",ExpressionUUID->"e47a4764-e909-45d7-ba4b-27cff80299a9"]
}, Open  ]],

Cell["\<\
We append these weights to the \[OpenCurlyDoubleQuote]finalmeas.m\
\[CloseCurlyDoubleQuote] file for later use.  One may also choose to delete \
the \[OpenCurlyDoubleQuote]localdms.m\[CloseCurlyDoubleQuote] file if the \
density matrices are no longer required.\
\>", "Text",
 CellChangeTimes->{{3.837069165238653*^9, 3.837069189851057*^9}, {
  3.837069357667252*^9, 3.837069375000231*^9}, {3.837069412639584*^9, 
  3.837069536326676*^9}},ExpressionUUID->"b95b2c38-f25e-4f9e-b6ae-\
fe1cc345e2f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Compressed storage", "Section",
 CellChangeTimes->{{3.837068198707512*^9, 3.83706821626794*^9}, {
  3.8370696714796753`*^9, 
  3.837069693361115*^9}},ExpressionUUID->"93c2f511-a507-4635-88cc-\
d0e050860734"],

Cell["\<\
The DMRG routine optionally outputs the MPS in Mathematica format and \
polynomial coefficients of the single-particle / density-density \
correlations.  These are stored as \[OpenCurlyDoubleQuote].m\
\[CloseCurlyDoubleQuote] files by default.  For large array dimensions, the \
file sizes can be large.  To save memory, one can compress these outputs.  \
\>", "Text",
 CellChangeTimes->{{3.8370697448195553`*^9, 3.837069745180831*^9}, {
  3.8370697928154173`*^9, 3.837069971267519*^9}, {3.837070004106848*^9, 
  3.8370700073561277`*^9}},ExpressionUUID->"d7a5d193-cbb6-4abf-8983-\
48f86fb084fc"],

Cell["\<\
One option is to compress them to a zip file, deleting the originals.  \
Alternatively, one can use Mathematica\[CloseCurlyQuote]s compression \
algorithm.  Here is an example.
//
psi=Import[name<>\[CloseCurlyDoubleQuote]_psi_MMAformat.m\
\[CloseCurlyDoubleQuote]];  (*Import array from the .m file*)
DeleteFile[name<>\[CloseCurlyDoubleQuote]_psi_MMAformat.m\
\[CloseCurlyDoubleQuote]];  (*Delete the .m file*)
Export[name<>\[CloseCurlyDoubleQuote]_psi_MMAformat.dat\
\[CloseCurlyDoubleQuote],Compress@psi,\[CloseCurlyDoubleQuote]String\
\[CloseCurlyDoubleQuote]];  (*Compress and store as a string*)
//
This way one can (often) save more memory, but, on the downside, the format \
is only readable by Mathematica.

One may also choose to delete the input (.txt) and output log (.out) files to \
save memory.\
\>", "Text",
 CellChangeTimes->{{3.837070033649337*^9, 3.8370700870524054`*^9}, {
  3.837070124321809*^9, 3.837070371052989*^9}, {3.837083328744554*^9, 
  3.837083365620323*^9}},ExpressionUUID->"a22c9d37-a302-4555-a0ff-\
16ce93d236a3"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1234, 665},
WindowMargins->{{0, Automatic}, {-73, Automatic}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e73e5e04-239a-4ac7-9b4a-5656a15351cd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 220, 4, 98, "Title",ExpressionUUID->"4181abd9-53fc-435f-812f-e7c5e5fa50ae"],
Cell[CellGroupData[{
Cell[825, 30, 226, 4, 69, "Chapter",ExpressionUUID->"a5b07424-39f9-4b4f-b7c8-2c764e27c424"],
Cell[1054, 36, 1625, 49, 59, "Text",ExpressionUUID->"5effc967-4568-46e2-8210-9b931397e275"],
Cell[CellGroupData[{
Cell[2704, 89, 165, 3, 67, "Section",ExpressionUUID->"f53c4366-9ab9-4fbb-b9f5-94292b5f9599"],
Cell[2872, 94, 808, 25, 35, "Text",ExpressionUUID->"5c1a3c91-47ed-4040-9d8c-4bc3ac78e1e4"],
Cell[3683, 121, 1636, 47, 94, "Input",ExpressionUUID->"685b1810-df65-4b85-a201-a56e43fe6286"],
Cell[CellGroupData[{
Cell[5344, 172, 166, 3, 30, "Input",ExpressionUUID->"bf090170-3f59-4e68-84f3-2dfa58848aa3"],
Cell[5513, 177, 912, 25, 34, "Output",ExpressionUUID->"322bb47c-4343-43ad-b368-600d70becd52"]
}, Open  ]],
Cell[6440, 205, 571, 15, 35, "Text",ExpressionUUID->"707d70be-4dcb-4219-bb66-6088afad65e5"],
Cell[7014, 222, 475, 12, 30, "Input",ExpressionUUID->"c4aa536a-36ea-4f6d-9875-797a5de21f8b"],
Cell[CellGroupData[{
Cell[7514, 238, 321, 6, 30, "Input",ExpressionUUID->"7a0d4deb-8607-4406-9a7f-28b1b3c74a93"],
Cell[7838, 246, 946, 24, 37, "Output",ExpressionUUID->"f9f8d120-4e2e-4294-b9ff-1e6461b091d9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8833, 276, 155, 3, 53, "Section",ExpressionUUID->"7e0d547b-9540-48e1-8b1e-a6756cccbb69"],
Cell[8991, 281, 1725, 53, 62, "Text",ExpressionUUID->"8b46e874-7390-469c-a563-88d8dfa3bb75"],
Cell[CellGroupData[{
Cell[10741, 338, 630, 15, 30, "Input",ExpressionUUID->"ed964fe7-8b66-469e-b005-9d17160e011e"],
Cell[11374, 355, 13747, 264, 63, "Output",ExpressionUUID->"5ebf2048-136a-4e0b-9d59-8730395a5277"]
}, Open  ]],
Cell[25136, 622, 642, 15, 35, "Text",ExpressionUUID->"adb42309-1613-4ba7-ad0a-d62dadc6dba7"],
Cell[CellGroupData[{
Cell[25803, 641, 498, 13, 30, "Input",ExpressionUUID->"a5844572-8958-4782-aee6-4c2ada767e88"],
Cell[26304, 656, 425, 9, 37, "Output",ExpressionUUID->"9b4ccd58-1cb1-4bca-b6d5-cdd4507a450e"]
}, Open  ]],
Cell[26744, 668, 235, 4, 35, "Text",ExpressionUUID->"92be9627-dbce-404e-a8ac-98212ec5e613"],
Cell[26982, 674, 369, 9, 52, "Input",ExpressionUUID->"ea877032-36c1-4a7b-9516-391a05353a22"],
Cell[27354, 685, 586, 11, 58, "Text",ExpressionUUID->"89f8a051-4331-400f-a112-10cf24820c4e"],
Cell[27943, 698, 1910, 50, 94, "Input",ExpressionUUID->"8f958300-7af5-4ff4-8f98-a336d697d22b"],
Cell[29856, 750, 664, 18, 35, "Text",ExpressionUUID->"d815f3ea-f438-4eee-898a-3002e41444d9"],
Cell[CellGroupData[{
Cell[30545, 772, 749, 18, 52, "Input",ExpressionUUID->"390df63b-51df-47ab-bb69-c336a66e88fe"],
Cell[31297, 792, 2842, 53, 196, "Output",ExpressionUUID->"6ace8532-a072-492c-86b5-ffaf29688c80"]
}, Open  ]],
Cell[34154, 848, 553, 18, 35, "Text",ExpressionUUID->"dbe08d7d-15cf-4ad5-a149-c3a36c8ff63b"],
Cell[CellGroupData[{
Cell[34732, 870, 536, 15, 52, "Input",ExpressionUUID->"3395635b-ba8b-4412-b97d-79e2b6f7f388"],
Cell[35271, 887, 286, 6, 34, "Output",ExpressionUUID->"df43827a-077a-498d-8cd5-96f297ff7c73"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[35606, 899, 170, 3, 53, "Section",ExpressionUUID->"36690819-5de1-4fc2-9583-283e51416688"],
Cell[35779, 904, 2713, 74, 153, "Text",ExpressionUUID->"00319a04-bba3-4100-8827-6267102af115"],
Cell[CellGroupData[{
Cell[38517, 982, 2793, 75, 136, "Input",ExpressionUUID->"e58affeb-d0a0-4277-88a6-5f30359fbcba"],
Cell[41313, 1059, 16447, 325, 63, "Output",ExpressionUUID->"164b241c-e2f0-45c6-ba0d-bf302f3285b7"]
}, Open  ]],
Cell[57775, 1387, 849, 24, 35, "Text",ExpressionUUID->"633df9ae-4f73-4fd1-b5ca-6725fb0ff8b9"],
Cell[CellGroupData[{
Cell[58649, 1415, 472, 11, 52, "Input",ExpressionUUID->"550fdd62-fc36-4c58-a505-3cf9a58fa55b"],
Cell[59124, 1428, 2379, 47, 196, "Output",ExpressionUUID->"bb5ca085-b8be-4f5e-ba32-bdaaf227322c"]
}, Open  ]],
Cell[61518, 1478, 553, 18, 35, "Text",ExpressionUUID->"ec904e3e-f8af-44c4-9fd5-d7d0d0df7b67"],
Cell[CellGroupData[{
Cell[62096, 1500, 498, 11, 52, "Input",ExpressionUUID->"128d947b-7a3e-4fa4-97e3-f69c5be6a864"],
Cell[62597, 1513, 573, 9, 34, "Output",ExpressionUUID->"975d993b-6548-4ea9-a507-6363dad6bd11"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[63219, 1528, 223, 4, 53, "Section",ExpressionUUID->"fae098f6-e98b-4be9-9566-c0ac4a6f05ff"],
Cell[63445, 1534, 1855, 54, 150, "Text",ExpressionUUID->"2ede458d-a5c8-4f71-8c80-1c11203d54c3"],
Cell[CellGroupData[{
Cell[65325, 1592, 4423, 117, 241, "Input",ExpressionUUID->"126e56cc-f39c-4c6d-93c9-1cb288507951"],
Cell[69751, 1711, 15618, 303, 63, "Output",ExpressionUUID->"85927b76-36a2-4a3d-ba2b-da35e898bf47"]
}, Open  ]],
Cell[85384, 2017, 281, 4, 35, "Text",ExpressionUUID->"39b8b135-ddb0-4a94-a42f-c3c0c3dd05df"],
Cell[85668, 2023, 363, 8, 52, "Input",ExpressionUUID->"98674303-4fe9-42d4-8697-d5693780caf1"],
Cell[86034, 2033, 728, 20, 35, "Text",ExpressionUUID->"d844c5f4-9963-4252-bd6e-53527840ae39"],
Cell[CellGroupData[{
Cell[86787, 2057, 554, 14, 52, "Input",ExpressionUUID->"4ae6c7d5-88ed-4a08-97d5-14c53ce63ecc"],
Cell[87344, 2073, 3359, 59, 196, "Output",ExpressionUUID->"86fe8139-42b9-4d4c-a528-ad2513086c66"]
}, Open  ]],
Cell[90718, 2135, 491, 16, 35, "Text",ExpressionUUID->"8940c405-b923-4f0a-b325-80c73229e6a0"],
Cell[CellGroupData[{
Cell[91234, 2155, 585, 15, 52, "Input",ExpressionUUID->"360d34f9-065d-4aa4-a5c8-7355763eaf2b"],
Cell[91822, 2172, 305, 5, 34, "Output",ExpressionUUID->"615e11d4-ccb4-4d85-8378-3b885f0926a9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[92176, 2183, 260, 4, 53, "Section",ExpressionUUID->"b8eb7fc9-ae7c-478a-9e60-a35addf8f41c"],
Cell[92439, 2189, 1135, 33, 58, "Text",ExpressionUUID->"a6b322b0-c0ab-4afe-9e90-65cc41f6ac93"],
Cell[93577, 2224, 3660, 91, 199, "Input",ExpressionUUID->"7dd87c3b-63dc-46b7-a828-d1a1c8e13cde"],
Cell[97240, 2317, 579, 15, 35, "Text",ExpressionUUID->"5bd5c028-576f-4e48-aeb0-3016dcc14fdb"],
Cell[CellGroupData[{
Cell[97844, 2336, 596, 10, 30, "Input",ExpressionUUID->"6f0714a3-2054-41e4-936c-bb214ca99587"],
Cell[98443, 2348, 1888, 36, 77, "Output",ExpressionUUID->"9b66cc96-adde-4e2e-9667-07a784bab268"]
}, Open  ]],
Cell[100346, 2387, 325, 6, 35, "Text",ExpressionUUID->"b6b7c22f-4ee0-4ece-8634-870db0dfcfed"],
Cell[CellGroupData[{
Cell[100696, 2397, 1044, 27, 30, "Input",ExpressionUUID->"72e04b94-6aec-404d-a127-75481487c28f"],
Cell[101743, 2426, 1938, 48, 56, "Output",ExpressionUUID->"4699f346-7d02-4cc6-9c02-db6ba9d1ca9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103718, 2479, 1389, 38, 52, "Input",ExpressionUUID->"e165c44a-ca28-4038-9bdd-68c4cc004437"],
Cell[105110, 2519, 128267, 2116, 302, "Output",ExpressionUUID->"045ca93d-a110-446d-badb-3cf7a20ef60a"]
}, Open  ]],
Cell[233392, 4638, 205, 3, 30, "Input",ExpressionUUID->"8c7a7efe-a185-4712-bcaa-eaab869520c7"],
Cell[233600, 4643, 491, 16, 35, "Text",ExpressionUUID->"13e6a63b-28d2-4a8c-8810-d7ea54a0315d"],
Cell[234094, 4661, 1015, 25, 94, "Input",ExpressionUUID->"7d956711-67b8-4bad-94c5-3d34dfcb899f"],
Cell[CellGroupData[{
Cell[235134, 4690, 250, 6, 30, "Input",ExpressionUUID->"7dc667a1-3381-4abc-8041-315d0236f632"],
Cell[235387, 4698, 481, 8, 34, "Output",ExpressionUUID->"62164cbc-f083-45ce-aeb5-9346c06b952d"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[235929, 4713, 215, 4, 58, "Chapter",ExpressionUUID->"85a2500d-d2a8-4113-b945-a5ded897ed67"],
Cell[236147, 4719, 370, 6, 35, "Text",ExpressionUUID->"8dfc16a4-c5ae-4c4a-a679-bc631898c325"],
Cell[CellGroupData[{
Cell[236542, 4729, 159, 3, 67, "Section",ExpressionUUID->"ffd3c8c4-23dc-4375-be35-c8fdef7d5dc1"],
Cell[236704, 4734, 1791, 45, 62, "Text",ExpressionUUID->"c2355193-051a-4069-b255-b0e8712a127e"],
Cell[CellGroupData[{
Cell[238520, 4783, 2175, 59, 136, "Input",ExpressionUUID->"121267da-8dee-4966-9d2f-1cfec6fcf767"],
Cell[240698, 4844, 15986, 315, 63, "Output",ExpressionUUID->"0e1bba82-8826-4e10-940d-c3763efeb6b7"]
}, Open  ]],
Cell[256699, 5162, 274, 6, 35, "Text",ExpressionUUID->"243c99cb-da80-4404-b293-9af681b04f27"],
Cell[256976, 5170, 672, 19, 30, "Input",ExpressionUUID->"6925eacb-8282-4c89-9c15-8336b97d58c5"],
Cell[257651, 5191, 486, 16, 35, "Text",ExpressionUUID->"2791134c-6190-4336-8815-471fb2c99896"],
Cell[CellGroupData[{
Cell[258162, 5211, 370, 8, 30, "Input",ExpressionUUID->"6e196d6e-09af-40f0-9aa2-71638bdaca7f"],
Cell[258535, 5221, 1656, 36, 196, "Output",ExpressionUUID->"5f37bdb7-4f2d-4ac7-8ebb-aff5433e6081"]
}, Open  ]],
Cell[260206, 5260, 553, 18, 35, "Text",ExpressionUUID->"9d2dad7d-1d99-4eb7-b3fe-6bd0be434f19"],
Cell[CellGroupData[{
Cell[260784, 5282, 231, 7, 30, "Input",ExpressionUUID->"b72a9857-e03d-47c6-9e09-15ec273cb241"],
Cell[261018, 5291, 234, 5, 34, "Output",ExpressionUUID->"ebb28685-b7b5-4dfe-abf7-6ef7f8cbc608"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[261301, 5302, 212, 4, 53, "Section",ExpressionUUID->"98db2e37-fda9-4090-bc00-2229cea87e79"],
Cell[261516, 5308, 843, 21, 61, "Text",ExpressionUUID->"973849bb-75cb-405b-8bc5-e907e9862b29"],
Cell[CellGroupData[{
Cell[262384, 5333, 1625, 42, 199, "Input",ExpressionUUID->"d294bb33-36d9-4fac-b85f-be1e4fe4d448"],
Cell[264012, 5377, 14642, 285, 63, "Output",ExpressionUUID->"3ae07fa7-8832-4edb-a03a-957ada210890"]
}, Open  ]],
Cell[278669, 5665, 281, 4, 35, "Text",ExpressionUUID->"ea3455b8-2484-4a6e-884b-667875065f62"],
Cell[278953, 5671, 335, 9, 52, "Input",ExpressionUUID->"716c6bba-6735-43aa-a6ce-722e3f22dce9"],
Cell[279291, 5682, 297, 4, 35, "Text",ExpressionUUID->"b1bd9e51-fbe4-4212-a480-39e346586f85"],
Cell[279591, 5688, 772, 23, 30, "Input",ExpressionUUID->"2667e08b-05e7-47bc-b0a2-503e1ed86dd7"],
Cell[280366, 5713, 486, 16, 35, "Text",ExpressionUUID->"f23caa8e-d51a-4869-8e91-aa0598ffaa84"],
Cell[CellGroupData[{
Cell[280877, 5733, 369, 8, 30, "Input",ExpressionUUID->"4b5b3da1-20be-4cbf-88c0-d6bc02dccf9f"],
Cell[281249, 5743, 2232, 44, 196, "Output",ExpressionUUID->"2f9635d8-0977-44c4-9fa4-c58cfeb52ad8"]
}, Open  ]],
Cell[283496, 5790, 553, 18, 35, "Text",ExpressionUUID->"2cdaa921-e27f-4665-8242-5843bc6003de"],
Cell[CellGroupData[{
Cell[284074, 5812, 399, 10, 30, "Input",ExpressionUUID->"7751382c-c451-4335-a8a0-702e6bded467"],
Cell[284476, 5824, 381, 7, 34, "Output",ExpressionUUID->"e5b64426-93b8-4d94-8163-564b2d14b9cd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[284906, 5837, 247, 4, 53, "Section",ExpressionUUID->"b75fddc8-9218-4007-bac8-d639331edb7b"],
Cell[285156, 5843, 631, 11, 58, "Text",ExpressionUUID->"f61a878d-8c58-4e55-9fb4-50de57bd83f7"],
Cell[CellGroupData[{
Cell[285812, 5858, 7133, 177, 367, "Input",ExpressionUUID->"95fc80cf-79a7-4d4d-92d4-24eff2e94e17"],
Cell[292948, 6037, 21878, 430, 63, "Output",ExpressionUUID->"5f803948-4304-45d4-a18d-f29a7808196e"]
}, Open  ]],
Cell[314841, 6470, 691, 18, 36, "Text",ExpressionUUID->"99368e9e-7e7a-4185-9d2c-0c1a38fe86b1"],
Cell[CellGroupData[{
Cell[315557, 6492, 537, 15, 30, "Input",ExpressionUUID->"9e2c4542-fdde-40d5-806f-a823fdaad8f4"],
Cell[316097, 6509, 1660, 31, 104, "Output",ExpressionUUID->"9c09b01f-5d27-42c0-891a-53835dd0fe46"]
}, Open  ]],
Cell[317772, 6543, 337, 5, 35, "Text",ExpressionUUID->"f1eb5610-e86b-4cc5-8b8a-a1e81d2b4e29"],
Cell[318112, 6550, 430, 10, 52, "Input",ExpressionUUID->"212baadb-572d-42bc-8d02-266463b573b1"],
Cell[318545, 6562, 299, 4, 35, "Text",ExpressionUUID->"a3f3d185-569c-4569-ac3b-f323faa5e25e"],
Cell[318847, 6568, 860, 25, 30, "Input",ExpressionUUID->"e0b10af7-f4c6-4b3d-a040-01116aed8ae7"],
Cell[319710, 6595, 597, 19, 35, "Text",ExpressionUUID->"8d81964e-61a7-4bb7-90f4-52907b3408f3"],
Cell[CellGroupData[{
Cell[320332, 6618, 324, 7, 30, "Input",ExpressionUUID->"64956f72-4387-4bd9-ae9c-41dfb2f26d40"],
Cell[320659, 6627, 2743, 72, 98, "Output",ExpressionUUID->"6b742efc-a9b5-4d35-88c9-7fbe2322ae25"]
}, Open  ]],
Cell[323417, 6702, 553, 18, 35, "Text",ExpressionUUID->"cedb9b87-aee1-4ce1-bbcd-ce937bf4bb35"],
Cell[CellGroupData[{
Cell[323995, 6724, 596, 12, 30, "Input",ExpressionUUID->"a1abf1f0-87bb-4817-88f6-7d9433cd3001"],
Cell[324594, 6738, 558, 10, 34, "Output",ExpressionUUID->"39820887-d29f-4659-bec9-ccab87f860eb"]
}, Open  ]],
Cell[325167, 6751, 377, 8, 35, "Text",ExpressionUUID->"09374b96-db2d-4e21-a302-a666b61fab21"],
Cell[325547, 6761, 1409, 42, 73, "Input",ExpressionUUID->"0bf42695-15cb-47c2-93aa-32c3ff21c570"],
Cell[CellGroupData[{
Cell[326981, 6807, 335, 9, 30, "Input",ExpressionUUID->"e3fd9831-a3a4-4754-b09f-2cc70590bd01"],
Cell[327319, 6818, 3535, 94, 106, "Output",ExpressionUUID->"eecd32ee-3ec5-4b49-86b7-24050946740d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[330903, 6918, 353, 6, 53, "Section",ExpressionUUID->"4fcf7749-d8ea-4165-98be-1c91f75d9be4"],
Cell[331259, 6926, 1070, 23, 58, "Text",ExpressionUUID->"331b567b-0eaf-413a-88d3-3caa1f691d4b"],
Cell[CellGroupData[{
Cell[332354, 6953, 7568, 190, 388, "Input",ExpressionUUID->"8a02fc08-d98b-4fe7-a8fc-17cc64090733"],
Cell[339925, 7145, 23053, 451, 63, "Output",ExpressionUUID->"852afe4f-692c-43db-9988-7a04f0c00658"]
}, Open  ]],
Cell[362993, 7599, 825, 19, 36, "Text",ExpressionUUID->"649a5812-ccd4-434d-ba4c-ffbb149815a5"],
Cell[CellGroupData[{
Cell[363843, 7622, 576, 17, 30, "Input",ExpressionUUID->"9ef9d160-736a-4617-9cd8-f25109ed6d51"],
Cell[364422, 7641, 1620, 30, 104, "Output",ExpressionUUID->"608443cc-2917-4275-b04e-1ece4892e25d"]
}, Open  ]],
Cell[366057, 7674, 827, 21, 35, "Text",ExpressionUUID->"ed91de80-47d9-4b26-b69f-25c3fcc28df3"],
Cell[366887, 7697, 915, 22, 52, "Input",ExpressionUUID->"7ac81f7f-5308-49a8-bf59-5dde7d3cf89f"],
Cell[367805, 7721, 597, 19, 35, "Text",ExpressionUUID->"e708b7a7-9360-43ec-9cac-6c0d2ffda456"],
Cell[CellGroupData[{
Cell[368427, 7744, 425, 7, 30, "Input",ExpressionUUID->"74e6344f-7169-4bb0-92ad-420c0b6cb668"],
Cell[368855, 7753, 2750, 69, 90, "Output",ExpressionUUID->"a8e3026a-f8ed-4ff6-9e3c-adf1465199f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371642, 7827, 309, 8, 30, "Input",ExpressionUUID->"f04f7a26-2932-4f74-aad6-c6bee4b8dcc3"],
Cell[371954, 7837, 359, 7, 34, "Output",ExpressionUUID->"d1807eba-6974-4a23-9d6f-1d5996d77881"]
}, Open  ]],
Cell[372328, 7847, 886, 21, 35, "Text",ExpressionUUID->"65bb4366-04a4-48e3-9354-d75b46de86e4"],
Cell[CellGroupData[{
Cell[373239, 7872, 553, 15, 30, "Input",ExpressionUUID->"8744031b-62d2-454c-bc87-14de8af4a3b7"],
Cell[373795, 7889, 1804, 44, 65, "Output",ExpressionUUID->"f1eea88d-9480-43e5-b38f-4cd585f6a229"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[375648, 7939, 163, 3, 53, "Section",ExpressionUUID->"6823d716-217c-4edc-a579-2d5f8923e2cb"],
Cell[375814, 7944, 1418, 35, 58, "Text",ExpressionUUID->"aeec8bf1-4bb0-4c65-8cc3-8d849a0f08a1"],
Cell[377235, 7981, 1565, 50, 39, "Text",ExpressionUUID->"b18706a1-0b72-44a6-b886-41fa9233f032"],
Cell[CellGroupData[{
Cell[378825, 8035, 2227, 56, 220, "Input",ExpressionUUID->"debeb458-8656-4677-a37d-21f919a067f8"],
Cell[381055, 8093, 15758, 304, 63, "Output",ExpressionUUID->"69b0d2f4-9b33-42ca-8958-2580e1e894d1"]
}, Open  ]],
Cell[396828, 8400, 210, 4, 35, "Text",ExpressionUUID->"31caa4e6-e316-4e0a-80a5-70930c56c439"],
Cell[CellGroupData[{
Cell[397063, 8408, 546, 17, 30, "Input",ExpressionUUID->"2e762f91-a50e-4900-a5fa-b379af9f677a"],
Cell[397612, 8427, 629, 15, 34, "Output",ExpressionUUID->"63d91cda-7cc5-4300-8f79-90ce6de8d1d2"]
}, Open  ]],
Cell[398256, 8445, 1903, 61, 39, "Text",ExpressionUUID->"95f2b771-5853-4ecf-b376-e0ce496ab9af"],
Cell[CellGroupData[{
Cell[400184, 8510, 2448, 60, 178, "Input",ExpressionUUID->"c75f0f20-87bb-45a0-863f-3ab8fb05f758"],
Cell[402635, 8572, 16834, 329, 63, "Output",ExpressionUUID->"7daa9829-4f30-43a3-b8e2-a4c839a24822"]
}, Open  ]],
Cell[419484, 8904, 372, 7, 35, "Text",ExpressionUUID->"01d1660d-76c9-4e52-bac7-20e78afe26fd"],
Cell[419859, 8913, 792, 23, 30, "Input",ExpressionUUID->"835bf338-3837-4016-9c81-2160d27c7681"],
Cell[420654, 8938, 549, 16, 35, "Text",ExpressionUUID->"867b8b18-1319-4f8c-b00e-51d5da42a0d4"],
Cell[CellGroupData[{
Cell[421228, 8958, 387, 11, 30, "Input",ExpressionUUID->"3bf4f9ad-1ad8-428c-b633-0aeb0ede0573"],
Cell[421618, 8971, 3263, 58, 196, "Output",ExpressionUUID->"30395c18-dc47-4011-bb26-db8b499a7a6e"]
}, Open  ]],
Cell[424896, 9032, 602, 18, 35, "Text",ExpressionUUID->"278a51c9-3787-4a1d-b284-7dc96dca6a8f"],
Cell[425501, 9052, 364, 9, 52, "Input",ExpressionUUID->"697bfd66-e0af-48e1-ba8c-2a4c5f1c661e"],
Cell[CellGroupData[{
Cell[425890, 9065, 504, 12, 30, "Input",ExpressionUUID->"7fd0d48c-d59f-4f0c-aa53-af7c831ef970"],
Cell[426397, 9079, 362, 7, 34, "Output",ExpressionUUID->"7745fd83-3892-47de-bbf7-c69c9fe0d5fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426796, 9091, 357, 10, 30, "Input",ExpressionUUID->"6967d06c-95e7-4ded-b8c7-b8bb7b238f5d"],
Cell[427156, 9103, 431, 8, 34, "Output",ExpressionUUID->"1860baca-4aed-44e2-bc29-857cb45134bf"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[427648, 9118, 266, 4, 58, "Chapter",ExpressionUUID->"ccb0819a-83d5-4c09-8209-3bddf5faeb88"],
Cell[CellGroupData[{
Cell[427939, 9126, 177, 3, 67, "Section",ExpressionUUID->"e5b6eba1-5429-436a-b3b1-b0e59573d1b5"],
Cell[428119, 9131, 530, 12, 58, "Text",ExpressionUUID->"0383b66e-3031-4461-95a5-b2f064444d8c"],
Cell[428652, 9145, 1555, 46, 94, "Input",ExpressionUUID->"a77a6f63-0e49-4e92-b22e-186fd2a41ea1"],
Cell[430210, 9193, 292, 4, 35, "Text",ExpressionUUID->"02d78bb8-35a9-4902-bd91-442d64338dac"],
Cell[CellGroupData[{
Cell[430527, 9201, 712, 20, 30, "Input",ExpressionUUID->"bfff436c-bbfd-43c6-b2c2-5b2b4b98be55"],
Cell[431242, 9223, 2248, 62, 134, "Output",ExpressionUUID->"d798e5e2-6812-48f2-ab37-8e7d32a70f6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433527, 9290, 533, 15, 30, "Input",ExpressionUUID->"7c7ed626-e404-4867-9723-d7c7ac4ae33d"],
Cell[434063, 9307, 1747, 49, 132, "Output",ExpressionUUID->"2522b183-699d-426a-83ee-8fd9e853f0ed"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[435859, 9362, 245, 4, 53, "Section",ExpressionUUID->"b3fae4b7-df6b-4b13-881e-f1c3b27b46f7"],
Cell[436107, 9368, 1136, 28, 58, "Text",ExpressionUUID->"16fe0eb0-8cbc-412c-8183-b0ffb009d64f"],
Cell[CellGroupData[{
Cell[437268, 9400, 906, 23, 73, "Input",ExpressionUUID->"56a17f37-a5e1-4e92-b3d4-d8612bfba74c"],
Cell[438177, 9425, 199, 4, 34, "Output",ExpressionUUID->"87d31325-62b4-41a0-b325-ac9fd6d52b30"]
}, Open  ]],
Cell[438391, 9432, 1799, 45, 81, "Text",ExpressionUUID->"432a7c79-cb71-4485-83f0-59c62f387817"],
Cell[CellGroupData[{
Cell[440215, 9481, 666, 16, 115, "Input",ExpressionUUID->"86db81e1-1015-4917-8ffd-4d1fbc4d5b1d"],
Cell[440884, 9499, 306, 6, 34, "Output",ExpressionUUID->"028b539a-91f6-41c3-b5e0-fd7bc32d4b2f"]
}, Open  ]],
Cell[441205, 9508, 340, 10, 35, "Text",ExpressionUUID->"ea2df0fa-45b7-4d24-9a15-0cf3e93c747b"],
Cell[441548, 9520, 900, 24, 94, "Input",ExpressionUUID->"364b1fb4-ac64-4bde-8a83-0ca48ca06ba4"],
Cell[CellGroupData[{
Cell[442473, 9548, 783, 20, 30, "Input",ExpressionUUID->"f17e89d9-5787-46b6-ae6f-7c338b0beabc"],
Cell[443259, 9570, 312, 7, 34, "Output",ExpressionUUID->"0f7e1dea-e0b9-4732-b8c9-42086c2f0222"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443608, 9582, 216, 4, 30, "Input",ExpressionUUID->"83e6c32c-eb2b-4dc5-a8bf-602afd2363d3"],
Cell[443827, 9588, 837, 26, 34, "Output",ExpressionUUID->"5ed68c23-cba7-4d28-b85f-093a2a46930f"]
}, Open  ]],
Cell[444679, 9617, 243, 6, 35, "Text",ExpressionUUID->"9943d913-5b6f-419b-8335-7aaa5814f15e"],
Cell[CellGroupData[{
Cell[444947, 9627, 335, 7, 30, "Input",ExpressionUUID->"6e45781f-bc5b-419c-98dd-b52c80e00fee"],
Cell[445285, 9636, 135538, 2270, 63, "Output",ExpressionUUID->"54044ea8-7586-4efc-bee9-98de31dc4ab1"]
}, Open  ]],
Cell[580838, 11909, 277, 6, 35, "Text",ExpressionUUID->"988da110-be49-443b-baf0-ba17bf6db3c0"],
Cell[CellGroupData[{
Cell[581140, 11919, 438, 10, 30, "Input",ExpressionUUID->"17de93dc-c91d-4d27-9e99-cd91db336c09"],
Cell[581581, 11931, 569, 14, 34, "Output",ExpressionUUID->"fe069cc1-2140-49ad-b22c-e0c03f9ebbfd"]
}, Open  ]],
Cell[582165, 11948, 243, 4, 35, "Text",ExpressionUUID->"eb155478-41cf-4929-9632-955d7352d5e2"],
Cell[CellGroupData[{
Cell[582433, 11956, 535, 14, 30, "Input",ExpressionUUID->"765cade3-6a70-480e-88b7-f6b668dee2b6"],
Cell[582971, 11972, 2043, 30, 98, "Output",ExpressionUUID->"0b2d9bef-1ae5-42f9-87d3-19df475a8b5a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[585063, 12008, 159, 3, 53, "Section",ExpressionUUID->"b6d0a765-7e32-4226-8ed6-573283e8d749"],
Cell[585225, 12013, 246, 4, 35, "Text",ExpressionUUID->"356518b9-3222-4306-863c-0564f0c84fce"],
Cell[CellGroupData[{
Cell[585496, 12021, 600, 17, 30, "Input",ExpressionUUID->"23dd80c6-404a-4d4b-9b11-97fb634aeb02"],
Cell[586099, 12040, 263, 6, 34, "Output",ExpressionUUID->"63c2b85d-b71c-4f8c-a04e-906aff6c52ff"]
}, Open  ]],
Cell[586377, 12049, 307, 5, 35, "Text",ExpressionUUID->"b0783d20-2891-4922-9a52-8570b63ee58f"],
Cell[CellGroupData[{
Cell[586709, 12058, 345, 7, 30, "Input",ExpressionUUID->"e515da87-3a1e-41bb-94b2-44fcc9ed21a3"],
Cell[587057, 12067, 268639, 4452, 63, "Output",ExpressionUUID->"b8c0ee86-89be-4f14-9b4f-1b10e0ac17f8"]
}, Open  ]],
Cell[855711, 16522, 512, 13, 36, "Text",ExpressionUUID->"7ad07741-ad13-47b4-a291-a10afb924cb8"],
Cell[CellGroupData[{
Cell[856248, 16539, 445, 11, 30, "Input",ExpressionUUID->"3988e4a7-73ba-44d9-ba38-d821a8dc2755"],
Cell[856696, 16552, 74845, 1275, 63, "Output",ExpressionUUID->"595fe01a-ac71-4c58-a845-95c615497308"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[931590, 17833, 212, 4, 53, "Section",ExpressionUUID->"7898ff16-ddc8-42ec-a654-ce5f0033ddb4"],
Cell[931805, 17839, 295, 4, 35, "Text",ExpressionUUID->"6df457af-7e1c-4644-bdd9-48356dcd2243"],
Cell[932103, 17845, 599, 16, 52, "Input",ExpressionUUID->"ddf9262d-cd69-448b-b958-2035686c3a0a"],
Cell[CellGroupData[{
Cell[932727, 17865, 649, 18, 30, "Input",ExpressionUUID->"f61de5bb-769a-47f7-af33-39bef63ad092"],
Cell[933379, 17885, 311, 6, 34, "Output",ExpressionUUID->"777935be-3dca-4a38-819f-2cad6d04427a"]
}, Open  ]],
Cell[933705, 17894, 307, 5, 35, "Text",ExpressionUUID->"f79d6566-06c8-44b3-970f-5596a87ed3d2"],
Cell[CellGroupData[{
Cell[934037, 17903, 394, 8, 30, "Input",ExpressionUUID->"87cef7df-88ff-4c38-9f9d-f67e66fe2d06"],
Cell[934434, 17913, 24969, 457, 85, "Output",ExpressionUUID->"b23c8c97-bcac-4b4c-9f5d-5cb8dad91949"]
}, Open  ]],
Cell[959418, 18373, 536, 12, 35, "Text",ExpressionUUID->"ffe533da-9fee-4017-94b0-664e000613ac"],
Cell[CellGroupData[{
Cell[959979, 18389, 526, 13, 30, "Input",ExpressionUUID->"f56b9723-0098-46c2-81e9-6082c877ec09"],
Cell[960508, 18404, 76176, 1297, 63, "Output",ExpressionUUID->"131a9d20-443b-4f26-99f0-d2b74145b484"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1036733, 19707, 210, 4, 53, "Section",ExpressionUUID->"17e84b69-9b23-4dd8-81ed-72e410bc5156"],
Cell[1036946, 19713, 560, 15, 35, "Text",ExpressionUUID->"f86e1dcb-d1ae-43eb-86c6-4e59896f3882"],
Cell[CellGroupData[{
Cell[1037531, 19732, 749, 18, 30, "Input",ExpressionUUID->"10210bdf-9b67-41ea-861e-092ca391fa51"],
Cell[1038283, 19752, 277, 5, 34, "Output",ExpressionUUID->"a915f272-8a6e-4e67-9dee-de9b6263ab4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1038597, 19762, 214, 3, 30, "Input",ExpressionUUID->"3d73c4b0-9e21-4524-ab69-bc8c90bb0baf"],
Cell[1038814, 19767, 748, 22, 34, "Output",ExpressionUUID->"ab593ef0-8c70-429d-95af-e0e21fa2124c"]
}, Open  ]],
Cell[1039577, 19792, 198, 3, 35, "Text",ExpressionUUID->"1937c91b-8130-49fd-8b92-3d00a5f8209c"],
Cell[CellGroupData[{
Cell[1039800, 19799, 230, 4, 30, "Input",ExpressionUUID->"5809b6be-3389-4955-9ad0-454b1b9c085e"],
Cell[1040033, 19805, 543, 14, 34, "Output",ExpressionUUID->"36a1513b-d017-4a27-aa7a-97036bc9d3cb"]
}, Open  ]],
Cell[1040591, 19822, 1467, 44, 35, "Text",ExpressionUUID->"bc8583d2-5dd6-4444-b7f9-5a5ba390076a"],
Cell[CellGroupData[{
Cell[1042083, 19870, 1146, 31, 73, "Input",ExpressionUUID->"873306b2-eaf3-48af-a832-54963168e448"],
Cell[1043232, 19903, 332, 6, 34, "Output",ExpressionUUID->"538d85c0-43c1-4fb1-91fd-c0d7fe69688c"]
}, Open  ]],
Cell[1043579, 19912, 579, 10, 35, "Text",ExpressionUUID->"60e562b1-07f3-4a43-8e86-87f0ee93cc5d"],
Cell[CellGroupData[{
Cell[1044183, 19926, 563, 13, 52, "Input",ExpressionUUID->"381f0862-e202-4366-9eba-b29ac86a36e4"],
Cell[1044749, 19941, 204, 4, 34, "Output",ExpressionUUID->"3a9583d1-a6fd-4192-8944-8408afd37a58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044990, 19950, 622, 14, 30, "Input",ExpressionUUID->"32db77b8-8222-48ec-b2a3-fe32538618c2"],
Cell[1045615, 19966, 377, 6, 34, "Output",ExpressionUUID->"083e8826-d8af-4c8b-b8d5-312d35d1edfd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046029, 19977, 222, 4, 30, "Input",ExpressionUUID->"2bdc90fc-47e9-42be-a664-4347911906d7"],
Cell[1046254, 19983, 948, 25, 34, "Output",ExpressionUUID->"2fb118f1-da39-44bd-b075-c7bf85d4efac"]
}, Open  ]],
Cell[1047217, 20011, 315, 5, 35, "Text",ExpressionUUID->"479b70cf-8d53-4241-b5bd-af11bc22c4df"],
Cell[CellGroupData[{
Cell[1047557, 20020, 641, 15, 30, "Input",ExpressionUUID->"5491dfe7-6101-4090-aaca-e8ab8fa83687"],
Cell[1048201, 20037, 11522, 231, 85, "Output",ExpressionUUID->"e42384af-f6ba-4173-8eef-b8aed2c87874"]
}, Open  ]],
Cell[1059738, 20271, 622, 16, 35, "Text",ExpressionUUID->"a419bf6e-dc17-496d-b918-65825c2c44e1"],
Cell[CellGroupData[{
Cell[1060385, 20291, 614, 15, 30, "Input",ExpressionUUID->"f7402547-5eba-44e6-9daa-8a54768b6fa6"],
Cell[1061002, 20308, 11528, 233, 85, "Output",ExpressionUUID->"f5df95cb-b774-467d-a18e-b76bff180eb2"]
}, Open  ]],
Cell[1072545, 20544, 815, 21, 35, "Text",ExpressionUUID->"89d944aa-8170-4bbe-b27a-9ffb71727ae7"],
Cell[CellGroupData[{
Cell[1073385, 20569, 445, 10, 30, "Input",ExpressionUUID->"4e567466-f9fa-4549-8b44-882048440b07"],
Cell[1073833, 20581, 71779, 1225, 63, "Output",ExpressionUUID->"0aff9060-0807-4104-ba3e-57976267c8ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145649, 21811, 343, 8, 30, "Input",ExpressionUUID->"21cafd28-4da4-4dfa-ac5b-ce67bc503389"],
Cell[1145995, 21821, 70341, 1201, 63, "Output",ExpressionUUID->"e54518a5-63f7-4afe-b9d1-f1fd1901655c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1216385, 23028, 152, 3, 53, "Section",ExpressionUUID->"22ba818b-5b10-43de-9009-3f99d4f60115"],
Cell[1216540, 23033, 242, 4, 35, "Text",ExpressionUUID->"b5cff38a-fe1a-47fb-9bc3-2121ffc30cf9"],
Cell[1216785, 23039, 627, 16, 52, "Input",ExpressionUUID->"bf67ecb3-2659-4c74-894d-a6550e6cf755"],
Cell[CellGroupData[{
Cell[1217437, 23059, 549, 16, 30, "Input",ExpressionUUID->"b96108da-cb19-4719-a3a9-6dabc97ced6a"],
Cell[1217989, 23077, 261, 6, 34, "Output",ExpressionUUID->"b2f0f5dd-d656-4fbd-8396-87ff7e791de7"]
}, Open  ]],
Cell[1218265, 23086, 198, 3, 35, "Text",ExpressionUUID->"98cfff5b-0352-4a8d-883d-8f65a5a56c44"],
Cell[CellGroupData[{
Cell[1218488, 23093, 271, 6, 30, "Input",ExpressionUUID->"68e112b3-5805-4425-9bb0-f49cf7392842"],
Cell[1218762, 23101, 2108, 59, 98, "Output",ExpressionUUID->"c815a886-e8fe-496a-9626-d922079f2006"]
}, Open  ]],
Cell[1220885, 23163, 1442, 43, 35, "Text",ExpressionUUID->"e9e129f7-9f4d-4716-a82a-eb1c0224eac6"],
Cell[CellGroupData[{
Cell[1222352, 23210, 994, 28, 73, "Input",ExpressionUUID->"633406c1-a448-41ee-b033-0700c703a754"],
Cell[1223349, 23240, 308, 7, 34, "Output",ExpressionUUID->"fe431d3b-f7b4-48a5-af72-b6e67ef8cd09"]
}, Open  ]],
Cell[1223672, 23250, 553, 10, 35, "Text",ExpressionUUID->"a14ca670-0779-4882-ba39-3ce94b5d7147"],
Cell[CellGroupData[{
Cell[1224250, 23264, 467, 11, 52, "Input",ExpressionUUID->"d67c2706-5a07-4cd9-a9fb-0aafed8cd63d"],
Cell[1224720, 23277, 182, 3, 34, "Output",ExpressionUUID->"f00d409e-c160-4862-ad1e-118e0ec4450c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224939, 23285, 686, 17, 30, "Input",ExpressionUUID->"78b238f3-fa13-4c4d-91bd-c0321845fa22"],
Cell[1225628, 23304, 283, 6, 34, "Output",ExpressionUUID->"aca987f4-856c-4951-a0b8-db117df5b2f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225948, 23315, 227, 4, 30, "Input",ExpressionUUID->"423a8603-847f-4827-b261-44d6768c76cd"],
Cell[1226178, 23321, 922, 25, 34, "Output",ExpressionUUID->"b22d0c49-39c5-4a14-b9fa-0a3730e4daf8"]
}, Open  ]],
Cell[1227115, 23349, 181, 3, 35, "Text",ExpressionUUID->"dc41e7b7-d4e2-4e4b-ad1f-b3fc9bdbe248"],
Cell[CellGroupData[{
Cell[1227321, 23356, 697, 17, 30, "Input",ExpressionUUID->"f4bfa052-622e-4593-9077-9ee2a932b459"],
Cell[1228021, 23375, 11543, 233, 85, "Output",ExpressionUUID->"3176c29d-4399-487d-b31e-7b0b721a5c31"]
}, Open  ]],
Cell[1239579, 23611, 626, 15, 35, "Text",ExpressionUUID->"5fbe941a-baeb-42db-a622-188240bbc8a2"],
Cell[CellGroupData[{
Cell[1240230, 23630, 579, 14, 30, "Input",ExpressionUUID->"5b3cc170-e2de-4236-af5b-4e1ce7b41c26"],
Cell[1240812, 23646, 11465, 232, 85, "Output",ExpressionUUID->"cf23b5c9-e53d-4202-9a3c-a425d30e8afe"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1252326, 23884, 162, 3, 53, "Section",ExpressionUUID->"57a4a10a-3b22-40d9-9981-391615b2d511"],
Cell[1252491, 23889, 3448, 102, 89, "Text",ExpressionUUID->"24239112-1d36-43a1-a5c5-ee35f2e7f5bb"],
Cell[1255942, 23993, 581, 12, 73, "Input",ExpressionUUID->"fa65a934-328d-472a-b05e-290526b97f87"],
Cell[1256526, 24007, 1486, 46, 117, "Input",ExpressionUUID->"22744cc3-3190-4b16-ae98-2903d46b7a95"],
Cell[1258015, 24055, 674, 11, 35, "Text",ExpressionUUID->"78491f72-81ea-464a-bc71-030db38997d4"],
Cell[CellGroupData[{
Cell[1258714, 24070, 787, 20, 30, "Input",ExpressionUUID->"6a7d5c26-9711-4b24-8a60-0b3065cceb99"],
Cell[1259504, 24092, 363, 7, 34, "Output",ExpressionUUID->"9153c0aa-1e91-4889-8bbd-a2d95dafc4f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1259904, 24104, 229, 5, 30, "Input",ExpressionUUID->"70c7e9ed-9c28-4f43-a507-de7886f95959"],
Cell[1260136, 24111, 55883, 966, 63, "Output",ExpressionUUID->"e62b4ad3-cb40-4ba9-abce-da2d6628d457"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1316068, 25083, 239, 4, 53, "Section",ExpressionUUID->"a06ae6fe-3659-452e-95cd-e5c3154fc55d"],
Cell[1316310, 25089, 619, 14, 58, "Text",ExpressionUUID->"2c19188e-2f0c-4701-a671-214c75d6f217"],
Cell[CellGroupData[{
Cell[1316954, 25107, 274, 6, 30, "Input",ExpressionUUID->"91c988a9-2e44-4d22-a4db-691b09a6fab2"],
Cell[1317231, 25115, 75979, 1293, 63, "Output",ExpressionUUID->"151562b9-adbd-466c-aa43-090c73754b6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1393247, 26413, 514, 15, 30, "Input",ExpressionUUID->"82b39464-8227-4592-a4cb-1479c9fc41c4"],
Cell[1393764, 26430, 282, 6, 34, "Output",ExpressionUUID->"071282f8-3c75-4d54-a94b-9a36091fa34a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1394083, 26441, 211, 4, 30, "Input",ExpressionUUID->"304301de-120b-4b3e-8135-74ee2ec1db52"],
Cell[1394297, 26447, 71341, 1219, 63, "Output",ExpressionUUID->"6914cf2a-a1df-424e-8df9-cf7a22f8ad78"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1465699, 27673, 160, 3, 58, "Chapter",ExpressionUUID->"da108f75-8b87-43c7-9381-6546ce355cb9"],
Cell[1465862, 27678, 223, 3, 35, "Text",ExpressionUUID->"d6ddcf1c-8798-4b73-a0a1-e26247cfa798"],
Cell[1466088, 27683, 687, 19, 30, "Input",ExpressionUUID->"642217f3-8698-49a2-9944-cc0b99e9af35"],
Cell[CellGroupData[{
Cell[1466800, 27706, 298, 6, 52, "Input",ExpressionUUID->"8c69f281-21f6-418a-ac13-ec3c1b92bf98"],
Cell[1467101, 27714, 253, 5, 34, "Output",ExpressionUUID->"750445cb-7a09-426c-938d-bcfdd7001af3"]
}, Open  ]],
Cell[1467369, 27722, 300, 7, 35, "Text",ExpressionUUID->"039e8b80-856f-4b9e-b4bf-1655c0134b86"],
Cell[1467672, 27731, 2771, 70, 178, "Input",ExpressionUUID->"b31b98c4-7a0d-468d-9a84-6c4b659d0f71"],
Cell[1470446, 27803, 244, 4, 35, "Text",ExpressionUUID->"b1978827-9124-4b29-b9a6-ab7573405a2d"],
Cell[1470693, 27809, 306, 7, 52, "Input",ExpressionUUID->"d59c8d83-7fd9-43d4-a934-6ef608e11618"],
Cell[CellGroupData[{
Cell[1471024, 27820, 189, 3, 30, "Input",ExpressionUUID->"b9719203-7369-43ba-b121-e9b9e7c08673"],
Cell[1471216, 27825, 459, 9, 34, "Output",ExpressionUUID->"cae9f9af-8c9b-48be-9e94-93571377eb6c"]
}, Open  ]],
Cell[1471690, 27837, 423, 9, 58, "Text",ExpressionUUID->"4e071cad-3a72-488a-8b8c-ab67ee080479"]
}, Closed]],
Cell[CellGroupData[{
Cell[1472150, 27851, 270, 4, 58, "Chapter",ExpressionUUID->"ca9c7a10-d543-4378-84ce-27ead0fd6786"],
Cell[CellGroupData[{
Cell[1472445, 27859, 179, 3, 67, "Section",ExpressionUUID->"c1b3ecb8-2fe9-44b2-9f24-fdae0eb1d6db"],
Cell[1472627, 27864, 942, 17, 104, "Text",ExpressionUUID->"5722bbee-69e2-4e68-b6de-033289fa333b"],
Cell[1473572, 27883, 177, 3, 35, "Text",ExpressionUUID->"39ee1041-beb2-4886-81cf-dee17080e0f4"],
Cell[1473752, 27888, 265, 5, 30, "Input",ExpressionUUID->"cc3b3eda-575f-4fe2-946b-b67ba1fbb8a7"],
Cell[1474020, 27895, 868, 21, 58, "Text",ExpressionUUID->"79771272-10b4-4e64-9971-3e152ce419b1"],
Cell[CellGroupData[{
Cell[1474913, 27920, 286, 6, 30, "Input",ExpressionUUID->"71efde06-4500-43c9-ad37-53a40c8b370b"],
Cell[CellGroupData[{
Cell[1475224, 27930, 500, 15, 24, "Print",ExpressionUUID->"fa36c2ea-5418-485e-86e4-b4005aa25342"],
Cell[1475727, 27947, 810, 25, 24, "Print",ExpressionUUID->"e8cdcccc-e848-44a0-98dd-181d51837542"],
Cell[1476540, 27974, 872, 27, 24, "Print",ExpressionUUID->"02419f3d-00db-44e8-bc3c-3bf5842da417"],
Cell[1477415, 28003, 809, 25, 24, "Print",ExpressionUUID->"36717d7f-13e7-42fb-a78d-c219fdf5ee6d"],
Cell[1478227, 28030, 561, 17, 24, "Print",ExpressionUUID->"885a77c1-f677-467f-8ff5-489c64869fd4"]
}, Open  ]]
}, Open  ]],
Cell[1478815, 28051, 495, 9, 58, "Text",ExpressionUUID->"96c811cb-98ad-42e7-8150-22a3f128589b"],
Cell[CellGroupData[{
Cell[1479335, 28064, 288, 7, 30, "Input",ExpressionUUID->"a48f9db9-848b-4d96-abbd-896dab2744b0"],
Cell[CellGroupData[{
Cell[1479648, 28075, 1842, 47, 93, "Print",ExpressionUUID->"6b27e85e-df13-49c6-95bf-528b0c46cec9"],
Cell[1481493, 28124, 1844, 47, 93, "Print",ExpressionUUID->"cd281510-bfd5-45f0-85bc-80c08d647a8e"],
Cell[1483340, 28173, 1844, 47, 93, "Print",ExpressionUUID->"7c1c4129-9091-48b3-9deb-ca2a2eceef28"]
}, Open  ]]
}, Open  ]],
Cell[1485211, 28224, 176, 3, 35, "Text",ExpressionUUID->"3138a619-3046-4f0a-bc14-9bfaa83a0fa8"],
Cell[CellGroupData[{
Cell[1485412, 28231, 289, 7, 30, "Input",ExpressionUUID->"14b3db09-65e7-44eb-9e37-fdf3eaf4d6b1"],
Cell[1485704, 28240, 1007, 20, 49, "Print",ExpressionUUID->"00446f84-97a6-4185-8a3a-ae4715170c13"]
}, Open  ]],
Cell[1486726, 28263, 314, 7, 35, "Text",ExpressionUUID->"d6ea55e5-0e36-489f-82c1-a5eeef218897"]
}, Closed]],
Cell[CellGroupData[{
Cell[1487077, 28275, 156, 3, 53, "Section",ExpressionUUID->"73069d71-3939-48a9-a0fe-3e5b8476812b"],
Cell[1487236, 28280, 367, 8, 35, "Text",ExpressionUUID->"0ca14e0e-1eb7-469f-aeb9-61ed950807f9"],
Cell[1487606, 28290, 800, 20, 178, "Input",ExpressionUUID->"8536e34f-f4c3-41e3-a262-3914fc2f0814"],
Cell[CellGroupData[{
Cell[1488431, 28314, 914, 24, 52, "Input",ExpressionUUID->"2ed76bc1-dcd7-48ee-b521-97943fb3eeb2"],
Cell[1489348, 28340, 804, 21, 34, "Output",ExpressionUUID->"f8a4c214-87a3-4e09-927a-1cd990dd28e5"]
}, Open  ]],
Cell[1490167, 28364, 196, 3, 35, "Text",ExpressionUUID->"2405c1a4-79fa-406f-a9d2-7d3796f9124a"],
Cell[1490366, 28369, 1402, 41, 73, "Input",ExpressionUUID->"0302e9a8-6357-4ac3-a5c0-daa401179c84"],
Cell[CellGroupData[{
Cell[1491793, 28414, 403, 9, 30, "Input",ExpressionUUID->"8389e199-bfb7-4e22-a431-4bd90edc6147"],
Cell[1492199, 28425, 353, 6, 34, "Output",ExpressionUUID->"0487c37c-49e5-4337-b6f2-60ad43b609b4"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1492613, 28438, 377, 6, 58, "Chapter",ExpressionUUID->"20833fb7-725e-419b-8890-41481dea28eb"],
Cell[1492993, 28446, 337, 7, 35, "Text",ExpressionUUID->"34c363a2-ec7c-4a8b-8a2b-5200e1c4950f"],
Cell[CellGroupData[{
Cell[1493355, 28457, 164, 3, 67, "Section",ExpressionUUID->"6f6fd71e-3b02-4b1f-bc78-b8edeaee9948"],
Cell[1493522, 28462, 261, 6, 35, "Text",ExpressionUUID->"574da26d-29f6-49a0-be98-e9b7fb554459"],
Cell[1493786, 28470, 1517, 43, 178, "Input",ExpressionUUID->"3f8d0b6c-31e3-489f-b9f0-1e5bce6d29c6"],
Cell[CellGroupData[{
Cell[1495328, 28517, 357, 9, 30, "Input",ExpressionUUID->"f33070da-c696-42bb-8f83-97d655501b1f"],
Cell[1495688, 28528, 259, 5, 45, "Output",ExpressionUUID->"db49d64c-3b54-4413-b41c-267f518f2457"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1495996, 28539, 168, 3, 53, "Section",ExpressionUUID->"b1c4431a-73cf-43b4-b48f-50630ab0f0ee"],
Cell[1496167, 28544, 454, 15, 196, "Text",ExpressionUUID->"2f52bece-5115-46ba-9c36-a53d46617ced"],
Cell[1496624, 28561, 2631, 67, 283, "Input",ExpressionUUID->"b784c8ce-823e-4824-b3f2-be764d5f40d2"],
Cell[1499258, 28630, 230, 5, 35, "Text",ExpressionUUID->"52389cc3-fc5d-4320-91eb-c959951348da"],
Cell[1499491, 28637, 2030, 44, 199, "Input",ExpressionUUID->"49293fbc-e354-47d2-b573-336c41596762"],
Cell[1501524, 28683, 229, 4, 35, "Text",ExpressionUUID->"4a5221fd-2e56-4930-bceb-cc1db0b91764"],
Cell[1501756, 28689, 836, 21, 94, "Input",ExpressionUUID->"4e2f2bb7-98b4-49b4-b10e-ce62bea9ba9d"],
Cell[CellGroupData[{
Cell[1502617, 28714, 489, 11, 30, "Input",ExpressionUUID->"e471124e-ff0a-4b2b-bfb2-093521676769"],
Cell[1503109, 28727, 861, 25, 34, "Output",ExpressionUUID->"7cda60a2-b3ec-4038-a65b-1f3acb08033e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1504007, 28757, 527, 13, 30, "Input",ExpressionUUID->"4cf57865-e0df-4570-988c-7e0d3c02496c"],
Cell[1504537, 28772, 387, 8, 34, "Output",ExpressionUUID->"595b47bd-6790-40ef-a220-85ac0faa6b96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1504961, 28785, 480, 11, 30, "Input",ExpressionUUID->"623bd3a8-42ee-49c6-abad-0ebb4b2af0d2"],
Cell[1505444, 28798, 1820, 47, 106, "Output",ExpressionUUID->"fe29f851-121e-4d60-aa0a-ef9f9627fd77"]
}, Open  ]],
Cell[1507279, 28848, 544, 13, 52, "Input",ExpressionUUID->"cc62d355-41bc-43d4-8f35-f06cf6a7c864"],
Cell[CellGroupData[{
Cell[1507848, 28865, 184, 3, 30, "Input",ExpressionUUID->"bc06b858-3840-4231-bf99-26f73d899c59"],
Cell[1508035, 28870, 766, 15, 37, "Output",ExpressionUUID->"93429559-9efe-48af-8ebc-f3196041a253"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1508850, 28891, 156, 3, 53, "Section",ExpressionUUID->"0ad3b3cb-75d8-44e3-850e-1329e324ab39"],
Cell[1509009, 28896, 185, 3, 35, "Text",ExpressionUUID->"f91924d0-1f2b-4ec2-8747-a0c15fb877d7"],
Cell[1509197, 28901, 1816, 44, 199, "Input",ExpressionUUID->"60753193-3036-4c92-93f9-56df2541d164"],
Cell[1511016, 28947, 261, 6, 35, "Text",ExpressionUUID->"0d1fd978-19e0-4bb4-b1da-552692a065f2"],
Cell[CellGroupData[{
Cell[1511302, 28957, 297, 6, 30, "Input",ExpressionUUID->"9d906292-bb62-4a96-bad9-c64d4a5d6c74"],
Cell[1511602, 28965, 1758, 46, 106, "Output",ExpressionUUID->"e81b012f-8ef8-4266-a1aa-467ff95a5051"]
}, Open  ]],
Cell[1513375, 29014, 491, 13, 150, "Text",ExpressionUUID->"10ccccea-cca6-41dd-934f-93b783dfe073"]
}, Closed]],
Cell[CellGroupData[{
Cell[1513903, 29032, 217, 4, 53, "Section",ExpressionUUID->"56098d0d-4420-46a5-9ccb-5431a7351ee5"],
Cell[1514123, 29038, 710, 12, 58, "Text",ExpressionUUID->"15bb404c-b495-47e4-98bc-aa102f15eacc"],
Cell[1514836, 29052, 3345, 87, 304, "Input",ExpressionUUID->"53c6723d-01b5-408b-8e3a-55e1b6150981"],
Cell[1518184, 29141, 417, 15, 219, "Text",ExpressionUUID->"ba335f4c-2083-439d-8b92-29e42db4c29e"]
}, Closed]],
Cell[CellGroupData[{
Cell[1518638, 29161, 171, 3, 53, "Section",ExpressionUUID->"72131152-9a2f-4e26-91a3-45c4193189d8"],
Cell[1518812, 29166, 275, 6, 35, "Text",ExpressionUUID->"cd9037ae-f9f7-432d-966e-ca3342581143"],
Cell[1519090, 29174, 1895, 46, 94, "Input",ExpressionUUID->"4c43c260-5d28-4a3f-910c-8eb5e0985df5"],
Cell[CellGroupData[{
Cell[1521010, 29224, 313, 7, 30, "Input",ExpressionUUID->"34ee1980-ee44-468c-93b4-935bf85228f7"],
Cell[1521326, 29233, 747, 16, 37, "Output",ExpressionUUID->"830ce0ed-fb82-418e-a5e6-e69d6796c536"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1522110, 29254, 264, 6, 30, "Input",ExpressionUUID->"a712c0b7-7708-447b-9a4a-daacf412ba08"],
Cell[1522377, 29262, 884, 22, 37, "Output",ExpressionUUID->"d5b56432-ec0f-4a40-b6a2-bef01479d9f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1523298, 29289, 344, 8, 30, "Input",ExpressionUUID->"7c1e2af3-a886-44e1-ab2d-dca171a2ff4a"],
Cell[1523645, 29299, 144300, 2456, 63, "Output",ExpressionUUID->"036a85fd-812e-4498-84e6-fbb6edd57466"]
}, Open  ]],
Cell[1667960, 31758, 227, 5, 35, "Text",ExpressionUUID->"03c53880-423b-41c5-981c-f8a02aaab49e"],
Cell[1668190, 31765, 2620, 65, 241, "Input",ExpressionUUID->"bfb41606-a1ea-4028-a2c6-d1cd3453f02d"],
Cell[1670813, 31832, 309, 7, 35, "Text",ExpressionUUID->"ad611e58-0317-4402-82b8-c6883591c374"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1671171, 31845, 405, 6, 58, "Chapter",ExpressionUUID->"66cb1463-a7b3-4205-8e51-3558b23eb56a"],
Cell[1671579, 31853, 268, 6, 35, "Text",ExpressionUUID->"6f2991cb-9daf-4fdf-95c2-1637905ac92e"],
Cell[CellGroupData[{
Cell[1671872, 31863, 234, 4, 67, "Section",ExpressionUUID->"b9d4f98f-d410-4495-81e7-ce5f667992f2"],
Cell[1672109, 31869, 658, 12, 58, "Text",ExpressionUUID->"5d97056e-38cb-4249-91b8-69fb4c131b2d"],
Cell[1672770, 31883, 966, 26, 30, "Input",ExpressionUUID->"3d033be6-d848-47b5-8414-def9d2199539"],
Cell[1673739, 31911, 228, 5, 35, "Text",ExpressionUUID->"08d796f7-2341-4b77-8b23-86a5d09e79c1"],
Cell[CellGroupData[{
Cell[1673992, 31920, 440, 11, 52, "Input",ExpressionUUID->"b4c11f20-5197-408e-9817-23c832265795"],
Cell[1674435, 31933, 546, 13, 34, "Output",ExpressionUUID->"abcfc3b8-3c71-49bd-85f0-310582f41d58"]
}, Open  ]],
Cell[1674996, 31949, 221, 5, 35, "Text",ExpressionUUID->"a422fe90-90f0-4caa-ba4e-9cce8e180b93"],
Cell[1675220, 31956, 973, 29, 52, "Input",ExpressionUUID->"5c07c2df-96aa-4487-9613-572d7020324a"],
Cell[CellGroupData[{
Cell[1676218, 31989, 338, 9, 30, "Input",ExpressionUUID->"6a2c8197-438f-4d4c-ad73-7784ec824323"],
Cell[1676559, 32000, 662, 17, 34, "Output",ExpressionUUID->"e47a4764-e909-45d7-ba4b-27cff80299a9"]
}, Open  ]],
Cell[1677236, 32020, 506, 9, 35, "Text",ExpressionUUID->"b95b2c38-f25e-4f9e-b6ae-fe1cc345e2f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[1677779, 32034, 213, 4, 53, "Section",ExpressionUUID->"93c2f511-a507-4635-88cc-d0e050860734"],
Cell[1677995, 32040, 605, 10, 58, "Text",ExpressionUUID->"d7a5d193-cbb6-4abf-8983-48f86fb084fc"],
Cell[1678603, 32052, 1055, 22, 219, "Text",ExpressionUUID->"a22c9d37-a302-4555-a0ff-16ce93d236a3"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

