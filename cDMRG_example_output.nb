(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    402037,       7769]
NotebookOptionsPosition[    395363,       7656]
NotebookOutlinePosition[    395756,       7672]
CellTagsIndexPosition[    395713,       7669]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["General definitions", "Chapter",
 CellChangeTimes->{{3.837096566466721*^9, 
  3.837096571674934*^9}},ExpressionUUID->"6c1d040a-894f-4138-9d9a-\
d81b15dbb361"],

Cell["Set to current directory.", "Text",
 CellChangeTimes->{{3.837096611449641*^9, 3.837096656687765*^9}, 
   3.837097320201894*^9},ExpressionUUID->"3047f02f-cf7a-422b-b52d-\
3982f23c04a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837089517547801*^9, 3.83708953617969*^9}, {
   3.837096579573328*^9, 3.837096592990491*^9}, 3.837096662143544*^9},
 CellLabel->
  "In[790]:=",ExpressionUUID->"8f15d4b6-0506-4592-975d-766a40cfeba6"],

Cell["Filenames -- same as in \[OpenCurlyDoubleQuote]cDMRG_input.\
\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.837096611449641*^9, 3.8370966398302393`*^9}, 
   3.837096678871296*^9, {3.837097316770406*^9, 
   3.837097318078116*^9}},ExpressionUUID->"5c0897a1-d82e-4f5e-ad82-\
8cd6e61a447f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"namestr", "[", 
    RowBox[{
     RowBox[{"x_", "?", "StringQ"}], ",", 
     RowBox[{"y_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"\"\<_\>\"", "<>", "x", "<>", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0", "<", "y", "<", "0.001"}], "||", 
       RowBox[{"y", ">=", 
        RowBox[{"10", "^", "4"}]}]}], ",", 
      RowBox[{"\"\<_1E\>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"Rationalize", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", "y"}], "]"}], ",", "0"}], "]"}]}]}], ",", 
      RowBox[{"\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "y", "]"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"namestr", "[", 
    RowBox[{
     RowBox[{"x_", "?", "StringQ"}], ",", 
     RowBox[{"y_", "?", "StringQ"}]}], "]"}], ":=", 
   RowBox[{"\"\<_\>\"", "<>", "x", "<>", "\"\<_\>\"", "<>", "y"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"namestr", "[", 
    RowBox[{"list_", "?", "MatrixQ"}], "]"}], ":=", 
   RowBox[{"StringDrop", "[", 
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"namestr", "@@@", "list"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8370895440813437`*^9, 3.837089547939405*^9}},
 CellLabel->
  "In[691]:=",ExpressionUUID->"82978e16-8a5e-42e8-91ff-3401ed2f9d6e"],

Cell[BoxData[
 RowBox[{"name", ":=", 
  RowBox[{
   RowBox[{"namestr", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<N\>\"", ",", "particles"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<gamma\>\"", ",", "gamma"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Nwells\>\"", ",", "numwells"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<V0\>\"", ",", "V0byEr"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<M\>\"", ",", "numsegments"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<basisparams\>\"", ",", "basisid"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<sweepparams\>\"", ",", "epsid"}], "}"}]}], "}"}], "]"}], 
   "<>", "\"\<_ITensor\>\""}]}]], "Input",
 CellChangeTimes->{{3.837089553047988*^9, 3.837089574828767*^9}, {
  3.83708962082192*^9, 3.8370896215508413`*^9}, {3.837097260273282*^9, 
  3.837097260604705*^9}, {3.837192572661523*^9, 3.83719257292907*^9}},
 CellLabel->
  "In[824]:=",ExpressionUUID->"b66f5d10-dfdb-42b9-adc6-e0bc92cf7705"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<.txt\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<.out\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<.error\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ehistname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<_ehist.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalmeasname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<_finalmeas.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spcorrname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<_spcorrcoef.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nnavgname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<_nnavgcoef.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"entropyname", ":=", 
   RowBox[{"\"\<Runs/\>\"", "<>", "name", "<>", "\"\<_entropy.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiname", ":=", 
   RowBox[{
   "\"\<Runs/\>\"", "<>", "name", "<>", "\"\<_psi_MMAformat.dat\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.837089632868162*^9, 3.83708965221589*^9}, {
  3.837089696225606*^9, 3.8370897477882147`*^9}},
 CellLabel->
  "In[695]:=",ExpressionUUID->"92c870fd-3af8-401a-9858-0a6a378db160"],

Cell["Make a Hermitian matrix/array from the upper half.", "Text",
 CellChangeTimes->{{3.8370969823891897`*^9, 3.837097034037138*^9}, 
   3.8370973135069323`*^9},ExpressionUUID->"7a1afee0-190f-42de-b080-\
cc6c75dc7d56"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"makeHermitian", "[", 
    RowBox[{"upper_", "/;", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"upper", ",", "VectorQ"}], "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Join", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Conjugate", "@", 
        RowBox[{"Reverse", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Reverse", "[", 
            RowBox[{"upper", ",", "2"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "2", "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"Rest", "/@", "upper"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makeHermitian", "[", 
   RowBox[{"upper_", "/;", 
    RowBox[{"VectorQ", "[", 
     RowBox[{"upper", ",", 
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"#", ",", "MatrixQ"}], "]"}], "&"}]}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Join", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"ConjugateTranspose", ",", 
        RowBox[{"Reverse", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Reverse", "[", 
            RowBox[{"upper", ",", "2"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "2", "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"Rest", "/@", "upper"}]}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[704]:=",ExpressionUUID->"6d869ad2-3d52-4490-97c0-3d171820338d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Sample result", "Chapter",
 CellChangeTimes->{{3.837097223687879*^9, 
  3.8370972266254377`*^9}},ExpressionUUID->"13d099c2-5f03-412c-9e8d-\
c737ded150c3"],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.83709713774094*^9, 3.8370971659419317`*^9}, {
  3.837097232810252*^9, 
  3.8370972339959*^9}},ExpressionUUID->"64215894-da02-4988-ab72-4ccb14505e89"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"particles", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numwells", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0byEr", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numsegments", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basisid", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsid", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saveid", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.837089800740593*^9, 3.83708980821095*^9}, {
  3.837097264655014*^9, 3.837097265006179*^9}},
 CellLabel->
  "In[930]:=",ExpressionUUID->"e5fd98f3-9e66-4f67-a1db-25a866174338"]
}, Closed]],

Cell[CellGroupData[{

Cell["Final measurements", "Section",
 CellChangeTimes->{{3.837097184042581*^9, 
  3.837097195527343*^9}},ExpressionUUID->"4b262845-df1e-4930-94f1-\
1792345c18f8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"finalmeas", "=", 
   RowBox[{"Import", "[", "finalmeasname", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{"finalmeas", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837089816261837*^9, 3.837089842206312*^9}, {
  3.837090011255536*^9, 3.837090050793324*^9}, {3.837192608178117*^9, 
  3.8371926217038603`*^9}, {3.837193314330435*^9, 3.83719333343596*^9}},
 CellLabel->
  "In[948]:=",ExpressionUUID->"f46201c1-8d68-42ea-a6f7-42c6c3027a8d"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"sweepnums\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3", ",", "3", ",", "6", ",", "2"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"energies\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"195.69590805963702`18.291581744790864", ",", 
       RowBox[{"\[LeftSkeleton]", "39", "\[RightSkeleton]"}], ",", 
       RowBox[{"\[LeftSkeleton]", "38", "\[RightSkeleton]"}], ",", 
       RowBox[{"\[LeftSkeleton]", "38", "\[RightSkeleton]"}], ",", 
       RowBox[{"\[LeftSkeleton]", "38", "\[RightSkeleton]"}], ",", 
       "251.178052888482199`18.39998168950055"}], "}"}]}], ",", 
    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
    RowBox[{"\<\"CPU time\"\>", "\[Rule]", 
     RowBox[{"\[LeftSkeleton]", "38", "\[RightSkeleton]"}]}], ",", 
    RowBox[{"\<\"avgoccupations\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.5244494107650989`", "}"}], ",", 
       RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}]}], "}"}]}]}], 
   "}"}],
  Short[#, 2]& ]], "Output",
 CellChangeTimes->{{3.837089818740885*^9, 3.8370898430028677`*^9}, {
   3.837090012592448*^9, 3.837090051085297*^9}, 3.83718159540799*^9, {
   3.837192606650642*^9, 3.837192622147275*^9}, 3.837192984047402*^9, {
   3.8371933035813837`*^9, 3.837193333766515*^9}},
 CellLabel->
  "Out[949]//Short=",ExpressionUUID->"b038574a-7c8b-4f21-a36f-58c43b5c44c9"]
}, Open  ]],

Cell["\<\
Number of actual sweeps and final bond dimensions for each DMRG cycle.\
\>", "Text",
 CellChangeTimes->{{3.837097339689163*^9, 
  3.837097378621879*^9}},ExpressionUUID->"15650eda-ed2f-434a-a938-\
d31ee87df31f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"sweepnums", ",", "bonddims"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<sweepnums\>\"", ",", "\"\<bonddims\>\""}], "}"}], "/.", 
   "finalmeas"}]}]], "Input",
 CellChangeTimes->{{3.8370899123677473`*^9, 3.8370899131456413`*^9}, {
  3.837090371913918*^9, 3.837090378100349*^9}, {3.837097397887241*^9, 
  3.8370974071480923`*^9}},
 CellLabel->
  "In[950]:=",ExpressionUUID->"629f3351-4e3f-41f7-a85f-d5c2d7edd0bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "3", ",", "6", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40", ",", "50", ",", "37", ",", "34"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8370899138885307`*^9, 3.8370903789852657`*^9, {3.837097385276038*^9, 
   3.837097407644024*^9}, 3.837181598896476*^9, 3.8371926308756104`*^9, 
   3.837192988610588*^9, 3.8371933421172047`*^9},
 CellLabel->
  "Out[950]=",ExpressionUUID->"f4f322e4-be3b-42bf-8d70-527f814afe6d"]
}, Open  ]],

Cell["CPU- and wall times for each cycle.", "Text",
 CellChangeTimes->{{3.837097339689163*^9, 3.837097378621879*^9}, {
  3.837097420615161*^9, 
  3.8370974474627533`*^9}},ExpressionUUID->"9858c297-6b36-4990-9d9d-\
de18055f454c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<sweeptimesCPU\>\"", ",", "\"\<sweeptimesWall\>\""}], "}"}], 
    "/.", "finalmeas"}], ")"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.837089918536899*^9, 3.8370899560166283`*^9}, {
  3.837096701912694*^9, 3.837096713090687*^9}, {3.837097427093259*^9, 
  3.837097436984206*^9}},
 CellLabel->
  "In[953]:=",ExpressionUUID->"2e4f1739-1f0b-4601-af4a-0b7afafb64d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "4.882606999999999`", ",", "12.758843000000002`", ",", 
     "22.164042000000002`", ",", "21.950159999999997`", ",", "28.531996`", 
     ",", "4.538111000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.082167999999999`", ",", "13.492147`", ",", "23.775956`", ",", 
     "22.983303`", ",", "30.149361999999996`", ",", "4.7582140000000095`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.837089928627234*^9, 3.8370899564534397`*^9}, 
   3.837090063095396*^9, {3.837096702667123*^9, 3.837096713849926*^9}, 
   3.837097437437284*^9, 3.837181623012211*^9, 3.8371926400986843`*^9, 
   3.837192994346133*^9, 3.837193355417514*^9},
 CellLabel->
  "Out[953]=",ExpressionUUID->"706bc383-880c-417d-a209-2249c9cebdd1"]
}, Open  ]],

Cell["Average occupation of all basis states.", "Text",
 CellChangeTimes->{{3.837097339689163*^9, 3.837097378621879*^9}, {
  3.837097420615161*^9, 3.8370974474627533`*^9}, {3.837097488865114*^9, 
  3.837097500682292*^9}},ExpressionUUID->"22a122b4-9427-484f-9ef5-\
6e48c815f931"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\"\<avgoccupations\>\"", "/.", "finalmeas"}], ")"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Black", ",", "15"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[OverscriptBox[\(N\), \(_\)], \(n, \
k\)]\)\>\""}], "}"}]}], ")"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "360"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<n = \>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}]}], ",", "Black", ",", "15"}], 
        "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "10"}], "]"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.837091399953291*^9, 3.837091437150805*^9}, {
  3.837091482796152*^9, 3.8370915516572742`*^9}, {3.837091600544063*^9, 
  3.837091600815773*^9}, {3.837091836268668*^9, 3.83709184378386*^9}, {
  3.837095272553199*^9, 3.837095278211258*^9}, {3.8370975085847588`*^9, 
  3.83709754597326*^9}},
 CellLabel->
  "In[954]:=",ExpressionUUID->"1e2519ed-f254-47a3-8dfc-4d81ee94985a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -0.6454063081043785}, {0., -0.6454063081043785}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -0.8606935857898438}, {
         0.6931471805599453, -3.5833695485727177`}, {
         1.0986122886681098`, -7.660357644227729}, {
         1.3862943611198906`, -9.687724474321659}, {
         1.6094379124341003`, -14.935581836939457`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -3.737338248280985}, {
         0.6931471805599453, -7.899541447932052}, {
         1.0986122886681098`, -9.457814886484165}, {
         1.3862943611198906`, -12.169437403407807`}, {
         1.6094379124341003`, -11.9348198547927}, {
         1.791759469228055, -13.516432400062131`}, {
         1.9459101490553132`, -12.686669932909304`}, {
         2.0794415416798357`, -14.131905164172307`}, {
         2.1972245773362196`, -16.69090917257991}, {
         2.302585092994046, -19.544713330472057`}, {
         2.3978952727983707`, -15.647463124822195`}, {
         2.4849066497880004`, -21.439460558344567`}, {
         2.5649493574615367`, -21.645404226844533`}, {
         2.6390573296152584`, -20.929603941039385`}, {
         2.70805020110221, -20.517207408690016`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQPM2z98m3ZV6cB7y1//nPSe2RsIhwXVe2sf4GZe
W/Vq8kd770MHT2se14XKf7NffOzBZi5ZowPGvW+/Ox74ab/WaPezC7eNDjAp
aP3iXv3H/u6kV1v2rTU6EB5ltK5I6b+9Q5julB3bDA8Ur7a237SIwYHvvuT0
8jIjqPmMDk/e3p9y8b/hAbHQrbs3ZjM5SCm79BckmR/wMa/f/liP2eEj48yz
TmIWB2rnXd4j9pDZobB1zVu1n6YHAnsMtVlaWRycMkyEOZtNDyzffV3slAyr
gwRjUGfSetMD8h6+lmKrWB2esTVfSj1hCnU/m4NRZlBavK/Jgar6XwezV7E5
HD7i8fYPi+mBtonZVtXy7A72sjyWpQyWB3Q2s7CZ9bE7bC7jdC9Tsjww8XFx
tdN3doeUb5PS376yPLBxXf4UvWgOh73r7wc3pFkfOHHUtrxkF4fDMXOzTV2t
Zgc+bL74t1aU02HvZXVuuXmWB37qTKpZnsPpMD3UI/pptw00/DgdeJep8f17
bnHgrNSHV1MEuBwuJXRMb5ludWBCC/OO+7FcDhNX9x+bk2l9QNlr2rWoFVwO
y3ZFlnp+tDwg/+/saYsPXA5FR+YVMu+2OTD7GvfPZabcDvVuNvPLXlgfiNKe
6HGugtuhNtlTd6W25YHsEzv2Xd7J7RDxR9/ts4HNgYs7rn658YPbYXbGuSNq
ufYHvvHubPxjyuMgM6FqZayy1YGjn/mDowp5HB6vq1wQOMP+AAAGZgXQ
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -18.340248689776324`}, {
         0.6931471805599453, -23.69245793740884}, {
         1.0986122886681098`, -23.46519306416299}, {
         1.3862943611198906`, -28.633108054320214`}, {
         1.6094379124341003`, -25.39311855444107}, {
         1.791759469228055, -26.833998271557853`}, {
         1.9459101490553132`, -26.99295729773542}, {
         2.0794415416798357`, -26.587815834532176`}, {
         2.1972245773362196`, -29.86012343216279}, {
         2.302585092994046, -27.434745291050643`}}]}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], {{{0., -0.6454063081043785}}, {{
         0., -0.6454063081043785}}}]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.72]], {{{0., -0.8606935857898438}}, {{
         0.6931471805599453, -3.5833695485727177`}}, {{
         1.0986122886681098`, -7.660357644227729}}, {{
         1.3862943611198906`, -9.687724474321659}}, {{
         1.6094379124341003`, -14.935581836939457`}}}]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[8.16]], {{{0., -3.737338248280985}}, {{
         0.6931471805599453, -7.899541447932052}}, {{
         1.0986122886681098`, -9.457814886484165}}, {{
         1.3862943611198906`, -12.169437403407807`}}, {{
         1.6094379124341003`, -11.9348198547927}}, {{
         1.791759469228055, -13.516432400062131`}}, {{
         1.9459101490553132`, -12.686669932909304`}}, {{
         2.0794415416798357`, -14.131905164172307`}}, {{
         2.1972245773362196`, -16.69090917257991}}, {{
         2.302585092994046, -19.544713330472057`}}, {{
         2.3978952727983707`, -15.647463124822195`}}, {{
         2.4849066497880004`, -21.439460558344567`}}, {{
         2.5649493574615367`, -21.645404226844533`}}, {{
         2.6390573296152584`, -20.929603941039385`}}, {{
         2.70805020110221, -20.517207408690016`}}}]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}, {{0, 
                  1}, {-1, -0.7320508075688772}, {
                  1, -0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[7.6]], CompressedData["
1:eJxTTMoPSmVmYGBQBmJGIGZiQADm7R++TbuqdOC95a9/TnrP7A2Ew4LqvbUP
cDOvrXo1+aO996GDpzWP60Llv9kvPvZgM5es0QHj3rffHQ/8tF9rtPvZhdtG
B5gUtH5xr/5jf3fSqy371hodCI8yWlek9N/eIUx3yo5thgeKV1vbb1rE4MB3
X3J6eZkR1HxGhydv70+5+N/wgFjo1t0bs5kcpJRd+guSzA/4mNdvf6zH7PCR
ceZZJzGLA7XzLu8Re8jsUNi65q3aT9MDgT2G2iytLA5OGSbCnM2mB5bvvi52
SobVQYIxqDNpvekBeQ9fS7FVrA7P2JovpZ4whbqfzcEoMygt3tfkQFX9r4PZ
q9gcDh/xePuHxfRA28Rsq2p5dgd7WR7LUgbLAzqbWdjM+tgdNpdxupcpWR6Y
+Li42uk7u0PKt0npb19ZHti4Ln+KXjSHw97194Mb0qwPnDhqW16yi8PhmLnZ
pq5WswMfNl/8WyvK6bD3sjq33DzLAz91JtUsz+F0mB7qEf202wYafpwOvMvU
+P49tzhwVurDqykCXA6XEjqmt0y3OjChhXnH/Vguh4mr+4/NybQ+oOw17VrU
Ci6HZbsiSz0/Wh6Q/3f2tMUHLoeiI/MKmXfbHJh9jfvnMlNuh3o3m/llL6wP
RGlP9DhXwe1Qm+ypu1Lb8kD2iR37Lu/kdoj4o+/22cDmwMUdV7/c+MHtMDvj
3BG1XPsD33h3Nv4x5XGQmVC1MlbZ6sDRz/zBUYU8Do/XVS4InGF/AAASGgXS

         "]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}}, {{
                  0, -1}, {-1, 0.7320508075688772}, {
                  1, 0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[7.68]], {{{0., -18.340248689776324`}}, {{
         0.6931471805599453, -23.69245793740884}}, {{
         1.0986122886681098`, -23.46519306416299}}, {{
         1.3862943611198906`, -28.633108054320214`}}, {{
         1.6094379124341003`, -25.39311855444107}}, {{
         1.791759469228055, -26.833998271557853`}}, {{
         1.9459101490553132`, -26.99295729773542}}, {{
         2.0794415416798357`, -26.587815834532176`}}, {{
         2.1972245773362196`, -29.86012343216279}}, {{
         2.302585092994046, -27.434745291050643`}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox["\"k\"", 
         GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], 
       FormBox[
        StyleBox[
        "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(N\\), \\(_\\)], \\(n, k\\)]\
\\)\"", 
         GrayLevel[0], 15, StripOnInput -> False], TraditionalForm]}, 
     AxesOrigin -> {-0.1496826223804137, -34.016976523209735`}, AxesStyle -> 
     AbsoluteThickness[1], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 360, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-0.1496826223804137, 
      3.5553480614894135`}, {-34.016976523209735`, -0.6454063081043785}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, TicksStyle -> Directive[
       GrayLevel[0], 13]}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"n = 0\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 1\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 2\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 3\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 4\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 5\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 6\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 7\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 8\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 9\"", 
        GrayLevel[0], 15, StripOnInput -> False], 
       StyleBox["\"n = 10\"", 
        GrayLevel[0], 15, StripOnInput -> False]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.272}, {20, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.72}, {20, 6.72}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.72}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.051309523809523805`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.16}, {20, 8.16}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.16}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.03009803921568628] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7.6}, {20, 7.6}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7.6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.002105263157894735] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7.68}, {20, 7.68}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7.68}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.006354166666666661] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "6.72`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8.16`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "7.6`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "7.68`", "]"}]}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.83709138595854*^9, 3.837091437579336*^9, {3.837091519947781*^9, 
   3.8370915436031837`*^9}, 3.837091601620845*^9, {3.837091837050802*^9, 
   3.837091844351335*^9}, {3.837095272988557*^9, 3.8370952786495743`*^9}, 
   3.837097505050426*^9, 3.837097546908347*^9, 3.8371816258915367`*^9, 
   3.837192643206539*^9, 3.837193006889495*^9, 3.83719335937761*^9},
 CellLabel->
  "Out[954]=",ExpressionUUID->"94a092dd-90de-4c1b-9d04-cbb09be6a93a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Energy variation", "Section",
 CellChangeTimes->{{3.837097184042581*^9, 3.837097195527343*^9}, {
  3.837097582697118*^9, 
  3.837097587779236*^9}},ExpressionUUID->"1a08d85c-094a-4ac8-9524-\
35bbd877a2b5"],

Cell["Energy and discontinuity after each DMRG step.", "Text",
 CellChangeTimes->{{3.837097815098172*^9, 
  3.837097822138359*^9}},ExpressionUUID->"53de8964-6277-48c1-9fa3-\
4b82642ba3af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ehist", "=", 
   RowBox[{"Import", "[", "ehistname", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"Rest", "@", "ehist"}], ",", "4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837090091872507*^9, 3.837090145894985*^9}},
 CellLabel->
  "In[955]:=",ExpressionUUID->"32c66878-ecdd-4f51-a613-e66d0f581868"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"Ewpenalty\"\>", "\[Rule]", 
       "667.1609732197766789`18.824230633536423"}], ",", 
      RowBox[{"\<\"disc\"\>", "\[Rule]", 
       "49.5850679158682865`17.69535091241599"}], ",", 
      RowBox[{"\<\"E\"\>", "\[Rule]", 
       "171.3102940610976077`18.233783460569757"}], ",", 
      RowBox[{"\<\"center\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"dir\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"cputime\"\>", "\[Rule]", "0.002907`"}], ",", 
      RowBox[{"\<\"walltime\"\>", "\[Rule]", "0.005806`"}], ",", 
      RowBox[{"\<\"bonddim\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"eps\"\>", "\[Rule]", "0.1`"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "250", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"Ewpenalty\"\>", "\[Rule]", 
       "251.1785322609054845`18.39998251834924"}], ",", 
      RowBox[{"\<\"disc\"\>", "\[Rule]", "4.793733`*^-10"}], ",", 
      RowBox[{"\<\"E\"\>", "\[Rule]", 
       "251.178052888482199`18.39998168950055"}], ",", 
      RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",", 
      RowBox[{"\<\"walltime\"\>", "\[Rule]", "2.2750989999999973`"}], ",", 
      RowBox[{"\<\"bonddim\"\>", "\[Rule]", "12"}], ",", 
      RowBox[{"\<\"eps\"\>", "\[Rule]", "1.`*^-6"}]}], "}"}]}], "}"}],
  Short[#, 4]& ]], "Output",
 CellChangeTimes->{{3.837090094051296*^9, 3.837090146361495*^9}, 
   3.837181631912203*^9, 3.83719265431353*^9, 3.837193010834691*^9, 
   3.837193363930584*^9},
 CellLabel->
  "Out[956]//Short=",ExpressionUUID->"4a2e8816-9ea9-4bfe-962e-aa58281a54e5"]
}, Open  ]],

Cell[TextData[{
 "We rescale by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", 
    SubscriptBox["E", "r"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a1a45f20-16dc-4f64-a075-ffeb5e1b5458"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "r"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f42399c9-c235-4bf9-ba53-ea5c9fb3dffc"],
 " is the recoil energy."
}], "Text",
 CellChangeTimes->{{3.837097828004814*^9, 
  3.837097851228074*^9}},ExpressionUUID->"f80fc621-9bbe-4dc4-a2de-\
06a9cf225a6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Er", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"numwells", "*", "\[Pi]"}], ")"}], "^", "2."}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Econt", ",", "Edisc"}], "}"}], "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<disc\>\""}], "}"}], "/.", "ehist"}], 
     "]"}], "/", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"particles", "*", "Er"}], ",", "Er"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.837090176612791*^9, 3.837090212393611*^9}, {
  3.8370903403690233`*^9, 3.837090341020274*^9}, {3.837090764557852*^9, 
  3.837090780962326*^9}, {3.837097897885079*^9, 3.8370978986674147`*^9}},
 CellLabel->
  "In[957]:=",ExpressionUUID->"e10ad860-f814-4bbe-951a-1398b61901f3"],

Cell[TextData[{
 "Energy ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "c"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "34dd2f62-3cb3-4014-9145-5e4302958feb"],
 " and discontinuity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "disc"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c9169a45-40ec-4d98-9a85-5782663456e3"],
 ", as defined in the paper."
}], "Text",
 CellChangeTimes->{{3.837097937489609*^9, 3.837098002094355*^9}, {
  3.837098050323524*^9, 
  3.8370980507663193`*^9}},ExpressionUUID->"43a09fe3-c80f-4df6-88a6-\
bec99af7b586"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"Econt", ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Total", "[", "sweepnums", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", "Black", ",", "15"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Sweeps\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(E\), \(c\)]\) / (N \
\!\(\*SubscriptBox[\(E\), \(r\)]\))\>\""}], "}"}]}], ")"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Most", "@", 
           RowBox[{"Accumulate", "[", "sweepnums", "]"}]}], ",", 
          RowBox[{"{", "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "365"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "1", "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLogPlot", "[", 
      RowBox[{"Edisc", ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Total", "[", "sweepnums", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", "Black", ",", "15"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Sweeps\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(E\), \(disc\)]\) /(N \
\!\(\*SubscriptBox[\(E\), \(r\)]\))\>\""}], "}"}]}], ")"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Most", "@", 
           RowBox[{"Accumulate", "[", "sweepnums", "]"}]}], ",", 
          RowBox[{"{", "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "372"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "1", "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "20", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8370904040032*^9, 3.837090463624365*^9}, {
  3.8370905029018383`*^9, 3.8370905653969393`*^9}, {3.837090828097067*^9, 
  3.83709085334822*^9}, {3.837090893132122*^9, 3.8370909637081823`*^9}, {
  3.8370913036418*^9, 3.8370913205750637`*^9}, {3.83709516234676*^9, 
  3.837095182143569*^9}, {3.837096237299786*^9, 3.837096237780675*^9}, {
  3.83709789992618*^9, 3.837097900475275*^9}},
 CellLabel->
  "In[959]:=",ExpressionUUID->"5b84004b-5a55-4ebd-96b1-4b579dee0341"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{20}, "Spacer1"], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxN1QtcjOkeB/AucomS7jdppplu02XGJZfw/g5l1Tm7bLuRYl2LljLNHA7S
BTkoqyQkRUdpC1sJ2bVYaq3Lrk4Xl01ETWqGYsutRew0M8/z7Hym+vzmed/n
+/8/z/NOvCWrQyIN9PT0+tQ//X/JS1/z+xGXKQhSvys4Wevm4RsjWnS5ipv4
eXrjp4o2rqkyRv3+lSvPH94d7dGqG6/nzMOCWtvLH3Oa4aY73HTzNwHmL1t1
1zdxc0uuOq3LaOf0dI7HfpNfJ/2s0N3fyrWc/KNkW5WC08TMNm7DjxaeOy4p
dPO1c1KDabNunlNwmmGBiitKqHgSoL5fO/9T7sJn0bd/u6jgNJdXdnEPY9OP
lKnHtd4f3JFQ309e3SD3d3PPXPWn9Nwkfg/X3OHvPqqGzPeCE8QPiplRS+p5
yaXZP/ebVkfmf8WdkvZsk9WT+l5zBlklH4oaiNfLyf79ZY6qgXh/cqXBlWGd
DcR7y63Q961SNhDvHRfT9Rn/VgPx3nO/GM8d3tFAvD5OKH/If9tAvA9cZ9Dj
AP1bxNPDaEcrk/6svV8P96+qVkcs6tD5+lhx8ePjhbOUuvn0MVdpsuPuR6Wu
HgMEmuZ1lSapdPMb4HxG1rbtL5W6+gxh+rXe6YoCpc4bgNxvDkXtzFbqvAF4
6r7mX1X7ldxMzYRGOF52eVzfHuIZgaueFJK1k3gDwc0JGhebptR5A1H4j5W7
ancouXuaDwYhwCG5UJZKvME4IfxQmKLOQo03GPvej+Uy1Vnb3xCM+v9c7+2p
xBuCeStb921IJZ4x6v0q125U57OaC4xx9ZlxnjyV9DcUlfX8eTnq/FHzGorQ
vFfnD6SS/oYh8ITfwQPUM4FeZI7fQeqZwMZyh39/3q25wRQX4wJU/VnbnymS
xfyyXHW+r/lgOL4yLZqYS/szwySbM2tyab1m0BMcvWzdSnwzZHeVm1u9J/Wb
4Vv7lfoKY5WunhG4G3VruvEUla6fEXhp35Hjv1Clq28EXhsm5fbOV+k8c7if
5u/9XJ21njkGD528uytCpfPMccU2TV4aQc6DOQK9ylzWRhDPAuvF6xsDIohn
gXzxgy094cSzwMDeJQVt4cSzRFJSVG5tOPEs4aCyz7gTTjxLuK78EHMlnHiW
GKE8nXROnbXnyQobxsUfOxpOPCuckTytOUI9KxgMswrYp87a/bPC1jcLDm+n
njWeh10pT6WeNU4lFuSmUs8aejMWjd5KPRvwJFYJKeqsPY82yB/gW7FJnWM1
ng0G70/UT6H92aLZMKxxM/VsIXGrM+0f155XW+xPKylMVmft/tniaFfo1P6s
XU87dFyvKU2i/dlBv9JhXSLtzw4TLJ7pJ1HPHj8sNpuYQD17xE740ziR9mcP
aei7JwnUs8fE2D3DE6nngJq0y56J1HOAd8HA4wnUc8DWhe9tE+l6OiDoLv81
8xxR2jnR9ehS4jmivkhWWBhJ1tMRit/XXipcTryRSOWdzg5dRbyRsJNnyXvj
iDcS9nuu5CXHEW8krh0aPlBPnbXPkxMCmqd4KKXEc0LC3ntlNVLiOSHy/oid
l6Vk/0ah1s7a84w6a5+3UfAvvLPypJTs3yi0pZ/NKZOS9XSGtSj4eKmU1OuM
GSfWl/Znbb/O2BjtFNKftfU7Q3X1lPw7Wo8zLj98Nb5ESvpxRlLU+JL+67Xr
74z/nOJNP0E9Hoz86+OPU4+HsALzAcepx8MXwoONx6jHw6KqRqdj1OMhKV5k
xTwejhryQ0roevCwb2bmsBLq8VF9zrmtmHp8DHKXtxRTjw/P0Jbfi6nHh82G
urRi6vERPXnLxGLq8bH7UPTKYurxER+dt6qYei5wmG8RxzwXLDV9sIB5Lsiv
uzSPeS74wSI9iHkusGq4Hcs8F5x0W72MeS64MC1jEfMEqBuVuJR5AqxbxHuX
Hkc8AYReFmsr4ognwJbyuvf6MuIJ4Ovwc7FIRjwBlvw4+NFsGfEEqLqYbSuV
kfMpwOSgp0feysh5E2J2cE7paxnxhDiSP6PypYx4Qpzdvze7h3pCzBKoAnuo
J8R4+/Ll3dQTImStw5Ju6glheCEwtJt6rtg1rS+km3quqM3cNbU/a8+7KxT1
xyK7qeeKqkbH+c9k5Py7ImmKaHUn9VyxZezoNSoZWU83dBstC1ZST50fe4cp
qeeGp5Nm13TIyPejGy6eK0ttl5HvOzfYf9+wt516bnizIWNzf9Y+D24wvrt9
Szv13PFu+k+ace12uGN/uTC5nXrumNJ5Ir6drqc7Zh0+t4l57jhff9aPee5w
rDtoyTz1eFXX+zbqeSDb5f6dNup5YP13LpVt1PNAQMWNojbqeQAJdvFtdD09
kGV1O7aN7p8Hmk8YLm+jnge+3RQRzTxPXM3btoJ5nlhs4xXFPE+IapyimOcJ
wwUpkczzxJvnI0OY54mCYZdmMs8T16P+Z8I8EXr75C8U1BMhc4JZj4J6IgQH
P3+uoJ4INwfUdiqoJ4J3SqAmaz0Rrs2e3KKg50WEAy0xjxT0fIrw04udTczz
wphrvfeY54U1gxY2Ms8L/3Se/4B5XhCO3v6AeV44bObwgHlesCk7Vs48L6iC
nxUxzxvK38YUMs8bzRsmH2GeN+K2RB5injf2KsbkM88bs6xNDzLPG/yg3gPM
88Z9x2fZCvo8+GBVa54ma/8/+eDTG0P3Mc8HdanFWczzQdHiYdnM84F/i9ke
5vmg9Zc56czzQV/Psm+Y5wvVV3N2Ms8XOV1paQr6vPtC6HdyK/N8sdg95L8K
+jz4Il5/zFbm+WKaYUaKgp4XMY7vkabQ+83FcMnn8t/S9RVj6ZBd8/pI/X5i
SO/yXhjIyXqLke/2SaORXHceI8RY+P2XR4fKyXqIET34Y5yJXOcli9FzcsIF
RzmpVwybIYs0WRMLxfj6VYEma9dLjAsGBy46Eu+6GHrrjS85Eq9JjPZ2z2pH
4nWJ0bTYVpO1/UnwcIh/NfXMJRi73beaegIJmlPE1dTzk2Cgy7xq6gVJMKFm
nSZr2omQYN2yRObFSPDSSMa8ZAnWVn3BvEwJalbPZF6hBPWv/JhXqR73FTHv
unq+XmfmNUlw8LrD3/qTYOpd67/1NxpPOi00+S96SmDq
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.4835090921142971}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(c\\)]\\) / (N \
\\!\\(\\*SubscriptBox[\\(E\\), \\(r\\)]\\))\"", 
          GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}, {
       
        FormBox[
         StyleBox["\"Sweeps\"", 
          GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}}, 
     FrameStyle -> AbsoluteThickness[1], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[
       GrayLevel[0], 13], GridLines -> {{2, 4, 7, 10, 16}, {}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 365, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 18.}, {0.4835090921142971, 0.7968363419426586}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF1QlYU1caBmA2QUhQZN8CCSQkJCwJe0TnfqMyllaxrU6ZYqWKgguDAi6I
K1YFW62tUCtWRanaigqCg7QVlUjVotCyugKCS6UurGJRsNJL7jl38oSH58+5
57z/d+65iSRu2fvxRgYGBn+xfyP/6evwgopv2u9dq8iWRrLv00xxsuyy6ZVW
Ulcyvxe5zVSJH1c0lyWx72rmC/WPB2xcnpLxBiYz/Ybsx/oXFfrh5hvMQJ5B
4fuxA+T6ZqappOh+cqGpjtPamZnrJ0edK7DQcfPvMwfTTtRF11jo9GX2Q+ZE
S1VPXJeFjpv+iClImXVc8C+BTj8sfcx8fVvqG5Yt0HHrP2V2LTVee6tOoNNf
XtbJnBt70tvFVki8HibIcdrvHjOEZH4vkxlh6jkuRkj8PsZcvj62h6259Z4z
1mv673bMF5J++pmMDasSehYKyfovmDNJS/L8koSkvz8Zuca3bFMK9V4yRh/H
GyelUu8VM+uAR/GqVOoNMmbtbgVLUqk3xAQe8rX2TKXeayba2F2akEq9v5g2
x4rmglTqvWE+/e/orspU6hkgcOuQTyU/3wA1+2OXOT21Ir4h/B8W5E9fa03W
M8SEllWzdjjZkn6M8EdFfXLmHnuyvhHmRI66FefoSvozxsQxV5fOqRURzwSt
3eHzX54REc8E92Ze6Vt+WqR7S7/gKDxacKA482cR8UahN8+wfXyriHimyBwI
OVb9REQ8U0xrcbjt1C3S3dF/YIaA4uht615SbzTabxpFz34l0sn03mhkpbam
3WJrLp85as9fe3PwFfXMYXBhXsGHr6hngZ0VezfUsfUP+gsskBwhf8EMikg+
AR72O35VPiTSDetfAiROTkkuG6L5hMjJN5pyZoh6lgiTFA7/PEQ9SyQZ3m+6
xNa79BPGIOp5jah6iOYbg0C3CbMa2LpF/8FYnJobGfPbEM1nBbnlibS6Idqv
FT7ISjxsaCYmvhUOmVed6/1ITPq3guHkmValZ8Skn3EQe3wWaP6VhOQZh9AC
sdSt0Iv0Nw77lyec73gmJ541TO8tvTLDVEE8axyctjU7y0RBPGtELBEWHBql
IP1b42Hy6gYbMwXxbDDJ+k7F6DEK4tnAubx5f7aFgng2uH20v11lqSCeLaY3
3D5xR0A9WxwdtZe5akk9W1R2flBbIqSeLSIMC8oeszV3nuxQG7kzJUhAPTvE
HR+nmi6knh3qXx08U8OOc/fPDqUBB3sZC+rZ48PjyWZ9FtSzx431n5pnCahn
j4RAo5W2Auo5YMfA8xNz2Jo7jw744MG3/5nJ1kv1ngO25D74oktA8zlCuOlm
0V0+nyNKJIG3xGx/3Hl1RNCWkxtK2XHu/jkicFnunEsCup9OOBd0dPgyn88J
D+LzT34voPmcMC5jb9gd3nPG8vPNHbm854zS7pizFQKazxkdA6pTl3jPGcf2
dFXV854LLgnmTb3Ley4QXexJqec9F0yqdbX8g99PF/jUer/zkPdc4T86qDXc
1pt4rvhu+rZ3T8d4k/10RWH/6RcXy7yJJ0LOd4m90WuVxBNhi0ndl233VcQT
IUTy+GbicjXxREhL6097kq4mz5Mb4PIw1WGtmnhuWKAbFj7aoSaeG3YppULF
bjW5f+6wblv77/171OR5c0fNOuHbz3LV5P65o3hj5x++e9VkP8WYb/Bl/zS2
5voV44vkXy5+x9ZcXjHsPwnrr2Frrn8x8tsjhkv20n7ESEufelbArs/lEWNB
XveS+INqsv9iBNQN/O9BHvUksPQY3FSdRz0JPhy7uKgoj3oSzFrxT4/WPOpJ
8PPpmoZjedSTYOK8+E/s86gnQV3zzTsb8+h+SNBR+Loljvc8oPx1a1wc73ng
8BEv/+W854FfV9SdTuM9D8xIWb07ivc80FEa/cKb9zzg+MMvk1byngdWn2fy
P+c9T7gWjy3fx3ueCNwbIM3mPU/UNvxZkMt7nihoPLxmN+95IqW5ZM8F3vPE
JyfzV1Twnid6HshqK3lPiuicGbf+v59S6Jx32vVJNMSToivpva+14RriSdGy
wbhq/UYN8aT4R5D95rknNMSTQpRzPDy9TUM8KfyuzXXuNw0g51OKWTuynyZa
BJPzJsOF2+X9a4TBxJOh4JvH4YOuwcSTYf395bKFnsHEk8HPcNukN+pg4skw
GFnd7RAQTDwZtruMmj/I1pwng22Q7c6BAOp5Ybi+NcYukHpeMDSfOEbHjnPn
3QsNfWbXLIKp54V5bVdSethx7vx7IcriQubiQOp5oe/zR51GbD/cfsrx/dE/
X5/3pZ4cPa4/qWYHUE+OnP6mfQkhweT7UY7Yu8uuXmfX477v2Ou9VgYUhVJP
jrR1xZ8vZmvueZAj6t62pO2h1FNA2Txl2xG25m6HAvURT+YVhFJPgfK25KDd
oXQ/FXhZGJfQGUo9BTTN1pUZIdRTYG3rQEc07ykwcXip8bvB1PNGt1WVyeoQ
6nnj5XvX5o3M5zxvZO5bODojjHrekAaGTd0fRvfTG04x2iQLLb1/3kivfLqs
N4x63tgcdfmItZZ6Shx3cGuQa6mnxJkgx+cqLfWUEO1cMBykpZ4SJdMyFk7R
Uk+Jj3v6U+6GUU+J0skxWSPrc54SdZ45A7Iw6qkwVKQa6x5GPRU2na2YuTmM
eiq8JZ7b0sTnU6E774pNGO+p8Cx0engcn0+FhCj5FYmWnhcVbvbkJyq09Hyq
MHnLGrWSz+eDwKKq6+Dz+aB8SfX4iXw+HxgpD2xI5D0fjM8Sb9zAez644PdZ
cgnv+WDKpw2HLodRzwdx6//KuMzn88XWYaVnC5/PF5N2z9hmxnu++Ch+e9sb
/v75omOHSYUj7/ki6ktDuQHv+WKXQVusEZ/PF3W9j8XGWvo8+GG+1bLykfW5
3yc/yLfGSgx4zw/XI6ZUmPD5/FA0PiPXm/f8ELrYUGnLe34oPXevaSzv+SFL
UN1mw3v+OP46vMuZ9/zxLXM4a+Q8cc+7P5JdK3KFvOeP4oQxXSP5uOfBHzmR
vznZ8Z4/cjs//sGOP59qDF5sMnei863VWPl8n19JOd1fNfxin43JqyP9h6jx
i9hI/dIwhOy3GglTzQaq3EO48zhbjVW3h059tCiE7Icav71o723YHMJ5GWqo
D8x1vl6jJf2y823yJ3Sxtb48osbQdtH5t3/Vkv1SY+6ikG/b2FrvXVVjUX/6
E6d6LTn/arxzy3B1cqOW8zrVmOxX5RnP1lw+DfpvzGma30g8aw0ydCvaR8a5
fBr85B57Y10j8UI0sI/ebfxZI/EiNYhZkO5TyNb6OLM1OKv9/Ukx9ZI0+HqR
3a4C6mVokPna98fD1MvWIGDO5c3HqHdEg607CwWnqFemQZNJn2Ul9a5qIDs0
4eZP1GvWYKmVsFHH59OgLL219h6fLwD5E4+83cjWfwMJlhK6
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {{2, 4, 7, 10, 16}, {}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -27.832390558413437`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(disc\\)]\\) /(N \
\\!\\(\\*SubscriptBox[\\(E\\), \\(r\\)]\\))\"", 
          GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}, {
       
        FormBox[
         StyleBox["\"Sweeps\"", 
          GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}}, 
     FrameStyle -> AbsoluteThickness[1], FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, FrameTicksStyle -> Directive[
       GrayLevel[0], 13], GridLines -> {{2, 4, 7, 10, 16}, {}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 372, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 18.}, {-27.832390558413437`, -0.21001823001896466`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.837090400913988*^9, 3.837090463924423*^9}, {
   3.837090518899255*^9, 3.8370905661628637`*^9}, {3.837090770159676*^9, 
   3.837090781942391*^9}, {3.837090829262582*^9, 3.837090853773676*^9}, {
   3.837090900289942*^9, 3.837090964271202*^9}, {3.837091307199*^9, 
   3.837091321133333*^9}, {3.8370951662305937`*^9, 3.837095182440465*^9}, 
   3.837096238425152*^9, 3.8370979030768538`*^9, 3.837181640290255*^9, 
   3.837192660432987*^9, 3.837193028495879*^9, 3.837193367768525*^9},
 CellLabel->
  "Out[959]=",ExpressionUUID->"77d78697-10fb-470b-98df-9b3c67c557c5"]
}, Open  ]],

Cell[TextData[{
 "Asymptotic value: As described in the paper, the energy  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "c"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "96a63b03-72d7-4d76-a960-611169b3a6b4"],
 " at the end of each cycle approaches an asymptotic value ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["E", "*"], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d65172b9-cc25-41d3-8bff-5da95a5d6ee9"],
 "as ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "*"], "=", 
      RowBox[{"E", "-", 
       RowBox[{"\[Eta]", "/", "\[CapitalLambda]"}]}]}], ","}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0b38b46f-684b-4e74-9925-bd10876742fc"],
 " where \[Eta] is a constant and \[CapitalLambda] is the penalty for \
discontinuities.  Thus, we can calculate  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "*"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4f9a00fe-b678-492b-970f-7de61d7dfcbb"],
 " from the final energies in the last two cycles."
}], "Text",
 CellChangeTimes->{{3.8370980203126574`*^9, 
  3.8370982629207373`*^9}},ExpressionUUID->"94fdffa1-ed60-4bd2-9b17-\
0abf88f8e398"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"finalens", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<energies\>\"", "/.", "finalmeas"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"particles", "*", "Er"}], ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"final", " ", "energies", " ", "in", " ", "each", " ", "cycle"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsvals", "=", 
   RowBox[{"\"\<eps\>\"", "/.", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<Parameters/epstable.m\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"epsid", ",", "2"}], "]"}], "]"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"\[CapitalLambda]", " ", "L"}], ")"}]}], " ", "in", " ", "each",
     " ", "cycle"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Estar", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"epsvals", "[", 
        RowBox[{"[", 
         RowBox[{"-", "2"}], "]"}], "]"}], "*", 
       RowBox[{"finalens", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"epsvals", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "*", 
       RowBox[{"finalens", "[", 
        RowBox[{"[", 
         RowBox[{"-", "2"}], "]"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"epsvals", "[", 
       RowBox[{"[", 
        RowBox[{"-", "2"}], "]"}], "]"}], "-", 
      RowBox[{"epsvals", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], " ", 
    RowBox[{"(*", 
     RowBox[{"asymptotic", " ", "value"}], "*)"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.837095583415669*^9, 3.837095590855948*^9}, {
  3.837095938475556*^9, 3.837096048122373*^9}, {3.837096100280498*^9, 
  3.837096105743202*^9}, {3.837098274930526*^9, 3.837098321796646*^9}},
 CellLabel->
  "In[960]:=",ExpressionUUID->"83931dd2-fd58-4677-b849-e80e70668c59"],

Cell[BoxData["0.7953048336709921`"], "Output",
 CellChangeTimes->{3.8370960213454723`*^9, 3.837096108102441*^9, 
  3.837098322714332*^9, 3.837181643240157*^9, 3.837192664788334*^9, 
  3.837193033319852*^9, 3.8371933779709167`*^9},
 CellLabel->
  "Out[961]=",ExpressionUUID->"a9ae45ef-c837-464b-9e7a-50ddbeea6a91"]
}, Open  ]],

Cell[TextData[{
 "Check that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "c"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c50383a1-763a-482a-8cd3-60163715859b"],
 " approaches ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "*"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44443ef0-db6b-41ec-8080-ce7546801c75"],
 " as 1/\[CapitalLambda]."
}], "Text",
 CellChangeTimes->{{3.837098329060692*^9, 
  3.837098353840439*^9}},ExpressionUUID->"343b72e9-c0ad-448a-a9d8-\
a66e92d2555f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"epsvals", ",", 
      RowBox[{"1", "-", 
       RowBox[{"finalens", "/", "Estar"}]}]}], "}"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "8"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Black", ",", "15"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1 /(\[CapitalLambda] L)\>\"", ",", 
        "\"\<1 - \!\(\*SubscriptBox[\(E\), \(c\)]\) / \
\!\(\*SubscriptBox[\(E\), \(*\)]\)\>\""}], "}"}]}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "370"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], ",", 
   RowBox[{"PlotStyle", "->", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.837096129156074*^9, 3.837096274392597*^9}, {
  3.8370963127752953`*^9, 3.8370963275153713`*^9}},
 CellLabel->
  "In[962]:=",ExpressionUUID->"a3d44f4e-7a1c-419a-820d-269b5aa184b3"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Dashing[{Small, Small}],
       LineBox[{{-2.3025850929940455`, -1.5100873565039958`}, \
{-4.605170185988091, -3.3328813879392074`}, {-6.907755278982137, \
-5.577302997697513}, {-9.210340371976182, -7.873855137303671}, \
{-11.512925464970229`, -10.17436576447014}, {-13.815510557964274`, \
-12.476950857458363`}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Dashing[{Small, Small}], 
     GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[
       8]], {{{-2.3025850929940455`, -1.5100873565039958`}}, \
{{-4.605170185988091, -3.3328813879392074`}}, {{-6.907755278982137, \
-5.577302997697513}}, {{-9.210340371976182, -7.873855137303671}}, \
{{-11.512925464970229`, -10.17436576447014}}, {{-13.815510557964274`, \
-12.476950857458363`}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-14.300212715126651`, -13.335170163685977`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"1 - \\!\\(\\*SubscriptBox[\\(E\\), \\(c\\)]\\) / \
\\!\\(\\*SubscriptBox[\\(E\\), \\(*\\)]\\)\"", 
       GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"1 /(\[CapitalLambda] L)\"", 
       GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->AbsoluteThickness[1],
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
        FormBox["0.001`", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
        
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.010\"", ShowStringCharacters -> False], 0.01, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-13.815510557964274`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-13.122363377404328`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.716898269296165`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.429216196844383`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.206072645530174`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.02375108873622, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.86960040890896, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.736069016284437`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.618285980628055`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.819778284410283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.41431317630212, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.126631103850338`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.903487552536127, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.721165995742174, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.567015315914915, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.433483923290392, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.315700887634009, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}, {{-11.512925464970229`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-6.907755278982137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-13.815510557964274`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-13.122363377404328`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.716898269296165`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.429216196844383`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.206072645530174`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.02375108873622, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.86960040890896, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.736069016284437`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.618285980628055`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.819778284410283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.41431317630212, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.126631103850338`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.903487552536127, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.721165995742174, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.567015315914915, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.433483923290392, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.315700887634009, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}}, {{{-13.815510557964274`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}}, {-11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
        FormBox["0.001`", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
        
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.010\"", ShowStringCharacters -> False], 0.01, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-16.11809565095832, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-15.424948470398375`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-15.01948336229021, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.73180128983843, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.508657738524219`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.326336181730264`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.172185501903007`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.038654109278484`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-13.9208710736221, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-13.122363377404328`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.716898269296165`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.429216196844383`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.206072645530174`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.02375108873622, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.86960040890896, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.736069016284437`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.618285980628055`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.819778284410283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.41431317630212, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.126631103850338`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.903487552536127, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.721165995742174, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.567015315914915, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.433483923290392, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.315700887634009, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}, {{-13.815510557964274`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-11.512925464970229`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-6.907755278982137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-16.11809565095832, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-15.424948470398375`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-15.01948336229021, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.73180128983843, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.508657738524219`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.326336181730264`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.172185501903007`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-14.038654109278484`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-13.9208710736221, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-13.122363377404328`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.716898269296165`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.429216196844383`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.206072645530174`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-12.02375108873622, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.86960040890896, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.736069016284437`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-11.618285980628055`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.819778284410283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.41431317630212, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-10.126631103850338`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.903487552536127, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.721165995742174, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.567015315914915, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.433483923290392, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-9.315700887634009, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
  
  FrameTicksStyle->Directive[
    GrayLevel[0], 13],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->370,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{-14.300212715126651`, -2.3025850929940455`}, \
{-13.335170163685977`, -1.5100873565039958`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.837096132986312*^9, 3.837096188665579*^9}, {
   3.837096226919507*^9, 3.837096290195066*^9}, {3.837096323957119*^9, 
   3.83709632791061*^9}, 3.8370983585097923`*^9, 3.837181646159746*^9, 
   3.8371926671332808`*^9, 3.837193035742103*^9, 3.837193379252348*^9},
 CellLabel->
  "Out[962]=",ExpressionUUID->"c6057eff-ad6a-44e7-9569-67b7210b129d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Single-particle correlations", "Section",
 CellChangeTimes->{{3.837098368526957*^9, 
  3.837098393508072*^9}},ExpressionUUID->"3022d097-86b0-4f26-b85f-\
a143b6b74531"],

Cell[TextData[{
 "As detailed in the supplement, two-point correlations of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ec356c54-7e66-4455-8d0f-a5983259b412"],
 " are given by piecewise polynomials. When ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7056fd98-6b46-4a68-bfac-0e4bfddc7a6b"],
 " is in the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "019c6726-bbf9-4cdb-8070-6af626642063"],
 "-th segment and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "84c41bcd-1b56-44dd-897c-00ebccc915de"],
 " is in the ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6f987a11-fc5e-4a92-bea6-4f6ee6cf6a2d"],
 "-th segment, define rescaled variables ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "~"], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox["X", 
        RowBox[{"i", "-", "1"}]]}], ")"}], "/", 
     SubscriptBox["w", "i"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c988c33c-a986-4fad-9d6c-956025a02b34"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      OverscriptBox["y", "~"], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", 
         SubscriptBox["X", 
          RowBox[{"j", "-", "1"}]]}], ")"}], "/", 
       SubscriptBox["w", "j"]}]}], ","}]}], TraditionalForm]],ExpressionUUID->
  "aa339bf8-23b3-4b76-8f05-897b8f2dc946"],
 " which vary between 0 and 1.  Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"C", "(", 
     RowBox[{"x", ",", "y"}], ")"}], "=", 
    RowBox[{
     SubsuperscriptBox["C", 
      RowBox[{"p", ",", "q"}], 
      RowBox[{"(", 
       RowBox[{"i", ",", "j"}], ")"}]], 
     SuperscriptBox[
      OverscriptBox["x", "~"], "p"], 
     RowBox[{
      SuperscriptBox[
       OverscriptBox["y", "~"], "q"], "."}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e5c819bd-aa48-4a5e-8184-78f4424f1633"],
 "  The DMRG routine saves the coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubsuperscriptBox["C", 
     RowBox[{"p", ",", "q"}], 
     RowBox[{"(", 
      RowBox[{"i", ",", "j"}], ")"}]]}], TraditionalForm]],ExpressionUUID->
  "b7450e52-c3f9-41ec-b093-15d57b630939"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"j", ">=", 
    RowBox[{"i", "."}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5b9f39d5-3a0e-4471-ad77-c96c6432a5a3"]
}], "Text",
 CellChangeTimes->{{3.837098445396104*^9, 3.837098483169806*^9}, {
  3.83709855822926*^9, 
  3.837099083153844*^9}},ExpressionUUID->"fdcd22d3-532b-4f04-9173-\
3bcabfd0244f"],

Cell["Import the polynomial coefficients.", "Text",
 CellChangeTimes->{{3.837099094692954*^9, 
  3.837099107564802*^9}},ExpressionUUID->"60a50808-469d-442a-a0dc-\
c0e3f2be7a34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"spcorrcoefs", "=", 
   RowBox[{"Import", "[", "spcorrname", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[963]:=",ExpressionUUID->"05553f79-e80b-4f97-acd4-76ee4d91d341"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "spcorrcoefs"}]], "Input",
 CellChangeTimes->{{3.837094299273782*^9, 3.837094301649663*^9}},
 CellLabel->
  "In[964]:=",ExpressionUUID->"a9dfefe6-3dff-4a6e-93bb-9bdaad322242"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1"}],
   "}"}]], "Output",
 CellChangeTimes->{3.8370943020101013`*^9, 3.837181654494398*^9, 
  3.837192673441436*^9, 3.837193063147728*^9, 3.837193403633992*^9},
 CellLabel->
  "Out[964]=",ExpressionUUID->"1151ba84-349c-45ad-a542-f6dd60bbff3a"]
}, Open  ]],

Cell[TextData[{
 "Here is ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubsuperscriptBox["C", 
      RowBox[{"p", ",", "q"}], 
      RowBox[{"(", 
       RowBox[{"1", ",", "1"}], ")"}]], "."}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fe6df3cc-22b8-4e93-8e19-3dc2fc675069"]
}], "Text",
 CellChangeTimes->{{3.837099124766809*^9, 
  3.837099144985559*^9}},ExpressionUUID->"1fa4bc39-65c6-4e86-bffa-\
f344b19d7a75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spcorrcoefs", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8370943058182983`*^9, 3.8370943074452763`*^9}},
 CellLabel->
  "In[965]:=",ExpressionUUID->"3cab1679-b481-4e99-b356-7cd7bc3b237b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJztlllUk1cCxxGqYEQWabFTkBCoqLRYlQlaSvnLItStIEJRQRZZOvaIWlBA
FhEpGqRVKArKKLZAR206CB2sIqIYBMr25fsCyCbIEkIgG4MgSCM0Paev92Hm
zOM83HPuuW/3d/4b58ARnwgdLS0t/T/PH3fHuMqgfCsKV+0LyzfOtEFayBna
9eMY/v/+371P9/Ic7RcJce6B2c4t1p0QuLc8Ue2W4YXAS/fMAyGSthacXKhi
sMxSX3li7yjcjKZVCBXC2SRo7v7nXRhfwbrUmCfDR/nPK80zaBQMDAv8KApe
YlFr6WYprjJpU2esaLAnj4vTc54hxvbC0iwXOTaN7PF7bczgTJxusEd1I2Jf
xZlUBY+AX+/vyfGmEedrNpDR2YvlQ9LrvHQ5+Hc+dQ7h01jtm1GT2NiC9L/H
bArVk8Lnh1od6rwQb7KPBxqzusF6delhVYWM+N+Siu1u8kgK2VZlh2/HtuGm
Ol1lFz2G8cr4T9bwKfjZ5x7r6nsKftN9neVGMry0tDOZiKQxI/xxewwjxPjL
ibyOeCkCl7Efzo8KcWrW9hXLqwdqy5SV5a9l0Nf78lingMYDatDdKL0fIWdj
I75ap4DNXP+zdw1EyGFixdOeNXh/xHOf3+Nh7Mu5E2N5nIGBcDY7RGsI44KV
lLOjEuYveky5H4ngutu1yGHiMcwy7+p7xA2D/abxlfpxGj3acl716gFcWnM3
4rdjChRkq09YsBlsbsuJG2wZQMpi9htL7yuI3Eh8LGQjq5w1HAK+vLV61VQr
9Hj9vy12HAOX0XM5pEXjnblRs6QoBhe9F6b4cUbRJMiuFqlo/FpR6R1W04Sf
T/f8MpQ3ggD/DTunNdxUFqGs7Yl9iI4ft/j2hhx77UI2NfgxcDo0HlmWNYhk
40k73hIltuW9H2Ks1YrEm7YRKY73MGVw9HmVvRhmZ0NGz+p2wND5VGLpaQk8
VO82lburYF0stQze1YpvFhmtoBxKwDGYTd2hHkT+SFxQUR8D01ET1+B4MeZW
l397ukNJ5EbSG4nPD7F9XsXJFBRl3RlFTk8ReSCtyFY5hv0LmrfmaXSuznCR
yWQ0EmzeWLF2VIq2hdqseg3/mrQFrGcb+vE4XDvEykAB36A97s5XGRxJq5HX
3ajDVsbD80ySBKb+DN/nlgili1+83BRUhd5f9tzcKRBjMvOQ3UWNf7gu1Mbv
50cglfkbdh9UoeWogNvj0AjLFL6irTgLt3a8d+BKdCfavh/7VI8zjAjV+i57
vgwrr6kQX0vmRtIbyackPlnWhfpZKgodzN8GC2JaURdppSdZMIYlWwJyBUto
vLYO5Ln+W+OXqeLe79hy+Hrf0y47waDAP4FL/7Meyg3UW153JLCYDdSnu2hU
HxAnSJ/2w9v0heKRjwILLQvb19cyOF9LTf9rhRj5pddscsuUoPlfOTezGNBL
Rbe3rf8HpLPR4azT/ajIXLelolyKTs8bJUm5CjTsiZoLniJzI+mN5FNSvpH4
mBZ7+bO9KfiqPa9H5bfDLdXXzbl5DDe33Eirc6dxKPdk+/YvaOz/OKpjvlSK
pnO8pocXafTbhaqzHj9H+IfrFlEyOY48vbbv588YFNOXU7l3f4W5a7mrSCnB
O9HlZXVHRQiXGEVNBlQjaAFnlxN7GDbmyxtnMtvxsVNWZp+5BLGKrX+pd1QR
uZH0RvIpKd9IvUDiM2+4ucs+XghDkdTrvOYfYdP6FgXZowix5+TdHmaw1uOq
eXPCE8h9rN9u1ZGAP+h+5dhfGXx2wbV36H4DknotDr69agTinADHUE1/nZwQ
6Sb81I2TmTOV5T0y8NrKmC8cGfz0ta1gzQeDKAl8Yl01qCByI+mN5FNSvpF6
gdSnJD7fxWlPDNgLIXNV5JtOiFBY12MiaBiFRPvu/pSHDNoPW3Pni2qxzXBR
oaO7BA7sjoALLTTqZujDTvXN6HzvIMeeHkHYIy91VzKN3beijkZaPEdojHFy
SYOcyI2kN5JPSflG6gVSn5J2CInPJO+SS0knhc09VqGGqR3QStodrrNBBv9z
F5Y90mXAD0/xuZwwAMOUrmqHPAWu7A3k7vhQ0+82ylQhtxcuw0FfnwqTE7mR
9EbyKSnfSL1A6lPSDiHtNxIft43xuKfRz0BRQ1hibSemk7lrnx3X7JzJbpup
bAaXqYwlFp8P4br63oONEUoiN5LeSD4l5RupF0h9StohpP32v9rJJG4kvZF8
Sso3Ui+Q+pS0Q0j7jbR7/1MOvwMObfF4
              "], {{0, 0}, {12, 12}}, {0, 
              1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["116", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"12", ",", "12"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1: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
Sso3Ui+Q+pS0Q0j7jbR7/1MOvwMObfF4
              "], {{0, 0}, {12, 12}}, {0, 
              1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["116", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"12", ",", "12"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.8055555555555556`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.0000317558946941`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2.1041433864`*^-6", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.6201496181`*^-6"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "5.7281648722`*^-6"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {12, 12}, 0, {
   1, {{0, 9, 19, 30, 41, 52, 63, 74, 85, 96, 107, 116, 116}, {{2}, {3}, {
     4}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {
     8}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {
     1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {1}, {2}, {3}, {
     4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {1}, {2}, {3}, {4}, {5}, {6}, {
     7}, {8}, {9}, {10}, {11}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
     10}, {11}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {
     1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {1}, {2}, {3}, {
     4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {3}, {4}, {5}, {6}, {7}, {8}, {
     9}, {10}, {11}}}, {
    0.0000317558946941, 
     2.1041433864*^-6, -1.6201496181*^-6, -5.7281648722*^-6, 
     2.18110567*^-7, -3.633456466*^-7, 
     3.882264207*^-7, -9.88768298*^-8, -1.37926122*^-8, 0.0000317558946941, 
     7.865756736255215, 
     0.5208810415589994, -0.4003262432530653, -1.4083026800292024`, \
-0.0068998105465524, 
     0.030631346654904, -0.0019826939907529, -0.0003478594822065, 
     6.609914256*^-7, 2.1041433864*^-6, 0.5208810415589994, 
     0.0360967907410524, -0.0359180176039467, -0.1192329492132674, 
     0.159080738328949, -0.3028683219722771, 
     0.2410643560945885, -0.0566268569453032, -0.0089468379262385, 
     3.1754695431*^-6, -1.6201496181*^-6, -0.4003262432530653, \
-0.0359180176039467, 0.1187414493938611, 
     0.0153499707495668, -0.1355269048409049, 
     0.3962420698648291, -0.3814139650511327, 0.0809000481270709, 
     0.0303602416794121, -0.0001181461507845, -5.7281648722*^-6, \
-1.4083026800292024`, -0.1192329492132674, 0.0153499707495668, 
     2.0707664709143683`, -8.747061496523337, 
     16.4335278613793001`17.21573080544744, \
-13.2346269990003123`17.121711705776494, 3.4574570868536845`, 
     0.3338269901707839, 0.0016293820184943, 
     2.18110567*^-7, -0.0068998105465524, 
     0.159080738328949, -0.1355269048409049, -8.747061496523337, 
     51.3798968336936497`17.710793227906144, \
-105.685476320845595`18.024015309094587, 
     89.5291486900751465`17.951964454916673, \
-23.7755794879293489`17.376131110902534, -2.6708014016032227`, \
-0.0102878367018498, -3.633456466*^-7, 0.030631346654904, -0.3028683219722771,
      0.3962420698648291, 
     16.4335278613793001`17.21573080544744, \
-105.685476320845595`18.024015309094587, 
     229.4959118279279551`18.36077495354916, \
-201.8997505538355313`18.305135782375242, 
     55.4669531117904171`17.744034310045418, 6.0391732970115894`, 
     0.0328483208979794, 3.882264207*^-7, -0.0019826939907529, 
     0.2410643560945885, -0.3814139650511327, \
-13.2346269990003123`17.121711705776494, 
     89.5291486900751465`17.951964454916673, \
-201.8997505538355313`18.305135782375242, 
     183.5836977731323714`18.263834113240428, \
-52.9311581919494287`17.723711396936093, -4.856455797271515, \
-0.0579069284983144, -9.88768298*^-8, -0.0003478594822065, \
-0.0566268569453032, 0.0809000481270709, 
     3.4574570868536845`, -23.7755794879293489`17.376131110902534, 
     55.4669531117904171`17.744034310045418, \
-52.9311581919494287`17.723711396936093, 
     17.240979278866039`17.236561929895263, 0.4586056492913722, 
     0.0579386362520512, -1.37926122*^-8, 
     6.609914256*^-7, -0.0089468379262385, 0.0303602416794121, 
     0.3338269901707839, -2.6708014016032227`, 
     6.0391732970115894`, -4.856455797271515, 0.4586056492913722, 
     0.7052990106055017, -0.0310875348417729, 
     3.1754695431*^-6, -0.0001181461507845, 
     0.0016293820184943, -0.0102878367018498, 
     0.0328483208979794, -0.0579069284983144, 
     0.0579386362520512, -0.0310875348417729, 0.0069807040608411}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.837094307965301*^9, 3.83718165704051*^9, 
  3.837192676019981*^9, 3.837193064560698*^9, 3.837193404711887*^9},
 CellLabel->
  "Out[965]=",ExpressionUUID->"7878032d-6df8-4212-a4d5-4c457510bdcc"]
}, Open  ]],

Cell["Evaluate the correlations on an arbitrarily fine grid.", "Text",
 CellChangeTimes->{{3.837099176686152*^9, 3.837099185298188*^9}, {
  3.837099614333246*^9, 
  3.837099618335311*^9}},ExpressionUUID->"8ec34615-826a-46ad-a75b-\
466eeae16c38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"divpts", "=", 
    RowBox[{"N", "@", 
     RowBox[{"Rest", "@", 
      RowBox[{"Subdivide", "[", "20", "]"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "divide", " ", "each", " ", "segment", " ", "into", " ", "20", " ", 
     RowBox[{"points", " ", "--"}], " ", "these", " ", "are", " ", "values", 
     " ", "of", " ", 
     OverscriptBox["x", "~"]}], ",", 
    OverscriptBox["y", "~"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exponents", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Length", "@", 
        RowBox[{"spcorrcoefs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "-", "1"}]}], "]"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"values", " ", "of", " ", "p"}], ",", "q"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"montable", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"divpts", "^", "#"}], "&"}], "/@", "exponents"}]}], ";"}], " ", 
  
  RowBox[{"(*", 
   RowBox[{"all", " ", "possible", " ", "weights", " ", 
    FormBox[
     SuperscriptBox[
      OverscriptBox["x", "~"], "p"],
     TraditionalForm]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"spcorrupper", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "montable", "]"}], ".", "#", ".", 
        "montable"}], "&"}], ",", "spcorrcoefs", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "evaluate", " ", "correlations", " ", "for", " ", "all", " ", "j"}], ">=",
     "i"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spcorrmat", "=", 
   RowBox[{"ArrayPad", "[", 
    RowBox[{
     RowBox[{"ArrayFlatten", "@", 
      RowBox[{"makeHermitian", "@", "spcorrupper"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Form", " ", "a", " ", "Hermitian", " ", "matrix"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.837093084925417*^9, 3.8370931018856773`*^9}, {
  3.837093335153059*^9, 3.837093337300951*^9}, {3.837094311862543*^9, 
  3.83709436981882*^9}, {3.837094409666727*^9, 3.8370944097727547`*^9}, {
  3.8370944918249817`*^9, 3.837094505885663*^9}, {3.8370950412572002`*^9, 
  3.837095041319365*^9}, {3.837099191977476*^9, 3.8370993839159727`*^9}, {
  3.837099435121057*^9, 3.837099527921349*^9}},
 CellLabel->
  "In[966]:=",ExpressionUUID->"47035b5b-fb8d-43bd-9380-eb8a333de786"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Reverse", "@", "spcorrmat"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "280"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Black", ",", "16"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y\>\"", ",", "Black", ",", "16"}], "]"}]}], "}"}]}], ",", 
   
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "0.6", "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\[LeftAngleBracket]\!\(\*SuperscriptBox[\(\[Psi]\), \
\(\[Dagger]\)]\)(x)\[Psi](y)\[RightAngleBracket]\>\"", ",", "Black", ",", 
      "15"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8370943840012503`*^9, 3.837094387153183*^9}, {
  3.8370944492707233`*^9, 3.8370944978124123`*^9}, {3.837094540748184*^9, 
  3.8370945603345537`*^9}, {3.837094597358971*^9, 3.83709480916028*^9}, {
  3.837094868961577*^9, 3.837094978568883*^9}, {3.8370951413376102`*^9, 
  3.837095153518815*^9}, {3.837095384569964*^9, 3.837095386542193*^9}},
 CellLabel->
  "In[971]:=",ExpressionUUID->"084e4aff-00f3-46ae-b0fe-a4f3b376ef93"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsnPc/V////+09ns/nOef5JKOEUsnISIPn3Q5JRpFVZCUpKjIaJFt2hKI0
iIyMUrKySilkVEgpKyR7hO/jfbnkcnn9D9/PD11ul3N6jPNc1/vtdh6PQ8z+
tIkjEwMDw51//1pP/HUIv02D/9P/0//T/9P/35VzKJNJJ5wGE4KeNj/P0yBP
4pfUGTsa0F/f0vuznwYpJzRcvFRosD2xdZxfggYM7x6ytPDTIJfjZtj7JSo4
yGMkiSEqrGZv7xj+SAVJSvVLtRoqtFdGaGoWUGFm9Nz5delU+HGAdWj4OhW+
vZDP+XSZClH3U9RwTyr8DT1xrd6RCrHMf8vWW1FBmiHeztiECuaumhBtgI67
d6vI6KDxTu56P6pBhcSduWKp6lQgbWYW4kLH+NFwK24tKqT02Kl66FKhZ7qs
i28/FUT2K7M/M6ZCo+dRJ3ULKshbk49cOUqFEK0v7AbOVDgfZnDswmkqvBrc
jPV5U8HFODnW8goVyrce5KwOpcKYbMPRsRgquEckSz9PpsJylXgRUwYVCv5G
f7n7gAqFJPNt3rlUEN+WUMb4hAofjN+TGkupQLOWEP/ynArbhCqe6VdQ4ZA1
41PJairkZiga+r6iwid3CcnDdVS4JJaZVF9Phc7ugh9dDVSoz2Y5ndKI3q9L
KYsCr6nAtL1tzB7po9SUhBCk373GHZKQpqgxa91DGhu1uakaaaiOYwTrG9SP
qDgQgtRVq/yQXRMVnEVHogveUiGtdj2DQDNqP3GEkeEDFXha6CeOtFJhpD7W
mtpOhS1/zNi3dlHhcUKeWegXKlBB5bHkVyoYUbpfzH6nQv6gzK6JASqItWx6
yfaLCpq0uRsyv6kQL9n4yGqKCibcf8wC5qjgV69nEoe+D0e0xB5fWUXv45B5
niozDS7701rL2GiwJzW18gcnDaiYr+ZjHhqsSn4yYETfI+0KuTvbyTTQ02bp
HabQYPL1gWF1nAb38zJLgKBBrRycmUDaZhp635JKA0GleadQpPctMj0DkVIM
9K2NkSbsXX66jNrFD8nqxCAlCZDEKEgtd3ePRKLxatq//+VCervj5Y0kjAYy
o9q8dKQ06t15PqSfNlccoyJ9oWYx6Ig0pfPZOD9qH1GfUP0Rqdb+rynzaLy4
lYji0zQa3DV9oyQrSAOvzA6W7ULodSY0Jx8VQeO8dXv/cj0NXGtb6tU20uDU
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
lgLeeuJ9Gb4ot/uFpB+LRzn+a9ZJkSwKrMj9sbyMcvuErtBp1iYKHChxuCOA
/GaI7llrwT4KCLBJidkNUEAwkOmd5ggFzkd4j5FGKUAZEBMjkGYnCISkovOP
uql7fw+ifo4Xf1j/oMC+/lB1RdT/9xOX96+/UECxUfLEBTQu6WjI+N02CtyW
PDxY8oEC6wRCRLcgXr/eOC0TgHRXj8XiwVYKfHDYz7SniwKBTVWSvF8pcIXx
3faNwxRw/VXZRZmlwDXjGoErrBgY3CFdINMwsCSG/c9uxaBR3VbuMB2DlESH
1ycPIR/q9dzf2Q0DBYn7Hn+vIn+bNfS5OxWDwNjeHWWIlyseojfpTRjwNTYZ
CX3HQFDH6PD0HAZb/VnXn0Y+cyhCw0Z6PQ51i3+GGmVxaP1KKelBPjMt3apj
dR8OLY8kuVZMcCiM6f4lhHJ93raLPZm2OITZq7P2olw/mUUP/t/6mFu5w7Vr
R3FgW9gpH4hyf0Ja/htjCxy0+ZZy1U0Rl7PfGmca4tCjamL0v/U3abxov7AG
Dvc84oen9iJfO9SQUKmCw95B3gNTSjiIhesf4EE6a+gfG6uMw5nEnar4HuRz
o+R6ZTVxUIxa8QpHPrh+NPRqJLqeYyrt+iRP1O62I9EahkNO6MBkFOLu40uZ
wau16Pw39bJvgzhU3D0TN478Y/jvVqWvygQ8HCpeOWlPANeW46X7YwiUx/Z9
U6kiIHfb3vVDiIeDha9SKcgf2obujfjffcRp6sEnldepoCakO1NWS4UDAtvH
1iOf55q+eqVYngaHw88HqLnQIPrPbp3/cnBt/7POv/1/a/tf1tZ/19Y//v67
/6fyL/8O/vN/a/z722e1STqGH3q1/T/YCvOBxmxh0vZSHjCpThE/dIwbys/N
CdWJcMFuKV08/Q8HHFdsdFX6yg4VoYbbuEbY4NV+K65mgg0MuTfFHnVihU6a
ddKbrywgF7Oa9OocC3CDb5uYIguc161ZlFnHAh3OATu1xFngzHUzmUYDFnDb
8tVNNoYFPDmmX/8dZYFm5/CSaltW2LMjz0v0OyvIzZMO15xlA4r7oeKTJHZ4
uv8O91AxO0Rze3RjthxgNkUEf+bghEiTQm7lJ5xwmG2wXsacCxSHf3J+meYC
5uG6J7ah3LDX9uaTET4e6L85HF5+jQdaH9cdHJzlgde5r8JnLBAfXQfICo95
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
QOmMZvdaeV7gPTZxb3UgL7C57cjR/8oLjrQ5zjtSVHggM73isRUV7rPMLPwN
poJNYk4RP/LJ4jqHmqUrEd+0DxbaIF23+0frgcE+KnRFTz/9irhndmb/zBbE
x2ehEgPCyE9/iBp6fLuJCjpqS7FZn6nAediFWox0399TsXWsaVTI9Dk+VB9H
hUtpurElUVQYdqQGhoSj5+pcvsofiTi8JVDuLOJjewvvxPw7KvQYpimm1FFB
VjU/UmIW8VP9rd3wGhpsamHIfrSmwYYNain6cTSIWftnyLOfBhMU87sSm+jw
Ja29VM6fDvKMxi6/b3SY3dCQESTMgNHAK3tOaDLg1brKA5ouDPDb5CgeHMOA
HYMU12fFDLi3OBc4O8QABUOLvBo+pAODolZd24x4Ei+20fwwBtdUlLhjzmAw
/N1BzesaBgyr/Z46yL+ebFUjdT7BYNWBy/s+vcBgw89zF069wiDPw+CdFeLf
ZkE2CcmX6N81Hg9TeY7Bs777HwQTMci6/HHc9AEGN4rw9SGhGOitLKkwvImu
t9730PFBfN2xskIZ8e2npGBrgRPiqC7zTeNJDJJtNUN1T2BwupTlhwTioUQp
66wJ4nMx//pnTMRPX+GaPT5oXS/OJt98i9ZxYRfXrEQTBlsVsyt3sjLB32Tb
09iNTNjIv1288DQTXrRYb1F4zoTGfZeZNmNMeDyZ2PljGx+E74gVkwnig/k3
5r8yfvAB1ZTz3tImftgcv9My8A4/vOfTV64d4oc2tZp7B3UF4GrDYOatNAHw
cw0/QEEcxOxGW7QRB+/uy0ntbRaE8sAv3GcRB99SY03/y0Fi/i8x/5KY/0bM
PyLmfxD590T+M5F/SuT/EflXRP4LkX9A9P8S/W9E/wdR/0zU/xH1L8T5L3H+
8e/+X/qy/136n/7zjf4f/1iag2+GSbzE4W+ubfGLXLyDt09ye00ZnvfIgLLZ
oA7vULIqZdv8FU9WdNjNvNCBC0dN3KmL78ZZ3mzQpfD8wjlvNv75FDWE284d
7VNaOYbbPjELNDwxgU+W3VE8kjSFT9anhS1VzuASFQvD6g1z+L4c/luK6fO4
C2eIiNzhRXxw6Rmn7K8lXHHfFikRGRYIYX3MeTSXBQp+uosd28UKLGNFFYKZ
rHBs+tbFPUw20DVWFHtmwwae7s7nhuKRDkzTvpvVzAaxJmn8aawkWLFjW+4N
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
7AtsqWDCzOnJMkE6kHu9rmIjFXLrbKpPrqZCqdfTlJTlVLiSqBo3hvSoX/FE
zBn0+lbLT/lgLXReJcKMyU4q1J8z/PXiEBVk7wTFFSZQwYzl73UC6cmbUpEd
5WI0mKyur5bdQYO4e9oWFoiH9Irny5Z9p8HdsLSZw5voMC9WrXQimQ7TZmJq
lybp8NhVYd65pQxwp8eF3LJmwN9blrp/QxkQ3huQNlzAgNRoC8P2dgaIROon
s4gYaFVtCBtYjEFYirNWmj4GL9YdXHAB8XDSdryl/SjypyKPk78i7tCOb593
4V/Oiwrrif4NDPSlRfRvIz875cJ6pv5vDs9s6U2fmxgoDzI0//nbxSeyKlfH
YuDEmFFru4BB55x3t28wBlHTp03vovOmRGPtyu5IJ6pfUM9yxODOR/qnP7sx
mOsND/9mgcGP5j9zB8zR6+gWHU8rDJIEbgoI2mMgInlJEQ5h0NDr9GQ34uhK
2/4f9ui6Fc9zXhUjn1zV4fi7HenCWYPumh2LmdC615d7yZ4JO3ddfi6byoSW
x0/Pen9hAm+ZWrW4OguiJRbM2IewoE3Gfdnwexbcm9Q0XanKBg/xLOXkC2wI
VGz8WzDIBuGl7SHDhhwQjQ7rasniQM2Le1d+0LgQuoWSVOXNhas5Fu59LVy4
cbRd4qeWBASo063+l4MSNgqL2su4YHpHMWzmHQd0I4xOHh5hA+WF/sc34mzg
blhu1anIAkb8IzWHjUyQUiwd1Xf4tz/cTvxiCAPOz5kPR5jTwftAP6aeQwUf
yXKtIBYFrofeFZ49Jw4LclyHXFhiQCa8DLxwTwTavn1VtDwgDIdpHoZNG4TA
YvkZ0kJV0n/953j/L95/ife/4f1HeP8Hnn+P5z/j+ad4/h+ef4Xnv+D5B/j8
Lz7/hs9/4Puf8f1/+P4XfP0XX//An//h/pfB13+hfP4JzARE3NAjgdf1PlVf
BvKbPL9j518ToaOPvX7JWSK0chd88F1NBIPz5vODugkw9USv1fAs4t3F7Tf7
kS5dN3L+pUezIDQahrCZQYLIxw/WLV4mCD7j4r6LewWgX8qw+UEauh+c2zWb
7yMArTu5VMmdAnBAcOcWZX0BGB28AltMBECoOt+CegTpaLsTq6+lo/tGQcPd
9BEBaHPvOPLCTBDqGNMXh54KwredegoMEwKMnnWS9kU6ce/gkXfeYURwjzS1
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
Q+WxxUbxEqB6WELs0QJJ2HFWrey/HGzz7HOJQhxcNcM1uo446OY1yFeU4cPS
1ZKSZGMePFu+xovkIQ4d6obO5Dgu3KV9HplEHDT2+WL1Q4QDSvSukCpdNnS1
Ox6JGGHCukdfZ8b8GRD68WMuY4EYuEhvblGspcPe10oaMZE0uK/RFlp5lAoT
r3ONOfspMJDWA++8ydCeNE49nEmCTkcP8kYCCVSXhoy/P02Ea6bTNTcpRNjf
eaz7di4BbF7ZhnefI0C6fvirGlf0vToXsOqtEwEe+ewZj9tPgP27amf1kQ68
P9I58SH6f/3neP8v3n+J97/h/Ud4/weef4/nP+P5p3j+H55/hee/4PkHlwTz
v+6C+Td8/kNNsP/ZW7D/L1Kw/0VKsP77U7D+IS+4/qcs8L/KAv2nLeBf1kbm
g+RXvzCn1iU3PD52YBB2pLxm50/sJpxJzDnahoXtDaRMz/+OwWosTO90KxY/
s7u++norlnJXhfV83nesa80ZygLHNsyr/8RZA6OfmFNBQlXoiw5svH+lyuns
X5jQpjnEI8xeLN+30qVtZz/md2bTkDXiofTKinKa2zDWtV38wMfwUcxw7sbf
bUXjmAs1pyShfxIbX/i5tWzuDHbcW/i3ofYsVuegOSCTIAQiHdETMzeFIS9t
X4W3nwi8uv+lZ7c1AdY3+lEvcohg7zSdXfmECMd8XBcZmpHgndqnD3pVJGDX
lleLaJLh7NZbjk+RTgxctl3ZvYoMHY9MNs1BerH0TeT9W4soMBmsFlWxmgI2
jFcfz5hQ4IOG8P2ATRTY+LRVpdAU+eu490T6egoc1l/7+6AuBWgbh0LH1Cig
lObt3L6YAimxvC030PM4DCn4Rcsh3vamX89TocDr7b9+9q2jgPnG1bPn0Oez
8MzfmjcRFMhc71xkXYO4GB1kr/GPLn0wYXLhEBXuLKmoDXlLhQ3VbUbRK2ng
pJunwE6mwdmFJqW2SB+anWl424b8suSZClUZnihMLpNqOhYuCqsyue/MkF9K
wTJmSCFi8FX1oMkQgQF9S64YOCA/ZWj7TNHvOwOYkms1Lq9jQm7yV4v4aCaw
diQNffjJhAi9OExFlgVdz41v7t3KgnAVEfMV3kgfKqmZzlxnQfT2d3VqSMd5
dV+C5SksaPhtXmV7lwVhj18pzolCfHMcgLZApCsjNnetRDzVH8qwT0W8G6Xz
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
bC4E/P61BB0DYYhx3PInf6EIMMd127x/iYCT8vNNa24QICxPhJO+igicUJWU
4OdEEOv9Y7tShQQRW2yKe4JIoBZJ0qypJQEh/OjAdzIZvFhVD+arIl04Pbz9
yEYylHjMNynYTobW8Rq3NuSrz1kZ0JrQ7TqDL1uu25NhTqvmiaXWZPiV/tvn
NXq8TN31I5kGZLi2P1jLVZ8MiWcGLkQCGcYrPN2kzMig49kTx3Ehw1Go0Wy7
TIa1ay6u9UF8jFmrEdONuFjikvtMxoACigs+yynfpgCnv+mBEeLhnQ8/n2Yj
feg0u0SmBPnl/OmKpEZ7GjS9PeFm3kyDJ4TM1xcd6RA4uulh53c6WHrncopc
/tmHrWC9q10UrIfzz4vvEgPnl3qTYp/E4P7qkxvOmDBga8/eVJ+HDGDcULuh
QGOCXeyZQk8bJnwMzBZ3jWSCp33/9+kqJryUNY5MRHpN5vhDvXoWC+5MPesg
ID2384lYaJwcC9ZMOZMl0PH1Bv+3X7gsEO4Z7zsixIJ7ef6fnX4xYV6rJm9z
LRPO12tXTz1mQsYeXQOdW0xYmB33UcSfCakrBj95HmbC6tVtP784MWGPZHbB
XQfE4ZZX4Yf3Ii4WXC+nnP2n59kiz/0+EyqMT1d+RHpxyfLrQU4rWCDEfUKT
i0CvW+s+/oPIBtuI8O6pDWwQa4stU77Jhhgnx9PlfWwwklu3dMEmDoQYPNjk
m82BRb9riKvmc+FRWl52aCgXaiqSKptI4hC8rK7c0U8cXM4dMT/6VxyOv3li
t9uXB02vpSNCRPjw5/r2tI1BfNh89fNzEYYEHDVKLl8UIQHCwdricnMk4ZPO
9Xv/5WCw0Z7LpEoJaE17PHtsGPnh1JfzfOfz4WVd7+tfJjzIlXemXDouDgrS
RVxjxGOVlEpJyQ8c8HRkqM5QOFC6bv1qigEbctc9i41CunjyZc6BuggGpHGb
pqY1xIC8aCLUtZMOExRZD4csGizzbTmlfI0KTwcf6CwMoUDcb57IBXR+P+Fv
/iPxEwkMdI98fqFGgntBO3csSidCavXRDrvVRJB6vaVR8TcBhloaMs/lI/1X
PlN67w4BPj533y+Evk8i+w/vMkTHB/tnLthlEuBdluJOp3ICVP/+SXn4kwC7
yr67lgsR4YJrXa3znP/1n+P9v3j/Jd7/hvcf4f0feP49nv+M558qCvL/KgX5
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
wCjLctMneQI4Jgacv6ctxLvnizSC9guRuLhguYD40cRxWZEP/goReGf83oTR
FCzHz443IX60uN1y7NyVFEo2un/vsyY8HNTjKSZcFPZ+tJcn/vlpcVqvw0wK
ByrmXCshvtqoKPmcmEUhxf1XVNsPIXKvqR/aQPSm3wPXpL03if9GSeSWBCEK
hN2p5wj/Mrat6LsQIUT0e/bt2bFC+PMi3lhkCvF1mTGDWyXE1ePlmbdGUBjN
D9PU3EEhP+RAfkEpBd0L0FmyQgkxqxwez/ymhD2Wg7VOGoiQ6Rh+c9U5ESgn
w4s6hIOnfNRKrQgHg/X0P40kHCycKo4ttBTj5EytCWcIBzFqVPl7cwnqk4yW
PSYcnP533qcrhIMjRRovq76qYEvY76q7hIO3wroenyYcTHWv2ff5HwfPfv3F
IBwM+2j6fzhYnxthq/ZODTd31k5J4qnBb4jpxs9SVVS2+ygc3qUC7o3RkZtT
JFAM/jvQ6ZsYWzs3f/MYIYZRlGV84DplHDXer5l4UQTPwuFV578qwdaneuPC
IxTS5+s9WTJXiL7gTn4tQ4Afkjsus7/wMCx+VpLrWy72vPQzOFfFwbY0haNN
bA46Vult3rGEjRnPSz1np7HAPuB9yHoaC30vbyxRfsXEc+OsnaYBTHg7l76a
uIaJ4Qf2NmguYKJ76d/FL/SZyEwY+rPHgImvDye+eE04t30W61DoNiai7lRP
yzzCxGtT73utCUzMi0uaPfw2efzkazP9Z0zMP2t03zmfieycsK9fH5Hj4/ya
nmQm2q81XlY7yIRj46V3cWDCoaH+el/9/+8/p/t/6f5Luv+N7j+i+z/o/Hs6
/5nOP6Xz/+j8Kzr/hc4/oOd/6fk3ev6D3v9M7/+j97/Q67/0+gd9/09u9H/8
r5xM/0HGP4t95ZmfN7yX6v4s6vDw/CS1yBmfcaugSupjN1YkMquRiuQ+JU/T
rpMeWbl3DNusURrXu4jjtbxFWj587RtheJvU/+3GoSPfdEhbhhzf3qn6R/oo
dozHWPMuafISD3bM7m6pwKbPx8u/V7pbY8LxaTv6pY3W+VeuxcjhVvf9nSUb
5bHkwZ7VjhIF7JLb+yX/pgI45i8Tf8xVxN2wXXtnXFMEK26ghiKXAfnEOU6+
FgyMLRgxuTiA6Lih7S/krjGw+OTRS5I8BhaNzbLlEJ+wqLSypZLouTQbM5dz
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
UtY/HfncImN4hBl5vtX+R9OcWFDV4grEh1h4tjhEMjiKnLc/Lw7cfImFs1Nr
XKcQXzPVt0qh6CILY1v0nyVHsLB7tG3u1C0sZHkp2fzSZWFIpM1kN+KH7h46
4K61h4mppstZ4W2M//af0/2/dP8l3f9G9x/R/R90/j2d/0znn9L5f3T+FZ3/
Qucf0PO/9Pzbf+c/ZPuf6f1/9P4Xev13rWz945js/t92mf91ovWfjH8zK8ed
PlryTWqxbfX7asUfUt3VCZ4RxxqlZXUqEXJ6LdKU+tld32e2SS3OXpjSZNEh
rStx3T9t52+pj+cTC9HJTunUohU8wbW/0jyn39yO2z1SQZXCvreX+6QdD07/
6J0rh9rIIUkHJPLYojRjzJtieey7c/LckV0KiPZ5fDZXqAjVNY+cDvybh3wl
fK/aoYgo3wGHS42ITnv66mgL0YG9b3cY7btF/Gsu382b6L9BlgpnexoYGHUp
WNDyr3f+t37yyj8MXFab5jyF/F0+ac+sjiY827ZSt//ffb9pnu1f84oIL1dl
fpxLeDjo6JV5F4k+vJnttOQZ8ctto3ofnHrDgFXlclWLZgbmfV/pvn0oExmP
5uSNMifX2SSDJayTTPQd/LL1RR0TFbkLTS0WszD/Zz3zVBY575anVaVOZmPu
44zenHQ2jibc+sSYycG0lwV70x9zkBZ5cDDLggt9zY0ZqOQCRQ/exW7hIWL2
17lLfvOwfp1xrvd+PijKrXxVDx8lQRkrf7oLUOa4+6z5FwF06/ymH1wgxNbv
1tt2EB3W+eTeGqUyIb4tF3zLkVA4EmvPTJBSGHHn2XepHYUzI/IdxmyjcEV9
nla5O/GnMVZ3vroRXZia6pxPeBhnyzDUJLx8ed+gL3IWBTPjNdmV6sRHb96c
X6hAdNu1dU0raoWwdDxzPYD44/7Kp+LYu0LoRUxjtqcKQa05gSFXhdhdrRbz
ivjhc/s/Jv0pFGJnnFZkepcQampOcxfNoRAfG5wUHkz4/Ltrc3sLBZf0mT95
W5UQpV9f7NqrhEUTPTVWW4jwSu7Sx7QrIngMfw2+UBk7I9p8U3Yro63o060P
35XRouV+uNRWjFHq47vqS8UwPWoQaL1agugEx+luHyWomElV71qrAqWN8ice
1alAOzH3+6WdqljsOcj3aK8qzpztOFR2RA0oT1eUVxkAvReH/s96sRpmpo76
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
c5TCq4BB5lMJr14bN8/wsCY6Ll63xmUehY6beSV8TQqSarNZLkR3ukxbEHKf
+F6vbb9iHOqFuHnafP4HwsMl2hl7P7YKMSyb8R58Cqdd60wGzKDgL98ijiS+
e2WoTfGV5xSGr5cMj5ighO8Gvoc/JSvh6pag2dRQEYbMaattcxVB9+CvHxty
RZi4qWZt8hiiA19En2AdU8bU/tfWT/uU8fFP6fMx7mLURhf17GkUw1XeekIf
8aeSquiHrAYJfs3SD6jepgKdwCZBXYcKvF6db/XYr4q4G5mGzYSD9c/etOUS
DgpSbTX2EA4m6oVF/i8Hl/NbV/j+UcOenjuZSeZq+Hy4aYj/JVW8yws6dr9f
BcGZu716rVQwRN2dqZApgUGg1dZjykQXbimy2buT6NMj22ZFlCpDn6cXeme+
MlZUBLgUpYtAPav8/WCsCKYDUzSKliohZZKP1NWOXKeGFi9UPyiE+uPOH+k3
Bai49aylWUGA9U9Mhp114kP/4xMtnzoejrH3J6zx56Fyv7LHE10eVhV2ON75
w8U1RZFo3jsutLTusUKfcfErir9CiRwNJ95qdCgiXFPEKhPCtSvGs0896eVi
wG0nz9ZBPIwfVmY7bDoPQXFKLjfNeUhquLrfeCMP15TfX9u/g4f2paOTVHbx
EHvp7OUqVx7cvxxIyl7Fw4Xwu5yT5PVffe9JWdTJxVaXxkc5V7mY8Tvmefki
8nus8Gmd8pGDQUZH88QrOBg/2FZadYeNsNIJ8QI+G+XlqyrViD78oXR6dJgv
0SmuM0NUrjL+239O9//S/Zd0/xvdf0T3f9D593T+M51/Suf/0flXdP7Lf/MP
ZPO/nbL5N45s/qNDtv+Z3v+3X7b/pUi2/qsrW/8YK7v/1ynzvyky/TdSxr/0
TcN+WKfIYeU1/2ND7eVxclJLcDtPAaXn0oLOXFfAYnbBqyeLFKGV/zitu4Rw
UG/hm+emDJRNH9oSnUK4xFVADZMJYa2LNMiECbe7KcXPPYn+cpvz9XkUE+rp
7eHn/t2Xe/I+bdVVos+WmmTXnyc68dJOpiXh4YrY2RMPE314VncQtY/45dlb
3B9PmcWELzuSn63GhN9ln89ziQ687H1G+yfRf8K7k66MymZg0LIb3xxTGVh7
JVJ59SUG8ozi60quMZByqN3sRy4DQwf1JnxrY+DXQqsHB4muvGypP1+TcFny
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
lQjLlQqb59wQ4a796PnfVJUReendqLSDyvB9VFZd2ayMYxXrt2Q6ihFXaY5d
VWLc4G7Y7eQgQe7qoZ/KvkhwurVAV22zCiw3unrtblLBNh9/q9V7VCF6u8Zu
uLwajFYu2CMNUcPusV9NpxIOzgkrDv9fDh7cP6AkizUACzY5ntTepobljtVz
rd+p4kuXan2FvioMJq1NtkxSwT7zG3KblFTwalaje76XBB7v13XPbhBj5XnN
o972Yoy0N0q0e6+MDaePfkmyVIah2vUHY0pFmG0YuPLmOhEC6nJfLahTwuPG
zO796krQ0JLcuE/+Hi/mB5smPhNi2Pg3jKJZQvxkWHRWkb97zpwHXz22CDBB
zSNuooYAw3WCLHV+8hEdEthRTM6TczrhyXdy+DCVV9qQ+JgPjyVWZn7kccX7
/F27iJ50q7tY8ohwlFF2+v6bAQIsSbb9iKkCLHy18sq9pQL0u4tSVBwFhH8N
0mnkurtnrtKSIQcEuJX3+ubbfQLYfA58sM9VANcMddMJFgJYt1joUloCpCW8
89H/zkeHrl3t65N8bLlqwLGexceiBcsubsjnQYlzfKiqMQ87jnmMPZPJhd/4
RYzJKlxcnVa2mSJ+eaNua+qBDDb6jS5qvf3Fgk+6XejuqSw8315S9Gk7E5OV
1tSHpzL+239O9//S/Zd0/xvdf0T3f9D593T+M51/+leW/0fnX9H5L0dl+Qe2
svnfTtn823bZ/Md32f7nWNn+v07Z/pcRsvXfGNn6xwLZ/b9PMv87RKb/Gqf/
h383hpkf3N/OgHP0jZf9xFe2RQ6ZnuTPhGHPc881GUw4RC/4df0DEwXej5fG
/GSi5kRcyNIWJiQ6k+e2Ew6ufZ9efJ7oQyeLj5bbiF/+O+LNvrWeTOhtoni+
hkwELVP1KRMwobNST+xRzED99OutzuR1WXFF7yqsGdh+2egpU4uBsLJzSpPa
CacXr/N98kIRzwbXn1+aqogZ6VdU/c4o4qr70jrpWUV4WRm8OUU4bnwmcmFB
hSIuMutVn4vJz+UOCzW1Z6BwrMUhS8LDwIAZIuEEJmrjnG+8vMJE+jabEjb5
O1r/rbpilcvC2kdXL7o5sKGsWaGm0stGh8melcPPcED5G5p6zuVijvUDc9Vy
LswH2ro37+ZBT2GkgCfg4+AEZsKWaD54IcEDhw0juiBEa9zYUwLAw58b2S+A
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
J/KfifxTIv+PyL8i8l+I/AOi/peofyPqP4j9z8T+P2L/yzbm+m8Hc/3Di/n8
b4npf7mZ+u8Bk39nPMzWD9tyQwm72FgDNy98TrvgFVeO7melSqLm6L437KId
Io3+Du40sact4FQ4v6y7+xYL8mPC8hwjExioHv66Wu4rDjxGKUExLTR4PXdS
8k4FHd6PiUU9zWaAy3yY9385GD7VkZRoKQBOYZmPTwoLQFhlho9wJwMUdUKL
Oe4xoHdHiYHrEQb4OAg0ZwgywBGmh9k66eBGp3q13qfDo8H8JSdbOpQfO9oj
uZ4Oc9Lj4yZTNPDqzm43Rjykil154oH0YXO1agDZhgZy0c2m59VoMFV4OnuJ
QoNrlVmfZn7isHbviYVnrTgsNbj6XCxBvBlPzUzKwMEmhRb3Mw6HntU3N++9
hUNQ+cnTkyE4RGkliEoF4+BnEl2igV4rWQkuhIbjcI+fYRYShcOJ7gcOGfdw
sLdLFTqViIOToET5fsTbtO1SfBPIn3ecKV/+kY/4+SywrKEIh8jptxZ7ShH3
7milcr1Cfl0j93NWGQ5k2xsXhopxSH5x/tfxQhycKcs36p7ioEv37C9D82aY
PesyRteLEBBftLmBuGg7+83hDA6dLwYihsxwCLh7R9YU8ZkWcYxNCulOM76X
b8qRjqzLv1R6exyDib/BAqzI/zty8t44i/x1xenxV5qxGHwXaXcs88Lg0K8j
Y4ePY5AjEXPXejcGY4GnRlQ2YbB2pIlNTRTd96gROjW8GOBcCryGiJc/BC5U
bJ+gwoVfIj2Cg1Q4/OfeleVeKpDD3VrvfqFC0KatnWvR+Hbx052xbipkLNTs
Nkd8nXrXWfipH3FwW7/qMPLrh4zG6+mTVDCX75Gd+I24t0sln4b0apXiDi/J
RSqoLDebVy1RQdzv3Ow9NGZ2zMzuR9dPLJRTujlLhevlHd+6fyKeCletmftB
hb8aqbIn2hCXJ5u/FbxGvl73tbljJhoFLp68fpsKd8vbPtSfo0IOu2gvtwkV
Hk7YpE0pUsHGtbluE9KrIVyhqa5fKDDtsPxkZy7y7X6V7w38kK9+oa+6wpwC
OqPd3ZMKFOAxy6qLW0mBlf4/RcezyXBQ7k79lDUZJoW/hSjgZFCtuvbBr54E
X/POcY4GkmAb+6cbJoYk6NxHU6sVJgFboEuJzTQ/1O+1oJt/4IfJZrf70s/5
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
bY+nwWR5tqYZQhFbwxaD8DQa9K/4W3z7CQ1OczlqrMqmQRfr3j+teTT4Eajf
d72QBhedJp/2PEfvu7/9konGF9/0R9LR53nZ17snJocGr29kBKqg8/cP3rHQ
Rvr2clLke+27aD6eJ+vig9HnqNzhmo/0rtxWjyN9TjRgZJj/9ke8VXyW1jC5
A53PVjnrsQH9nqJ0jGyEEeebKc+Xkc5cmZnsFj+JQ6N7wCOvLsTFpk1jg7XI
n3e8WyGB/Hsy7hRzFvnwCN1TRgIRyG/LvauzuoZDy+UjzZFuSH/K3X+xfAIH
V7L8+0VL5L+zQ6cGTXGAg5kxCejvI8uE5CNuhF5LSXW1IR16R/7ZrPYBHN4W
Wfz5cRCH3SF6/ubo+Hvfue20j+JQ3b59UdMah5yOhql5WxzmPvDGq6H5/36k
hyefwsGZxVxhCenaUaqjOqsj0uEpLK5n0PvUo2Xbl+xwyOM+7nkKnV8+M7Js
i+ZVFpGrvr8Xh4mtq65WauHwoeXCQ3cFHEywKqkxpIN5gr2PN7HhYBNqk5+G
OGsTPl+1hHjt+lXGyCwXg5GFxN2KiJcUnea1v90wWMxQERQyxiAmgq+QawMG
V9do2qyhYAA3YgWrkB8fzTS32/uOCoFvck3wXCq0QEnL2Wjk1/d1cJZeQt+f
jftJxrbI90dvqQjdS4U9wkrvWjWocFXz74oIWSq8f3YqVV2MCoyAFT/jaVQY
kA10D+FHPr8ExCW4qZAaXSN5i4MKt9qiWUXZqdDWU5AnzEYFo+DDqdMrqTBW
J5JHZ0Hve37hYlmiwJNBB85tfyiwfcBc3myKAinmiaz9gxTgTeRZ59WFuCzF
aVrQQIGZMwfjpJDfm5y7EPlvPX/wh1fdgi8FsvL94epxClSbZ3K5bKXAZ/2s
BT0yBbzl957OeUUGzVjJfBkTpFvPJIhLdpNgOmj/0pA1CXQGBim1nfxgG7F9
Bjfh/1//c6L/L9H/kuj/RvQ/Ivp/EPn3RP4zkX9K5P8R+VdE/guRf0DU/4Yw
699WMes/zJj7nxnM/X8ezP0vf5jrv4rM9Y9R5vM/wv/qM/UfP5N/jeWTUp/9
MCBNmTyRlsEhaYq63ezNv77BPTkVzjSAoQOCDRQ6XDi0dWEmnw6P76madZgx
QEtHJEt4Aem5YWs+//9wcCny1+QLdwFY33fla46BADwd0tv2UEQA5jzkLJ9N
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
JNCyr1UyeTkE4lk53edxg0DW8mV3W84T6Mng6ue6IaCnnLyfOrzBF4qWtglA
3FSjWSu5fAeBeL+e8DQCXVnfJrlsAOJu68rSip0Qd3vsXlz3DnS5Yzz3eyXo
Mbv/Obv/L7v/Jbv/G7v/Ebv/B7v+Pbv+M7v+6Rm6/p88Xf8qhq7/okjXP/Cj
z/+yz79V0+c/gun9z4vo/X8j9P6XJPr+7wf6/sfYql+//8XT+W8fHf9NWv7S
v2yNbyKrIA4sV7PkmvClUKL0RNx/dTDXeluT8xUKtRhdilEDPWzZcDFhPhri
v1LOC29BF7VtDl/OP02h6wuThdJBH9VNjJ/m+1CInNga0g15tFWUb7D+IQrV
d5n8/WIv6OWjLs5Ee7h+VIsjy5pCgj3OogzQTzvDZrd75hR6am8zWWxCIf7e
1jRl0FOn1m4tHkMKuRcOOFtvpNDNNFS2AlHIKHJu2FOfQgVyT+/zgN5aHN33
XkqPQsGLLgYmQ75eH/V8iTfQnV94UQzw3tLOlZ+A24ZOrLGBcVpVu5d+B7ZK
/Qy4BNeHbpZeuwHme1huXvgZmGj3khlgAOtI9eyZAOp7KPiawbpVq0SXngJG
KGz9+w/gjRT3hTpAY4twg8cwTqH1mMcgXF/3pkm6AeZdd/bmZASsc+N4GzWi
A/OcWZsqoE0hpfY4k+9rKfRKZG5XyhoK+ZqFX/ifOnC41SUW4urRtSF13asp
pMKocFBZRaHx20Fe/goUkv/Hd9EL+L/1jfTOqq2gkOphkjdfmkIJvaX/WEIc
7lzgmygjTiHOiHXCcqLwd1aWHNxHwfvWmtUZIuB9Ks2014lQ6JZjSSoX8MDA
ZI6dMIVkNv3cxIuZ0jOxEPi6IU5cE9jNN5oVC0Qf8xmcML48w+F9CPAOU6x7
EczHJ+bwKgwotTFobhSoe9Xf2oikEG/OHhk/oDBqrDoJdDvx+bEZMI9D26AX
xh1X7Nm2BkjIN1tqwnzM6b7V7eCLVIXeV5llMI+ibO44P7xO26mCG5BXBMc7
KLaAX8bX2IvlcFNoxNqklsmg0Mkh9QSfefh83wlbEgaf69xDxgM+k6CHg1uZ
ZmMkWv5ygbzsN9D9yJBj05CPcB1bqtcD/u/sUMwcAD8rNSopEgW/k9TUUTwF
firdEFojDX650jxGle8d+BjPOy8L+N60JPdaT78CH/lL7YkQ+Je2g/WTO5DP
uHG6mDo1QLwby+sRAX62PCbUdnE99rcuRnUdiXzD04uygfyyaotSgK/7in+P
B2pPfah0BzroZLavAPZwPbDMqIX17h183FtDokNhYcaN1STqzMhJ3gf+GOmq
fCKiEnT5Vc6FNeWg/++JLbaQR811DAYPgl8KDR/+48NDEnG3h0eK3CPRbzUl
gjF3SJQnKlnxJJNE58ocuaXAL2cSpdd8uAJ+6vnGXhDyLKPMep1+8LcUlTbl
s6AXxbq7TQQhTwqO9nLI8YT4vbRy6Az4zYQcw6AU/EbOIscmDPQlT7VyMacl
+I/p8bY928l/+5+z+/+y+1+y+7+x+x+x+3+w69+fpOs/r6brn7Lr//XT9a+S
6fovBF3/QJQ+/9tEn39Lp89/hNH7n1Xp/X9Mev9LCX3/t5K+/yGZ+ev3vwd0
/tvS9Cv+66f1byrKQtA0ikImugYz/9XB2sqjmzHTdz6TwzQZ52VgShZ7duNx
dQyhCsymObFUTE3X+yGYtQpcLpjxIzpGmN9mTythrrwzz4e5x/zzGM6/F7TZ
tWE2PIx9hrnuQnouprRxXTLm3/VyMZhyzLZTmOcLiaOYthzThzDFLPj3Ys6+
1bTHTPAMs8V8xHfDBvNwgwrr8aeWTjvMEh13B0x/vwhnzDa1KRfMc/cDWfNJ
uva6Y6IdE0cwj1kHeWPyFFj5YFqSJscwmR+YLAZwtrFejygp7oUZVFjKul7g
+4X9mMd7/RxZ4zQEdmPyf5I1xXyVP7QBU1/6riZmxsZkRdb7mRoWw9zyo5UX
M0L84hy+b7XQe8t3TN5Hq7oxZ7IPNWHaBTJrMKfd8p5gFhhRuZgftP9Mx0wP
3pOEabM59SKmgs/1WEyrh+cjMZ+fEzrLmk/L6wxmXOs2FovPbgvDzKqVDsfU
qA9hjQ/crx7Dej0qY3GYDj5x5zH3ozes+fdbR/+JmaYRdwmzfvYvFnkjHrKe
t7UOZI3TjXsTj/l7V0AUZncMCsXk1ujxxyzMlziCWd5dtBezOYfvd8whc6tN
mF1VI0zM6xFrJTGl/zq+GDOMi2MM73+19pJoxwwQEqrBzHoml485H3M+CTNv
TeJZzObp40cxKccDjpgrxNJMMbtk3dZjJn2cUcEsOXxlBabViujlmHUzsssw
7zq4LMGsPDTOhcn79HcGpmrBLCemjqsHi3wemiwuOf2NA5NDT49Fr4Jnc/j8
VofAuh+YJau3TWHWGN8bxZy/ozSI6ebr1oWZsFPlHeaIl3I1Zq69ZAEmj0he
CuaAwMUwzJMnjhzClLtVtxXz58MxecwrjFscmOHPbjbjeirilzLuYLok+QVh
hlzr3IlZpJCjgNl8PecHrkfKsH3YiMnMup6D6dBrGI2Z6xt5GFPltdkuTHb/
c3b/X3b/S3b/N3b/I3b/jzN0/ftGuv5zEl3/NIuu/+dH179i13/ZRNc/OEyf
/82jz7/F0uc/Quj9z8H0/r/d9P4XJ/r+7376/kc8/ftfguuv/NeXjv/adX7p
3zODGZb+/R8fdGLc
   "], {{0, 0}, {161, 161}}, {0, 5.904824808031167}],
  Frame->Automatic,
  FrameLabel->{
    FormBox[
     StyleBox["\"y\"", 
      GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"x\"", 
      GrayLevel[0], 16, StripOnInput -> False], TraditionalForm]},
  FrameStyle->AbsoluteThickness[0.6],
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->280,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotLabel->FormBox[
    StyleBox[
    "\"\[LeftAngleBracket]\\!\\(\\*SuperscriptBox[\\(\[Psi]\\), \
\\(\[Dagger]\\)]\\)(x)\[Psi](y)\[RightAngleBracket]\"", 
     GrayLevel[0], 15, StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.837094387997348*^9, 3.83709441185564*^9}, {
   3.8370944520876007`*^9, 3.8370945071662397`*^9}, {3.837094544335285*^9, 
   3.837094560854247*^9}, {3.8370945980564528`*^9, 3.837094617912334*^9}, {
   3.837094662950564*^9, 3.837094809835857*^9}, {3.8370948785508432`*^9, 
   3.837094905799563*^9}, {3.837094936288838*^9, 3.8370949790066633`*^9}, 
   3.837095042546329*^9, {3.837095142535581*^9, 3.8370951540703287`*^9}, 
   3.8370953869043093`*^9, 3.837099554002205*^9, 3.837181662259767*^9, 
   3.837192680821219*^9, 3.8371930685202208`*^9, 3.837193407923483*^9},
 CellLabel->
  "Out[971]=",ExpressionUUID->"791c7277-0cd3-4023-aa84-850f328e9707"]
}, Open  ]],

Cell["The density is simply given by the diagonal elements.", "Text",
 CellChangeTimes->{{3.8370995610504513`*^9, 
  3.83709960213511*^9}},ExpressionUUID->"0013d07f-1429-4f22-bd55-\
7972483063b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Diagonal", "[", "spcorrmat", "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Black", ",", "15"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<x / L\>\"", ",", "\"\<Density\>\""}], "}"}]}], ")"}]}], 
   ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Subdivide", "[", "numsegments", "]"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8370950143510313`*^9, 3.837095026823522*^9}, {
  3.837095101842534*^9, 3.8370951565135927`*^9}},
 CellLabel->
  "In[972]:=",ExpressionUUID->"f5d95054-5a52-4ae2-82a9-558e744ceb9d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/wKwz0V9
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Density\"", 
       GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"x / L\"", 
       GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->AbsoluteThickness[1],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 13],
  GridLines->NCache[{{0, 
      Rational[1, 8], 
      Rational[1, 4], 
      Rational[3, 8], 
      Rational[1, 2], 
      Rational[5, 8], 
      Rational[3, 4], 
      Rational[7, 8], 1}, {}}, {{
     0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 5.904824808031167}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8370950185981216`*^9, 3.83709504460639*^9}, {
   3.837095104234626*^9, 3.837095156851098*^9}, 3.837181665709387*^9, 
   3.837192683301964*^9, 3.837193071479063*^9, 3.837193410310923*^9},
 CellLabel->
  "Out[972]=",ExpressionUUID->"4f33f30d-8143-4f24-9821-b6fdaf84270f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Entanglement entropy", "Section",
 CellChangeTimes->{{3.837098368526957*^9, 3.837098393508072*^9}, {
  3.837099635797875*^9, 
  3.837099665918063*^9}},ExpressionUUID->"f47da396-2ced-4eab-9c8a-\
7e8181d2a973"],

Cell["\<\
The DMRG routine automatically saves the von Neumann entropy at the segment \
boundaries.\
\>", "Text",
 CellChangeTimes->{{3.837099668724175*^9, 
  3.837099693877439*^9}},ExpressionUUID->"67dc3875-564f-4544-af07-\
760161a35b2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"ArrayPad", "[", 
    RowBox[{
     RowBox[{"Import", "[", "entropyname", "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "8"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Black", ",", "15"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<X / L\>\"", ",", "\"\<S(X)\>\""}], "}"}]}], ")"}]}], ",", 
   
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Subdivide", "[", "numsegments", "]"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.837091678409914*^9, 3.8370917954410563`*^9}, {
  3.8370952691067867`*^9, 3.837095269192484*^9}, {3.837095505510933*^9, 
  3.837095508498724*^9}},
 CellLabel->
  "In[973]:=",ExpressionUUID->"01507e3a-d5bd-4642-9202-e689a108985e"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      LineBox[{{0., 0.}, {0.125, 0.6017410998200237}, {0.25, 
       0.6169775565313808}, {0.375, 0.8006044370329726}, {0.5, 
       0.6239107758891284}, {0.625, 0.8007531625515855}, {0.75, 
       0.6173873165715853}, {0.875, 0.6012596782912831}, {1., 0.}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0., 0.}}, {{
      0.125, 0.6017410998200237}}, {{0.25, 0.6169775565313808}}, {{0.375, 
      0.8006044370329726}}, {{0.5, 0.6239107758891284}}, {{0.625, 
      0.8007531625515855}}, {{0.75, 0.6173873165715853}}, {{0.875, 
      0.6012596782912831}}, {{1., 0.}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"S(X)\"", 
       GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"X / L\"", 
       GrayLevel[0], 15, StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->AbsoluteThickness[1],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 13],
  GridLines->NCache[{{0, 
      Rational[1, 8], 
      Rational[1, 4], 
      Rational[3, 8], 
      Rational[1, 2], 
      Rational[5, 8], 
      Rational[3, 4], 
      Rational[7, 8], 1}, {}}, {{
     0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->350,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.8007531625515855}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.837091622834968*^9, {3.837091746971938*^9, 3.837091766149393*^9}, {
   3.837091796607915*^9, 3.8370918046312532`*^9}, 3.8370952695698347`*^9, 
   3.837095508946104*^9, 3.8371816718578987`*^9, 3.837192692161106*^9, 
   3.8371930802243233`*^9, 3.837193415927891*^9},
 CellLabel->
  "Out[973]=",ExpressionUUID->"8cc4f940-8016-448b-922d-a3e3db813b08"]
}, Open  ]],

Cell["\<\
To calculate the entropy at an arbitrary point, see the notebook \
\[OpenCurlyDoubleQuote]cDMRG_basis_splitting.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.837099668724175*^9, 3.837099748018776*^9}, {
  3.837101605292543*^9, 
  3.837101607251563*^9}},ExpressionUUID->"168a2ee3-c5cd-41ba-941b-\
5565203eaf50"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1206, 660},
WindowMargins->{{Automatic, 13}, {Automatic, 10}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d9d0a458-b0b4-4e03-97a6-2b48189c74fa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 164, 3, 69, "Chapter",ExpressionUUID->"6c1d040a-894f-4138-9d9a-d81b15dbb361"],
Cell[747, 27, 190, 3, 35, "Text",ExpressionUUID->"3047f02f-cf7a-422b-b52d-3982f23c04a0"],
Cell[940, 32, 338, 7, 30, "Input",ExpressionUUID->"8f15d4b6-0506-4592-975d-766a40cfeba6"],
Cell[1281, 41, 302, 5, 35, "Text",ExpressionUUID->"5c0897a1-d82e-4f5e-ad82-8cd6e61a447f"],
Cell[1586, 48, 1392, 41, 73, "Input",ExpressionUUID->"82978e16-8a5e-42e8-91ff-3401ed2f9d6e"],
Cell[2981, 91, 1040, 25, 73, "Input",ExpressionUUID->"b66f5d10-dfdb-42b9-adc6-e0bc92cf7705"],
Cell[4024, 118, 1539, 41, 199, "Input",ExpressionUUID->"92c870fd-3af8-401a-9858-0a6a378db160"],
Cell[5566, 161, 219, 3, 35, "Text",ExpressionUUID->"7a1afee0-190f-42de-b080-cc6c75dc7d56"],
Cell[5788, 166, 1715, 50, 94, "Input",ExpressionUUID->"6d869ad2-3d52-4490-97c0-3d171820338d"]
}, Closed]],
Cell[CellGroupData[{
Cell[7540, 221, 160, 3, 58, "Chapter",ExpressionUUID->"13d099c2-5f03-412c-9e8d-c737ded150c3"],
Cell[CellGroupData[{
Cell[7725, 228, 201, 3, 67, "Section",ExpressionUUID->"64215894-da02-4988-ab72-4ccb14505e89"],
Cell[7929, 233, 792, 20, 178, "Input",ExpressionUUID->"e5fd98f3-9e66-4f67-a1db-25a866174338"]
}, Closed]],
Cell[CellGroupData[{
Cell[8758, 258, 163, 3, 53, "Section",ExpressionUUID->"4b262845-df1e-4930-94f1-1792345c18f8"],
Cell[CellGroupData[{
Cell[8946, 265, 510, 11, 52, "Input",ExpressionUUID->"f46201c1-8d68-42ea-a6f7-42c6c3027a8d"],
Cell[9459, 278, 1451, 31, 67, "Output",ExpressionUUID->"b038574a-7c8b-4f21-a36f-58c43b5c44c9"]
}, Open  ]],
Cell[10925, 312, 220, 5, 35, "Text",ExpressionUUID->"15650eda-ed2f-434a-a938-d31ee87df31f"],
Cell[CellGroupData[{
Cell[11170, 321, 480, 12, 30, "Input",ExpressionUUID->"629f3351-4e3f-41f7-a85f-d5c2d7edd0bd"],
Cell[11653, 335, 566, 14, 34, "Output",ExpressionUUID->"f4f322e4-be3b-42bf-8d70-527f814afe6d"]
}, Open  ]],
Cell[12234, 352, 228, 4, 35, "Text",ExpressionUUID->"9858c297-6b36-4990-9d9d-de18055f454c"],
Cell[CellGroupData[{
Cell[12487, 360, 452, 11, 30, "Input",ExpressionUUID->"2e4f1739-1f0b-4601-af4a-0b7afafb64d0"],
Cell[12942, 373, 804, 18, 34, "Output",ExpressionUUID->"706bc383-880c-417d-a209-2249c9cebdd1"]
}, Open  ]],
Cell[13761, 394, 278, 4, 35, "Text",ExpressionUUID->"22a122b4-9427-484f-9ef5-6e48c815f931"],
Cell[CellGroupData[{
Cell[14064, 402, 1685, 42, 79, "Input",ExpressionUUID->"1e2519ed-f254-47a3-8dfc-4d81ee94985a"],
Cell[15752, 446, 40244, 870, 256, "Output",ExpressionUUID->"94a092dd-90de-4c1b-9d04-cbb09be6a93a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[56045, 1322, 210, 4, 53, "Section",ExpressionUUID->"1a08d85c-094a-4ac8-9524-35bbd877a2b5"],
Cell[56258, 1328, 188, 3, 35, "Text",ExpressionUUID->"53de8964-6277-48c1-9fa3-4b82642ba3af"],
Cell[CellGroupData[{
Cell[56471, 1335, 380, 10, 52, "Input",ExpressionUUID->"32c66878-ecdd-4f51-a613-e66d0f581868"],
Cell[56854, 1347, 1659, 35, 92, "Output",ExpressionUUID->"4a2e8816-9ea9-4bfe-962e-aa58281a54e5"]
}, Open  ]],
Cell[58528, 1385, 560, 18, 35, "Text",ExpressionUUID->"f80fc621-9bbe-4dc4-a2de-06a9cf225a6d"],
Cell[59091, 1405, 873, 26, 52, "Input",ExpressionUUID->"e10ad860-f814-4bbe-951a-1398b61901f3"],
Cell[59967, 1433, 597, 18, 35, "Text",ExpressionUUID->"43a09fe3-c80f-4df6-88a6-bec99af7b586"],
Cell[CellGroupData[{
Cell[60589, 1455, 3294, 78, 136, "Input",ExpressionUUID->"5b84004b-5a55-4ebd-96b1-4b579dee0341"],
Cell[63886, 1535, 11305, 215, 255, "Output",ExpressionUUID->"77d78697-10fb-470b-98df-9b3c67c557c5"]
}, Open  ]],
Cell[75206, 1753, 1278, 37, 58, "Text",ExpressionUUID->"94fdffa1-ed60-4bd2-9b17-0abf88f8e398"],
Cell[CellGroupData[{
Cell[76509, 1794, 1969, 57, 73, "Input",ExpressionUUID->"83931dd2-fd58-4677-b849-e80e70668c59"],
Cell[78481, 1853, 313, 5, 34, "Output",ExpressionUUID->"a9ae45ef-c837-464b-9e7a-50ddbeea6a91"]
}, Open  ]],
Cell[78809, 1861, 537, 17, 35, "Text",ExpressionUUID->"343b72e9-c0ad-448a-a9d8-a66e92d2555f"],
Cell[CellGroupData[{
Cell[79371, 1882, 1402, 35, 73, "Input",ExpressionUUID->"a3d44f4e-7a1c-419a-820d-269b5aa184b3"],
Cell[80776, 1919, 34702, 839, 250, "Output",ExpressionUUID->"c6057eff-ad6a-44e7-9569-67b7210b129d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[115527, 2764, 173, 3, 53, "Section",ExpressionUUID->"3022d097-86b0-4f26-b85f-a143b6b74531"],
Cell[115703, 2769, 2907, 93, 65, "Text",ExpressionUUID->"fdcd22d3-532b-4f04-9173-3bcabfd0244f"],
Cell[118613, 2864, 177, 3, 35, "Text",ExpressionUUID->"60a50808-469d-442a-a0dc-c0e3f2be7a34"],
Cell[118793, 2869, 203, 5, 30, "Input",ExpressionUUID->"05553f79-e80b-4f97-acd4-76ee4d91d341"],
Cell[CellGroupData[{
Cell[119021, 2878, 214, 4, 30, "Input",ExpressionUUID->"a9dfefe6-3dff-4a6e-93bb-9bdaad322242"],
Cell[119238, 2884, 357, 8, 34, "Output",ExpressionUUID->"1151ba84-349c-45ad-a542-f6dd60bbff3a"]
}, Open  ]],
Cell[119610, 2895, 460, 15, 37, "Text",ExpressionUUID->"1fa4bc39-65c6-4e86-bffa-f344b19d7a75"],
Cell[CellGroupData[{
Cell[120095, 2914, 264, 6, 30, "Input",ExpressionUUID->"3cab1679-b481-4e99-b356-7cd7bc3b237b"],
Cell[120362, 2922, 18115, 350, 63, "Output",ExpressionUUID->"7878032d-6df8-4212-a4d5-4c457510bdcc"]
}, Open  ]],
Cell[138492, 3275, 245, 4, 35, "Text",ExpressionUUID->"8ec34615-826a-46ad-a75b-466eeae16c38"],
Cell[138740, 3281, 2720, 80, 136, "Input",ExpressionUUID->"47035b5b-fb8d-43bd-9380-eb8a333de786"],
Cell[CellGroupData[{
Cell[141485, 3365, 1229, 27, 56, "Input",ExpressionUUID->"084e4aff-00f3-46ae-b0fe-a4f3b376ef93"],
Cell[142717, 3394, 241267, 3966, 320, "Output",ExpressionUUID->"791c7277-0cd3-4023-aa84-850f328e9707"]
}, Open  ]],
Cell[383999, 7363, 196, 3, 35, "Text",ExpressionUUID->"0013d07f-1429-4f22-bd55-7972483063b4"],
Cell[CellGroupData[{
Cell[384220, 7370, 1292, 33, 73, "Input",ExpressionUUID->"f5d95054-5a52-4ae2-82a9-558e744ceb9d"],
Cell[385515, 7405, 4323, 96, 252, "Output",ExpressionUUID->"4f33f30d-8143-4f24-9821-b6fdaf84270f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[389887, 7507, 214, 4, 53, "Section",ExpressionUUID->"f47da396-2ced-4eab-9c8a-7e8181d2a973"],
Cell[390104, 7513, 239, 6, 35, "Text",ExpressionUUID->"67dc3875-564f-4544-af07-760161a35b2d"],
Cell[CellGroupData[{
Cell[390368, 7523, 1510, 39, 73, "Input",ExpressionUUID->"01507e3a-d5bd-4642-9202-e689a108985e"],
Cell[391881, 7564, 3104, 78, 246, "Output",ExpressionUUID->"8cc4f940-8016-448b-922d-a3e3db813b08"]
}, Open  ]],
Cell[395000, 7645, 335, 7, 35, "Text",ExpressionUUID->"168a2ee3-c5cd-41ba-941b-5565203eaf50"]
}, Closed]]
}, Open  ]]
}
]
*)

